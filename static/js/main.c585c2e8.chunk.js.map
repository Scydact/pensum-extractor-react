{"version":3,"sources":["functions/metadata-fetch.ts","lib/sort-utils.ts","contexts/university-data/index.tsx","lib/DarkMode/select-theme.ts","lib/format-utils.tsx","functions/pensum-converter.ts","functions/pensum-fetch.ts","functions/pensum-save.ts","functions/pensum-get-extras.ts","lib/set-utils.ts","contexts/active-pensum/reducer.ts","contexts/active-pensum/index.tsx","components/PensumSelector.tsx","contexts/mat-selection/reducer.ts","contexts/mat-selection/index.tsx","components/PensumDisplay/MatCode.tsx","components/PensumDisplay/PensumTable.tsx","components/PensumDisplay/PensumLoose.tsx","components/PensumDisplay/PensumDisplay.tsx","components/PensumDisplay/index.tsx","components/PensumFilter/FilterModeSelector.tsx","components/PensumFilter/index.tsx","components/PensumExtractor.tsx","lib/DarkMode/index.ts","lib/DarkMode/DarkModeSwitch.tsx","components/AppNavbar.tsx","components/AppFooter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UNIVERSITIES_PATH","BASE_PATH","CAREERS_FILE","a","fetch","response","json","unisObj","TypeError","universities","fetchCarreras","universityCode","university","api","careers","path","toLowerCase","carrerasObj","sortByProp","propList","length","b","prop","universityDataReducer","state","action","type","payload","loading","selected","code","data","find","x","imgUrl","longName","shortName","toUpperCase","console","warn","error","initialUniversityData","UniversityContext","createContext","dispatch","select","UniversityProvider","memo","children","useReducer","useCallback","pensumList","useEffect","fetchUniversities","then","unis","u","sort","catch","e","finally","Provider","value","optionStyle","option","provided","color","isSelected","undefined","placeholder","opacity","selectTheme","theme","colors","primary","primary75","primary50","primary25","danger","dangerLight","neutral0","neutral5","neutral10","neutral20","neutral30","neutral40","neutral50","neutral60","neutral70","neutral80","neutral90","classnames","arr","filter","Boolean","join","japaneseDateFormat","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","validatePensum","pensum","version","p","old","Number","process","institution","codigo","publishDate","vigencia","fetchDate","career","carrera","info","infoCarrera","src","date","Date","url","periodType","name","acronym","two","loose","periods","cuats","oldReqConverter","req","Array","isArray","oldmat2newmat","oldMat","newMat","asignatura","cr","creditos","prereq","coreq","push","prereqExtra","map","text","forEach","oldCuat","newCuat","loadPensum2","save","MatConverter","mat","period","loadPensumFromSavePensum","LOCAL_STORAGE_PREFIX","LOCAL_SERVER_PREFIX","fetchPensumFromCode","PensumFetchError","fetchPensumFromCode_localStorage","fetchPensumFromCode_localData","key","pensumData","localStorage","getItem","JSON","parse","Error","mat2savemat","pensumToSavePensum","y","processPensumMats","list","periodMap","Map","codeMap","postreqMap","looseUnhandled","Set","matMap","matPeriod","matPostreq","mats","warnings","processMat","periodNum","has","set","periodIdx","get","matSet","keys","setA","setB","_difference","elem","delete","difference","warning","PENSUM_STORAGE_KEY","createPayload","matData","activePensumReducer","setItem","stringify","removeItem","savePensumToLocalStorage","loadPensumFromLocalStorage","defaultContext","load","ActivePensumContext","ActivePensumProvider","m","SyntaxError","message","createLabelString","SelectUni","options","isLoading","onChange","className","isSearchable","styles","SelectCareer","isClearable","loadingMessage","PensumSelector","useContext","activePensum","error_pensum","loading_pensum","loadPensum","universityData","selectUniversity","selected_uni","loading_uni","error_uni","useState","pensumOnInput","setPensumOnInput","previousPensum","usePreviousValue","careerSelectOptions","useMemo","label","careerOption","universitySelectOptions","selectedUniversity","handleUniversityChange","newValue","handleSubmit","evt","preventDefault","uni","Card","Body","Container","Form","onSubmit","Button","disabled","Spinner","animation","size","style","String","matSelectionReducer","obj","fn","cloneTracker","o","Object","entries","tracker","mode","newMode","add","matCount","sortedTracker","fromEntries","i","k","v","untracked","isTracked","allOnMain","allUnselected","noneUnselected","someUnselected","course","passed","matSelectHelpers","MatSelectionDispatchContext","MatSelectionModeContext","MatSelectionTrackerContext","MatSelectionProvider","MatCode","content","TableHead","React","props","processedPeriod","periodNumStr","replace","txt","charAt","substr","Row","Col","MatRow","idx","cl","reqs","onClick","Period","cumlen","defaultPeriodType","PensumTable","sum","PensumLoose","PensumDisplay","Title","FilterModeSelector","Btns","elems","val","ButtonGroup","PensumFilter","PensumExtractor","isCssInit","setColorPreference","color_p","persist","initial","new_s","old_s","el","document","body","classList","remove","dataset","colorScheme","setTimeout","updateUI","id","querySelector","setAttribute","hrefDark","hrefLight","initColorCSS","el_o","el_l","el_d","getAttribute","DarkModeSwitch","dark","setDark","setDarkmode","OverlayTrigger","placement","overlay","Tooltip","checked","target","AppNavbar","navbarRef","useRef","prevScrollPos","window","scrollY","onScrollFn","current","currentScrollPos","addEventListener","removeEventListener","Navbar","ref","variant","fixed","Brand","AppFooter","href","App","Providers","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","osColorPreference","matchMedia","matches","preferredColorScheme","setThemePreferenceOnLoad","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c585c2e8.chunk.js","sourcesContent":["const BASE_PATH = './pensum';\r\nconst UNIVERSITIES_PATH = BASE_PATH + '/universities.json';\r\nconst CAREERS_FILE = 'index.json';\r\n\r\n/** Fetches universities.json */\r\nexport async function fetchUniversities() {\r\n  const response = await fetch(UNIVERSITIES_PATH);\r\n  const unisObj: PensumJson.Universities = await response.json();\r\n\r\n  if (typeof unisObj !== 'object') {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if (!unisObj.universities) {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  return unisObj;\r\n}\r\n\r\n/** Fetches ./pensum/$UNIVERSITY/index.json */\r\nexport async function fetchCarreras(universityCode?: string) {\r\n  if (!universityCode) return {\r\n      university: '',\r\n      api: null,\r\n      careers: []\r\n  } as PensumJson.PensumIndex;\r\n\r\n  const path = BASE_PATH + '/' + universityCode.toLowerCase() + '/' + CAREERS_FILE\r\n  const response = await fetch(path);\r\n  const carrerasObj: PensumJson.PensumIndex = await response.json();\r\n\r\n  if (typeof carrerasObj !== 'object') {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if ( !carrerasObj.api\r\n    || !carrerasObj.university\r\n    || !carrerasObj.careers\r\n  ) {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  return carrerasObj;\r\n}\r\n","export function sortByProp<T, K extends keyof T>(...propList: K[]) {\r\n  if (propList.length === 0) {\r\n    return (a: T, b: T) => (a > b) ? 1 : -1;\r\n  }\r\n\r\n  if (propList.length === 1) {\r\n    const prop = propList[0];\r\n    return (a: T, b: T) => (a[prop] > b[prop]) ? 1 : -1; \r\n  }\r\n\r\n  return (a: T, b: T) => {\r\n    for (let prop of propList) {\r\n      if (a[prop] > b[prop]) {\r\n        return 1;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n}\r\n\r\n/** \r\n * Similar to Array.map(), but for objects. \r\n * @example\r\n * const foo = {x: 1, y: 2, z: 3};\r\n * objectMap(foo, v => v.toString());\r\n * // returns {x: '1', y: '2', z: '3'}\r\n */\r\nexport function objectMap\r\n  <T, F extends (val: T[keyof T], key: keyof T, index: number) => any>\r\n  (obj: T, fn: F) {\r\n  return Object.fromEntries(\r\n    (Object.entries(obj) as [keyof T, T[keyof T]][]).map(\r\n      ([k, v], i) => [k, fn(v, k, i)] as [keyof T, ReturnType<F>])\r\n  ) as { [P in keyof T]: ReturnType<F> }\r\n}","import { fetchCarreras, fetchUniversities } from \"functions/metadata-fetch\"\r\nimport { sortByProp } from \"lib/sort-utils\"\r\nimport React, { createContext, memo, useCallback, useEffect, useReducer } from \"react\"\r\n\r\nfunction universityDataReducer(\r\n  state: UniversityData.Payload,\r\n  action: UniversityData.DispatchAction): UniversityData.Payload {\r\n  switch (action.type) {\r\n    case 'set/universities':\r\n      return {\r\n        ...state,\r\n        universities: action.payload\r\n      }\r\n\r\n    case 'set/selected': {\r\n      if (!action.payload) return {\r\n        ...state,\r\n        loading: false,\r\n        selected: null,\r\n      };\r\n\r\n      const { code, data: careerIndex } = action.payload;\r\n      const { careers } = careerIndex;\r\n\r\n      const university = state.universities.find(x => x.code === code) ||\r\n        { code, imgUrl: null, longName: code, shortName: code.toUpperCase() };\r\n\r\n      // Ignore if already selected.\r\n      if (state.selected?.code === code) return {\r\n        ...state,\r\n        loading: false,\r\n      }; \r\n\r\n      // University codes don't match!\r\n      if (university.code !== code) console.warn('University code mismatch!');\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        selected: {\r\n          code,\r\n          university,\r\n          careers,\r\n        }\r\n      }\r\n    }\r\n\r\n    case 'set/loading':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      }\r\n\r\n    case 'set/error':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n\r\n    default:\r\n      console.error('Unknown action: ', action);\r\n      return state;\r\n  }\r\n}\r\n\r\n/** Initial value for UniversityData */\r\nconst initialUniversityData: UniversityData.Payload = {\r\n  universities: [],\r\n  selected: null,\r\n  loading: true,\r\n  error: null,\r\n}\r\n\r\n\r\n\r\n// CONTEXT STUFF\r\n/** University data context. To be used with useContext() for getting selected university/careers. */\r\nexport const UniversityContext = createContext({\r\n  state: initialUniversityData, \r\n  dispatch: {} as React.Dispatch<UniversityData.DispatchAction>,\r\n  select: async (code: string | null) => { },\r\n});\r\n\r\n\r\ntype UniCtxProps = { children: any};\r\n\r\n/** Handles automatic load of university list. */\r\nexport const UniversityProvider = memo(function UniversityProvider({ children }: UniCtxProps) {\r\n  const [state, dispatch] = useReducer(universityDataReducer, initialUniversityData);\r\n\r\n  /** Select a new university from a given code. */\r\n  const select = useCallback(async (code: string | null) => {\r\n    // If no code was given, select no pensum.\r\n    if (!code) {\r\n      dispatch({ type: 'set/selected', payload: null });\r\n      return;\r\n    }\r\n\r\n    // Don't do anything if university code didn't change...\r\n    code = code?.toLowerCase();\r\n    if (code === state.selected?.code) {\r\n      return;\r\n    }\r\n\r\n    // Code was give, select fetch new pensum!\r\n    dispatch({ type: \"set/loading\", payload: true });\r\n    try {\r\n      const pensumList = await fetchCarreras(code);\r\n      dispatch({ type: 'set/selected', payload: { code, data: pensumList } });\r\n    }\r\n    catch (err) {\r\n      console.warn(`Unable to load pensums for ${code}: `, err);\r\n      dispatch({\r\n        type: 'set/selected',\r\n        payload: {\r\n          code: code,\r\n          data: {\r\n            api: null,\r\n            university: code.toUpperCase(),\r\n            careers: [],\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return;\r\n  }, [state.selected, dispatch]);\r\n\r\n\r\n  // onMount: load universities\r\n  useEffect(() => {\r\n    fetchUniversities()\r\n      .then(unis => {\r\n        const u = unis.universities.sort(sortByProp('longName'));\r\n        dispatch({ type: 'set/universities', payload: u })\r\n      })\r\n      .catch(e => {\r\n        dispatch({ type: 'set/error', payload: e })\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: 'set/loading', payload: false })\r\n      })\r\n      \r\n  }, []);\r\n  \r\n  return <UniversityContext.Provider value={{ state, dispatch, select }}>\r\n    {children}\r\n  </UniversityContext.Provider>\r\n})\r\n\r\nexport default UniversityContext;","/**\r\n * Dark mode support styles for react-select components.\r\n */\r\n\r\nimport { StylesConfig, ThemeConfig } from \"react-select\";\r\nimport './theme.scss';\r\n\r\n/** Include this to allow dark mode toggling. */\r\nconst selectTheme: ThemeConfig = (theme) => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary: 'var(--bs-primary)',   // Focus border\r\n    primary75: 'rgba(var(--bs-primary-rgb), 0.75)',\r\n    primary50: 'rgba(var(--bs-primary-rgb), 0.50)',\r\n    primary25: 'rgba(var(--bs-primary-rgb), 0.25)', // Selected Option color\r\n    danger: 'var(--bs-danger)',\r\n    dangerLight: 'rgba(var(--bs-danger-rgb), 0.25)',\r\n    neutral0: 'var(--bs-body-bg)',  // Background\r\n    neutral5: 'var(--th-gray-50)',\r\n    neutral10: 'var(--th-gray-100)',\r\n    neutral20: 'var(--th-gray-200)',  // Border\r\n    neutral30: 'var(--th-gray-300)',  // Border hover/focus\r\n    neutral40: 'var(--th-gray-400)',\r\n    neutral50: 'var(--th-gray-500)',  // Nothing selected\r\n    neutral60: 'var(--th-gray-600)',  // dropdown arrow (focus)\r\n    neutral70: 'var(--th-gray-700)',\r\n    neutral80: 'var(--th-gray-800)',  // Something selected\r\n    neutral90: 'var(--th-gray-900)',\r\n  }\r\n})\r\n\r\n/** Style override to make selected value visible on dark mode. */\r\nexport const optionStyle: StylesConfig = {\r\n  option: (provided, state) => ({\r\n    ...provided, \r\n    color: (state.isSelected) ? 'white' : undefined,\r\n  }),\r\n\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    opacity: 0.6,\r\n  })\r\n  \r\n}\r\n\r\nexport default selectTheme;","/** \r\n * Joins an array of classes into a className string.\r\n * @example\r\n * // returns 'card backdrop red'\r\n * let isRed = true;\r\n * classnames(['card', 'backdrop', isRed && 'red']);\r\n * @returns The joined strings, but only from items whose values are truthy.\r\n * */\r\nexport const classnames = (arr: any[]) => arr.filter(Boolean).join(' ');\r\n\r\n\r\n/**\r\n * Formats a date as YYYY-MM-DD\r\n * @param d Date to convert\r\n * \r\n * @example\r\n * let d = new Date(2010, 7, 5);\r\n * japaneseDateFormat(d);\r\n * // returns \"2010-07-05\";\r\n * \r\n * @returns Date in format YYYY-MM-DD.\r\n */\r\nexport const japaneseDateFormat = (d: Date) => {\r\n  let ye = new Intl.DateTimeFormat('en', { year:  'numeric' }).format(d);\r\n  let mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(d);\r\n  let da = new Intl.DateTimeFormat('en', { day:   '2-digit' }).format(d);\r\n  return `${da}-${mo}-${ye}`;\r\n}\r\n\r\n/** \r\n * Converts a string to title case. \r\n * @example\r\n * let txt = toTitleCase(\"john smith\");\r\n * // returns \"John Smith\"\r\n * @src https://stackoverflow.com/a/196991/13255686\r\n */\r\nexport function toTitleCase(str: string) {\r\n  return str.replace(\r\n    /\\w\\S*/g,\r\n    function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    }\r\n  );\r\n}\r\n","import { japaneseDateFormat } from \"lib/format-utils\";\r\n\r\n/** Converts a pensum from an old format to a new format. */\r\nexport function validatePensum(pensum: Pensum.Save.Legacy.Pensum2 | Pensum.Save.Pensum | null, university: string) {\r\n  // Nothing we can do about this :(\r\n  if (!pensum) return null;\r\n\r\n  // Legacy version\r\n  if (pensum.version <= 3) {\r\n    const p = loadPensum2(pensum as Pensum.Save.Legacy.Pensum2, university);\r\n    console.warn('Loaded pensum from old version!');\r\n    return p;\r\n  }\r\n\r\n  // Current version\r\n  if (pensum.version === 5) {\r\n    const p = loadPensumFromSavePensum(pensum);\r\n    return p;\r\n  }\r\n\r\n  console.warn('Pensum did not load correctly!', pensum);\r\n  return null;\r\n}\r\n\r\n/** Fixes the save form of a pensum, making sure that all its properties are set (eg. empty prereqs). */\r\nexport function loadPensumFromSavePensum(save: Pensum.Save.Pensum): Pensum.Pensum {\r\n  const MatConverter = (old: Pensum.Save.Mat): Pensum.Mat => {\r\n    const mat: Pensum.Mat = {\r\n      ...old,\r\n      prereq: (old.prereq) ? old.prereq : [],\r\n      coreq: (old.coreq) ? old.coreq : [],\r\n    };\r\n    \r\n    return mat;\r\n  }\r\n\r\n  const loose: Pensum.Mat[] = save.loose.map(mat => MatConverter(mat));\r\n  const periods: Pensum.Mat[][] = save.periods.map(\r\n    period => period.map(mat => MatConverter(mat)));\r\n  \r\n\r\n  return {\r\n    ...save,\r\n    loose,\r\n    periods,\r\n  };\r\n}\r\n\r\n/** Loads a legacy pensum, mapping the old properties to the new ones. */\r\nexport function loadPensum2(old: Pensum.Save.Legacy.Pensum2, university: string): Pensum.Pensum {\r\n  const pensum: Pensum.Pensum = {\r\n    version: Number(process.env.REACT_APP_SAVE_VERSION),\r\n    institution: university,\r\n    code: old.codigo,\r\n    publishDate: old.vigencia,\r\n    fetchDate: '2021-04-24',\r\n    career: old.carrera,\r\n    info: old.infoCarrera,\r\n    src: {\r\n      type: 'convert',\r\n      date: japaneseDateFormat(new Date()),\r\n      url: `./pensum/${university}/${old.codigo.toLowerCase()}.json`,\r\n    },\r\n    periodType: {\r\n      name: 'cuatrimestre',\r\n      acronym: 'cuat',\r\n      two: 'ct',\r\n    },\r\n    loose: [],\r\n    periods: [],\r\n  };\r\n\r\n  if (!(old.cuats && old.cuats.length)) {\r\n    console.warn(`Pensum ${old.codigo} (${old.carrera}) did not contain any cuat!`);\r\n    return pensum;\r\n  }\r\n\r\n  const oldReqConverter = (req: Pensum.Save.Legacy.Mat['prereq']): string[] => {\r\n    if (!req) return [];\r\n    if (typeof req === 'string') return [req];\r\n    if (Array.isArray(req)) return [...req];\r\n\r\n    console.warn('Unknown requirement!: ', req);\r\n    return [];\r\n  }\r\n\r\n  // Mat converter\r\n  const oldmat2newmat = (oldMat: Pensum.Save.Legacy.Mat) => {\r\n    const newMat: Pensum.Mat = {\r\n      code: oldMat.codigo,\r\n      name: oldMat.asignatura,\r\n      cr: oldMat.creditos,\r\n      prereq: [],\r\n      coreq: [],\r\n    };\r\n\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereq));\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereqExtra).map(x => ({ text: x })));\r\n    return newMat;\r\n  }\r\n\r\n  \r\n  old.cuats.forEach((oldCuat) => {\r\n    const newCuat = [];\r\n\r\n    for (const oldMat of oldCuat) {\r\n      const newMat = oldmat2newmat(oldMat);\r\n      newCuat.push(newMat);\r\n    }\r\n    \r\n    pensum.periods.push(newCuat);\r\n  });\r\n\r\n  return pensum;\r\n}\r\n\r\n/** Converts a pensum into its save form, reducing its size if no requirements are used for each Mat. */\r\nexport function convertPensumToSave(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  \r\n  const mat2savemat = (mat: Pensum.Mat): Pensum.Save.Mat => {\r\n    const out: any = {...mat};\r\n    if (out.prereq.length === 0) delete out.prereq;\r\n    if (out.coreq.length === 0) delete out.coreq;\r\n    \r\n    return out;\r\n  }\r\n  \r\n  const out = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(mat => mat2savemat(mat)),\r\n    periods: pensum.periods.map(p => p.map(mat => mat2savemat(mat))),\r\n  };\r\n  \r\n\r\n  return out;\r\n}","import { validatePensum } from \"./pensum-converter\";\r\n\r\nexport const LOCAL_STORAGE_PREFIX = 'pensumextractor';\r\nexport const LOCAL_SERVER_PREFIX = './pensum';\r\n\r\n/**\r\n * Tries to load from the given pensum code from a university.\r\n * \r\n * Lookup order:\r\n *  1. `localStorage`\r\n *  2. local data (`pensum/university/CODE.json`)\r\n *  3. from url\r\n */\r\nexport async function fetchPensumFromCode(university?: string, code?: string) {\r\n  if (!university || !code) throw new PensumFetchError('No university or code provided!');//return null;\r\n\r\n  let pensum: Pensum.Pensum | null;\r\n\r\n  pensum = await fetchPensumFromCode_localStorage(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  pensum = await fetchPensumFromCode_localData(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  // Don't return null!\r\n  // Instead throw error, so this gets catched.\r\n  throw new PensumFetchError(`Unable to fetch pensum with identifier ${university}/${code}`);\r\n}\r\n\r\n/** \r\n * Tries to fetch the pensum from `localStorage`.\r\n * \r\n * **Important note!** This only does fetch. The saving to `localStorage` will be done at window.unload.\r\n */\r\nexport async function fetchPensumFromCode_localStorage(university: string, code: string) {\r\n  const key = [LOCAL_STORAGE_PREFIX, university, code].join('_');\r\n  const pensumData = localStorage.getItem(key);\r\n\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  const pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n  return validatePensum(pensum, university);\r\n}\r\n\r\n\r\n/** Tries to fetch the pensum from `./pensum/$UNIVERSIDAD.` */\r\nexport async function fetchPensumFromCode_localData(university: string, code: string) {\r\n  const path = [LOCAL_SERVER_PREFIX, university, code].join('/') + '.json';\r\n\r\n  let pensumData: Pensum.Save.Pensum;\r\n  try {\r\n    const response = await fetch(path);\r\n    pensumData = await response.json();\r\n  } catch {\r\n    return null;\r\n  }\r\n\r\n  return validatePensum(pensumData, university);\r\n}\r\n\r\n\r\nexport class PensumFetchError extends Error {}","/** Omits prereq | coreq if empty. */\r\nfunction mat2savemat(mat: Pensum.Mat): Pensum.Save.Mat {\r\n  const save: Pensum.Save.Mat = { ...mat };\r\n\r\n  if (save.prereq && save.prereq.length === 0)\r\n    delete save.prereq;\r\n  if (save.coreq && save.coreq.length === 0)\r\n    delete save.coreq;\r\n\r\n  return save;\r\n}\r\n\r\n/** This function removes any empty parameters to make the savepensum smaller. */\r\nfunction pensumToSavePensum(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  const save = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(x => mat2savemat(x)),\r\n    periods: pensum.periods.map(x => x.map(y => mat2savemat(y))),\r\n  };\r\n\r\n  return save;\r\n}\r\n\r\nexport default pensumToSavePensum;","import { difference } from \"lib/set-utils\";\r\n\r\ntype MatExtraData = {\r\n  /** List of all mats */\r\n  list: Pensum.Mat[],\r\n  /** Map: code<string> -> period<number> */\r\n  periodMap: Map<string, number>,\r\n  /** Map : code<string> -> mat<Mat> */\r\n  codeMap: Map<string, Pensum.Mat>, \r\n  /** Map: code<string> -> postreqs<string> */\r\n  postreqMap: Map<string, string[]>,\r\n  /** List of mats that are prereqs but are not registered. */\r\n  looseUnhandled: Set<string>,\r\n}\r\n\r\n/** Gets all the extra data of a pensum's mats. */\r\nexport function processPensumMats(pensum: Pensum.Pensum | null): MatExtraData {\r\n  if (!pensum) return {\r\n    list: [],\r\n    periodMap: new Map(),\r\n    codeMap: new Map(),\r\n    postreqMap: new Map(),\r\n    looseUnhandled: new Set(),\r\n  };\r\n\r\n  const matMap = new Map<string, Pensum.Mat>();\r\n  const matPeriod = new Map<string, number>();\r\n  const matPostreq = new Map<string, string[]>();\r\n  const mats: Pensum.Mat[] = [];\r\n  const warnings: { code: string, text: string }[] = [];\r\n\r\n  const processMat = (mat: Pensum.Mat, periodNum: number) => {\r\n    if (matMap.has(mat.code)) \r\n      warnings.push({code: mat.code, text: 'was already registered!'});\r\n\r\n    // Add to all lists/maps/sets\r\n    matMap.set(mat.code, mat);\r\n    matPeriod.set(mat.code, periodNum);\r\n    mats.push(mat);\r\n  }\r\n\r\n\r\n  // Loose mats have period 0\r\n  pensum.loose.forEach(mat => processMat(mat, 0));\r\n\r\n  pensum.periods.forEach((period, periodIdx) => {\r\n    period.forEach(mat => processMat(mat, periodIdx + 1));\r\n  });\r\n\r\n\r\n  // After all mats are registered, get postreqs\r\n  for (const mat of mats) {\r\n    const code = mat.code;\r\n\r\n    for (const prereq of mat.prereq) {\r\n      if (typeof prereq === 'string') { // Only select codes, not {text: ''}\r\n\r\n        // Add or create new list\r\n        const list = matPostreq.get(prereq);\r\n        if (list) list.push(code);\r\n        else matPostreq.set(prereq, [code]);\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  // Get unhandled loose mats\r\n  const matSet = new Set(matMap.keys());\r\n  const hasPostreqSet = new Set(matPostreq.keys());\r\n  \r\n  // Codes that are prereqs to something but do not exist on mats.\r\n  const looseUnhandled = difference(hasPostreqSet, matSet);\r\n\r\n\r\n  // Play all the warnings\r\n  for (const warning of warnings) {\r\n    console.warn(`Warning at pensum-get-extras [${warning.code}]: ${warning.text}`);\r\n  }\r\n\r\n\r\n\r\n  return {\r\n    /** List of all mats */\r\n    list: mats,\r\n    /** Map: code<string> -> period<number> */\r\n    periodMap: matPeriod,\r\n    /** Map : code<string> -> mat<Mat> */\r\n    codeMap: matMap, \r\n    /** Map: code<string> -> postreqs<string> */\r\n    postreqMap: matPostreq,\r\n    /** List of mats that are prereqs but are not registered. */\r\n    looseUnhandled: looseUnhandled,\r\n  }\r\n}\r\n\r\nexport default processPensumMats;","// Almost everything extracted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n\r\n/**\r\n * Checks if all the elements of `subset` are inside `set`.\r\n * @param set Global set\r\n * @param subset Smaller set\r\n * @returns True if the smaller set is inside the global set.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setB = new Set([2, 3])\r\n * isSuperset(setA, setB) // returns true\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function isSuperset<T>(set: Set<T>, subset: Set<T>) {\r\n  for (let elem of subset) {\r\n      if (!set.has(elem)) {\r\n          return false\r\n      }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Returns the union of both sets.\r\n * @param setA \r\n * @param setB \r\n * @returns Union of setA and setB.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * union(setA, setC) // returns Set {1, 2, 3, 4, 5, 6}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function union<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _union = new Set(setA)\r\n  for (let elem of setB) {\r\n      _union.add(elem)\r\n  }\r\n  return _union\r\n}\r\n\r\n/**\r\n * Returns the elements that both sets have in common with each other.\r\n * @param setA \r\n * @param setB \r\n * @returns Intersection of both sets\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * intersection(setA, setC) // returns Set {3, 4}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function intersection<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _intersection = new Set()\r\n  for (let elem of setB) {\r\n      if (setA.has(elem)) {\r\n          _intersection.add(elem)\r\n      }\r\n  }\r\n  return _intersection\r\n}\r\n  \r\n/**\r\n * Returns the elements that are not shared between `setA` and `setB`.\r\n * Same as union(A,B) - intersect(A,B);\r\n * @param setA \r\n * @param setB \r\n * @returns Elements not shared between sets.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * symmetricDifference(setA, setC) // returns Set {1, 2, 5, 6}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function symmetricDifference<T>(setA: Set<T>, setB: Set<T>) {\r\n    let _difference = new Set(setA)\r\n    for (let elem of setB) {\r\n      if (_difference.has(elem)) {\r\n          _difference.delete(elem)\r\n      } else {\r\n          _difference.add(elem)\r\n      }\r\n  }\r\n  return _difference\r\n}\r\n\r\n/**\r\n * Returns the elements of `setA` that are not in `setB`. \r\n * @param setA \r\n * @param setB \r\n * @returns setA - setB\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * difference(setA, setC) // returns Set {1, 2}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function difference<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _difference = new Set(setA)\r\n  for (let elem of setB) {\r\n      _difference.delete(elem)\r\n  }\r\n  return _difference\r\n}","import { validatePensum } from \"functions/pensum-converter\";\r\nimport pensumToSavePensum from \"functions/pensum-save\";\r\nimport processPensumMats from \"functions/pensum-get-extras\";\r\n\r\nconst PENSUM_STORAGE_KEY = 'pensumData';\r\n\r\nexport function savePensumToLocalStorage(pensum: Pensum.Pensum | null) {\r\n  if (!pensum) {\r\n    localStorage.removeItem(PENSUM_STORAGE_KEY);\r\n    return;\r\n  }\r\n\r\n  var save = pensumToSavePensum(pensum);\r\n  localStorage.setItem(PENSUM_STORAGE_KEY, JSON.stringify(save));\r\n}\r\n\r\nexport function loadPensumFromLocalStorage(): Pensum.Pensum | null {\r\n  const pensumData = localStorage.getItem(PENSUM_STORAGE_KEY);\r\n\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  const pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n  const loadedPensum = validatePensum(pensum, pensum.institution);\r\n  return loadedPensum;\r\n}\r\n\r\n\r\nexport function createPayload(pensum: ActivePensum.Payload['pensum']): ActivePensum.Payload {\r\n  return {\r\n    pensum, \r\n    matData: processPensumMats(pensum),\r\n    error: null,\r\n    loading: false,\r\n  }\r\n}\r\n\r\nexport function activePensumReducer(\r\n  state: ActivePensum.Payload,\r\n  action: ActivePensum.Action): ActivePensum.Payload {\r\n  switch (action.type) {\r\n    case 'clear':\r\n      // savePensumToLocalStorage(null); // Dont clear save!\r\n      return createPayload(null);\r\n\r\n    case 'set':\r\n      savePensumToLocalStorage(action.payload);\r\n      return createPayload(action.payload);\r\n\r\n    case 'load/fromSave':\r\n      var pensum = loadPensumFromLocalStorage();\r\n      return createPayload(pensum);\r\n\r\n    // Case for 'load' is handled on the Provider, since its async!\r\n\r\n    case 'error':\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'loading':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n\r\n    default:\r\n      console.error('Unknown action \"' + action.type + '\".');\r\n      return state;\r\n  }\r\n}","import { fetchPensumFromCode, PensumFetchError } from \"functions/pensum-fetch\";\r\nimport React, { createContext, memo, useCallback, useEffect, useReducer } from \"react\";\r\nimport { activePensumReducer, createPayload } from \"./reducer\";\r\n\r\n\r\ntype ActivePensumContextProps = {\r\n  state: ActivePensum.Payload,\r\n  dispatch: (action: ActivePensum.Action) => any,\r\n  load: (university: string, code: string) => any,\r\n}\r\n\r\nconst defaultContext: ActivePensumContextProps = {\r\n  state: createPayload(null),\r\n  dispatch: () => {},\r\n  load: () => {},\r\n}\r\n\r\n\r\n/** Context for the current loaded pensum. */\r\nconst ActivePensumContext = createContext(defaultContext);\r\n\r\ntype Props = { children: any};\r\n\r\n// this double naming thing is so the React chrome extension gets the name correctly.\r\nexport const ActivePensumProvider = memo(function ActivePensumProvider({ children }: Props) { \r\n  const [state, dispatch] = useReducer(activePensumReducer, defaultContext.state);\r\n\r\n  // onMount: load saved pensum\r\n  useEffect(() => {\r\n    dispatch({type: 'load/fromSave'});\r\n  }, []);\r\n\r\n  // Custom fn to load a pensum\r\n  const load = useCallback(async (university: string, code: string) => {\r\n    dispatch({ type: 'loading', payload: true });\r\n\r\n    try {\r\n      const pensum = await fetchPensumFromCode(university, code);\r\n      dispatch({ type: 'set', payload: pensum });\r\n    }\r\n    catch (error) {\r\n      let m: any;\r\n\r\n      if (error instanceof SyntaxError)\r\n        m = `JSON could not be parsed for ${university}/${code}.`;\r\n      else if (error instanceof PensumFetchError)\r\n        m = error.message;\r\n      else\r\n        m = error;\r\n\r\n      dispatch({ type: 'error' as 'error', payload: m });\r\n    }\r\n  }, []);\r\n  \r\n  return <ActivePensumContext.Provider value={{ state, dispatch, load }}>\r\n    {children}\r\n  </ActivePensumContext.Provider>\r\n})\r\n\r\n\r\nexport default ActivePensumContext;","import UniversityContext from \"contexts/university-data\";\r\nimport React, { memo, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport Select from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport selectTheme, { optionStyle } from \"lib/DarkMode/select-theme\";\r\nimport { sortByProp } from \"lib/sort-utils\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\nimport { usePreviousValue } from \"beautiful-react-hooks\";\r\n\r\n// type SelectProps = React.ComponentProps<typeof Select>['onChange'];\r\ntype SelectProps = { label: string, value: string } | null;\r\n\r\n/** Creates a formatted label, for use with this component's <Select> labels. */\r\nfunction createLabelString(code: string, name: string) {\r\n  return `[${code}] ${name}`;\r\n}\r\n\r\n\r\n/** Simple form that manages University and Career selection \r\n * (Populates the university/career list from the server.). */\r\nfunction PensumSelector() {\r\n  // Quite awful, just read this context from right to left.\r\n  const { state: {\r\n      pensum:   activePensum,\r\n      error:    error_pensum,\r\n      loading:  loading_pensum,\r\n    },\r\n    load: loadPensum,\r\n  } = useContext(ActivePensumContext);\r\n\r\n  const {\r\n    state:  universityData,\r\n    select: selectUniversity,\r\n  } = useContext(UniversityContext);\r\n\r\n  const {\r\n    universities,\r\n    selected: selected_uni,\r\n    loading:  loading_uni,\r\n    error:    error_uni,\r\n  } = universityData;\r\n\r\n  const [pensumOnInput, setPensumOnInput] = useState(null as SelectProps);\r\n  const previousPensum = usePreviousValue(activePensum);\r\n\r\n\r\n  // ***************************************************************************\r\n  // Carrera select form <options>\r\n  // Maps careers from {code, name} to {value, label}\r\n  // ***************************************************************************\r\n  const careerSelectOptions = useMemo(() => {\r\n    const pensumList = selected_uni?.careers;\r\n    if (!pensumList) return [];\r\n\r\n    const o = pensumList.sort(sortByProp(\"code\"));\r\n\r\n    return o.map(x => ({ value: x.code, label: createLabelString(x.code, x.name) }));\r\n  }, [selected_uni]);\r\n\r\n  \r\n  // ***************************************************************************\r\n  // On pensum change\r\n  //  If the pensum changed, do:\r\n  //  1. Auto select university from the active pensum.\r\n  //  2. Update the selected career <select> value.\r\n  // ***************************************************************************\r\n  useEffect(() => {\r\n    // If pensums are the same, nothing to change!\r\n    if (activePensum === previousPensum) return;\r\n    // If no pensum is selected, there's nothing to \"select\"!\r\n    if (!activePensum) return;\r\n    \r\n    // Select university\r\n    selectUniversity(activePensum.institution);\r\n\r\n    // Try to find existing label\r\n    const careerOption = careerSelectOptions.find(x => x.value === activePensum.code)\r\n      || {\r\n      value: activePensum.code,\r\n      label: createLabelString(activePensum.code, activePensum.career),\r\n    };\r\n    setPensumOnInput(careerOption);\r\n\r\n  }, [activePensum, previousPensum, careerSelectOptions, selectUniversity]);\r\n\r\n\r\n  // ***************************************************************************\r\n  // University select\r\n  // ***************************************************************************\r\n  const universitySelectOptions = useMemo(() => universities.map(\r\n    x => ({ value: x.code, label: createLabelString(x.shortName, x.longName) })),\r\n    [universities]);\r\n\r\n  const selectedUniversity = useMemo(() => (universitySelectOptions.find(\r\n    x => x.value === selected_uni?.code) || null),\r\n    [universitySelectOptions, selected_uni]);\r\n\r\n  // On user change university selection\r\n  const handleUniversityChange = useCallback((newValue: SelectProps) => {\r\n    selectUniversity(newValue?.value || null);\r\n  }, [selectUniversity]);\r\n\r\n\r\n  // ***************************************************************************\r\n  // On submit\r\n  // ***************************************************************************\r\n  const handleSubmit = useCallback((evt?: any) => {\r\n    if (evt) evt.preventDefault();\r\n    const uni = selected_uni?.code || '';\r\n    const code = pensumOnInput?.value || '';\r\n    loadPensum(uni, code);\r\n  }, [loadPensum, selected_uni, pensumOnInput]);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <SelectUni\r\n            value={selectedUniversity}\r\n            options={universitySelectOptions}\r\n            isLoading={loading_uni}\r\n            onChange={handleUniversityChange} />\r\n\r\n          <SelectCareer\r\n            value={pensumOnInput}\r\n            options={careerSelectOptions}\r\n            isLoading={loading_uni}\r\n            onChange={setPensumOnInput}/>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={!pensumOnInput}\r\n            className=\"w-100\">\r\n            {(!loading_pensum) ?\r\n              'Cargar' :\r\n              <Spinner animation=\"border\" size=\"sm\"><span className=\"visually-hidden\">Cargando...</span></Spinner>}\r\n          </Button>\r\n\r\n          {error_uni && <p style={{ color: 'red' }}>{'Error @ uni: ' + String(error_uni)}</p>}\r\n          {error_pensum && <p style={{ color: 'red' }}>{'Error @ pensum: ' + String(error_pensum)}</p>}\r\n        </Form>\r\n        </Container>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n// ***************************************************************************\r\n// University select\r\n// ***************************************************************************\r\ntype CustomSelectProps = {\r\n  value: SelectProps,\r\n  options: SelectProps[],\r\n  isLoading: boolean,\r\n  onChange: Function,\r\n}\r\n\r\nconst SelectUni = memo(\r\n  function SelectUni({ value, options, isLoading, onChange }: CustomSelectProps) {\r\n    return (<>\r\n      <label className=\"form-label mb-0 small\">Universidad</label>\r\n      <Select\r\n        // defaultValue={universitySelectOptions[0]}\r\n        value={value}\r\n        options={options}\r\n        isSearchable={true}\r\n        isLoading={isLoading}\r\n        onChange={onChange as any} // as any to be able to use selectStyles without TS panicking.\r\n        name=\"university\"\r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n\r\n        placeholder=\"Seleccione una universidad...\"\r\n        styles={optionStyle} />\r\n    </>\r\n    )\r\n  }\r\n);\r\n\r\n\r\n// ***************************************************************************\r\n// Career select\r\n// ***************************************************************************\r\nconst SelectCareer = memo(\r\n  function SelectCareer({ value, options, isLoading, onChange }: CustomSelectProps) {\r\n    return (<>\r\n      <label className=\"form-label mb-0 small\">Carrera</label>\r\n      <CreatableSelect\r\n        isClearable\r\n        value={value}\r\n        options={options}\r\n        isLoading={isLoading}\r\n        loadingMessage={() => <span>Cargando carreras...</span>}\r\n        onChange={onChange as any} // as any to be able to use selectStyles\r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n\r\n        placeholder=\"Seleccione o escriba una carrera o su codigo...\"\r\n        styles={optionStyle} />\r\n    </>\r\n    )\r\n  }\r\n);\r\n\r\n\r\n\r\nexport default PensumSelector;","import { objectMap } from \"lib/sort-utils\";\r\n\r\n// TODO: IMPLEMENT TRACKER INTO THE PENSUM TABLE >:V\r\nexport function matSelectionReducer(\r\n  state: MatSelection.Payload,\r\n  action: MatSelection.Action): MatSelection.Payload {\r\n\r\n  const cloneTracker = (): MatSelection.Payload['tracker'] => {\r\n    const o: any = {};\r\n    for (const [key, set] of Object.entries(state.tracker)) {\r\n      o[key] = new Set(set);\r\n    }\r\n    return o;\r\n  }\r\n\r\n  const { mode } = state;\r\n\r\n  switch (action.type) {\r\n\r\n    case 'selectMode': {\r\n      const newMode = action.payload || 'passed';\r\n\r\n      return {\r\n        ...state,\r\n        mode: newMode,\r\n      }\r\n    }\r\n\r\n\r\n    case 'select': {\r\n      const mat = action.payload;\r\n      const tracker = cloneTracker();\r\n\r\n      if (tracker[mode].has(mat)) {\r\n        tracker[mode].delete(mat);\r\n      } else { // Add to this tracker, and remove from the rest\r\n        tracker[mode].add(mat);\r\n        for (const [key, set] of Object.entries(tracker)) {\r\n          if (key !== mode) set.delete(mat);\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        tracker\r\n      };\r\n    }\r\n\r\n\r\n    case 'selectPeriod': {\r\n      const period = action.payload;\r\n      const tracker = cloneTracker();\r\n\r\n      const matCount = period.length;\r\n      if (matCount === 0) return state;\r\n      \r\n      \r\n      // Check each tracker.\r\n      const sortedTracker = objectMap(tracker, x => [] as string[]);\r\n      const untracked = [] as string[];\r\n\r\n      for (const code of period) {\r\n        let isTracked = false;\r\n\r\n        for (const [key, set] of Object.entries(tracker)) {\r\n          if (set.has(code)) {\r\n            (sortedTracker as any)[key].push(code);\r\n            isTracked = true;\r\n          }\r\n        }\r\n\r\n        if (!isTracked) {\r\n          untracked.push(code);\r\n        }\r\n      }\r\n\r\n\r\n      \r\n      /**\r\n       * Cases:\r\n       * - All on main: remove all;\r\n       * - All unselected: just add all\r\n       * - Some holes: set holes only.\r\n       * - All on both (none unselected): finish adding all (same as prev.)\r\n       */\r\n      const allOnMain = sortedTracker[mode].length === matCount;\r\n      const allUnselected = untracked.length === matCount;\r\n      const noneUnselected = untracked.length === 0;\r\n      const someUnselected = !allUnselected && !noneUnselected;\r\n\r\n      // Case 1: All on main -> remove all\r\n      if (allOnMain) {\r\n        period.forEach(code => tracker[mode].delete(code));\r\n      } \r\n      // Case 3: Add only the unselected. Leave the rest intact.\r\n      else if (someUnselected) {\r\n        untracked.forEach(code => tracker[mode].add(code));\r\n      }\r\n      // Case 2 & 4: Add to this set, don't remove from the other.\r\n      else {\r\n        for (const code of period) {\r\n          for (const [key, set] of Object.entries(tracker)) {\r\n            if (key === mode) set.add(code);\r\n            else set.delete(code);\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      return {\r\n        ...state,\r\n        tracker\r\n      };\r\n    }\r\n\r\n    default:\r\n      console.error('Unknown action \"' + (action as any)?.type + '\".');\r\n      return state;\r\n  }\r\n}","import { createContext, memo, useReducer } from \"react\";\r\nimport { matSelectionReducer } from \"./reducer\";\r\n\r\ntype MatSelectionContextProps = {\r\n  state: MatSelection.Payload,\r\n  dispatch: (action: MatSelection.Action) => any,\r\n}\r\n\r\nconst createDefaultState = (): MatSelection.Payload => ({\r\n  mode: 'passed',\r\n  tracker: {\r\n    course: new Set(),\r\n    passed: new Set(),\r\n  }\r\n});\r\n\r\nconst defaultContext: MatSelectionContextProps = ({\r\n  state: createDefaultState(),\r\n  dispatch: () => {},\r\n});\r\n\r\n/** Collection of helper functions to use for mat selection. */\r\nexport const matSelectHelpers = {\r\n  /** \r\n   * Get the current tracker of a mat.\r\n   * @example\r\n   * getTracker(tracker, 'MAT101'); // returns 'passed'\r\n   * getTracker(tracker, 'MAT102'); // returns 'course'\r\n   * getTracker(tracker, 'MAT103'); // returns null\r\n  */\r\n  getTracker(tracker: MatSelection.Payload['tracker'], code: string) {\r\n    for (const [key, set] of Object.entries(tracker)) {\r\n      if (set.has(code)) return key as MatSelection.TrackerMode;\r\n    }\r\n    return null;\r\n  },\r\n}\r\n\r\n\r\nexport const MatSelectionDispatchContext = createContext(defaultContext.dispatch);\r\nexport const MatSelectionModeContext = createContext(defaultContext.state.mode);\r\nexport const MatSelectionTrackerContext = createContext(defaultContext.state.tracker);\r\n\r\ntype Props = { children: any };\r\n\r\nexport const MatSelectionProvider = memo(function MatSelectionProvider({ children }: Props) {\r\n  const [state, dispatch] = useReducer(matSelectionReducer, defaultContext.state);\r\n\r\n  return <MatSelectionDispatchContext.Provider value={dispatch}>\r\n    <MatSelectionModeContext.Provider value={state.mode}>\r\n      <MatSelectionTrackerContext.Provider value={state.tracker}>\r\n        {children}\r\n      </MatSelectionTrackerContext.Provider>\r\n    </MatSelectionModeContext.Provider>\r\n  </MatSelectionDispatchContext.Provider>\r\n})","import ActivePensumContext from 'contexts/active-pensum';\r\nimport { matSelectHelpers, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\nimport { classnames } from 'lib/format-utils';\r\nimport { useContext } from 'react';\r\nimport './mat-code.scss';\r\n\r\n\r\ntype Props = {\r\n  data: string | {text: string},\r\n  type: 'prereq' | 'coreq'\r\n}\r\n\r\n/** Single matcode. */\r\nfunction MatCode({ data, type }: Props) {\r\n  const { state: { matData } } = useContext(ActivePensumContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  let className: any[] = ['mat-code', type];\r\n\r\n  let content;\r\n  if (typeof data === 'string') {\r\n    content = data;\r\n    className.push('code');\r\n\r\n    if (matData.looseUnhandled.has(data)) \r\n      className.push('missing');\r\n\r\n    className.push(matSelectHelpers.getTracker(tracker, data) || 'default');\r\n\r\n  } else {\r\n    content = data.text;\r\n    className.push('req-text');\r\n  }\r\n\r\n  return (<span className={classnames(className)}>{content}</span>)\r\n}\r\n\r\nexport default MatCode;","import './table.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport MatCode from './MatCode';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { classnames, toTitleCase } from 'lib/format-utils';\r\nimport { matSelectHelpers, MatSelectionDispatchContext, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\n\r\n/** Headers for the pensum table. */\r\nexport const TableHead = React.memo((props: { periodNumStr: string | null }) => {\r\n  // Memo makes this thing pure, and never update >:D (if props don't change).\r\n  \r\n  const processedPeriod = (props.periodNumStr) ? `${toTitleCase(props.periodNumStr)}.` : '';\r\n  \r\n  return <Row className=\"pensum-header row-period\">\r\n    <Col className=\"row-period-num\">{processedPeriod}</Col>\r\n    <Col className=\"row-mat-group\">\r\n      <Row className=\"row-mat\">\r\n        <Col className=\"row-code\">Código</Col>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"row-name\">Asignatura</Col>\r\n            <Col className=\"row-cr\">Cr.</Col>\r\n            <Col className=\"row-prereq\">Requisitos</Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n})\r\n\r\n\r\n\r\ntype MatRowProps = {\r\n  mat: Pensum.Mat,\r\n  idx: number\r\n};\r\n\r\n/** Displays a single Mat as from the pensum a table row. */\r\nfunction MatRow({ mat, idx }: MatRowProps) {\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n\r\n  // Classes. Any falsy values will be discarded\r\n  const cl = [\r\n    \"row-mat\",\r\n    (idx & 1) && 'even', // technically should be odd, but i don't care enough.\r\n    matSelectHelpers.getTracker(tracker, mat.code),\r\n  ];\r\n\r\n  const reqs = [\r\n    ...mat.prereq.map((x, i) => <MatCode key={i       } data={x} type='prereq'/>),\r\n    ...mat.coreq.map( (x, i) => <MatCode key={i + 1000} data={x} type='coreq' />),\r\n  ] as JSX.Element[];\r\n\r\n  const onClick = useCallback((evt: any) => {\r\n    dispatch({ type: 'select', payload: mat.code });\r\n  }, [mat, dispatch])\r\n\r\n  return <Row className={classnames(cl)} data-mat={mat.code}>\r\n    <Col className=\"row-code code\">{mat.code}</Col>\r\n    <Col>\r\n      <Row>\r\n        <Col className=\"row-name click-target\" onClick={onClick}>{mat.name}</Col>\r\n        <Col className=\"row-cr\">{mat.cr}</Col>\r\n        <Col className=\"row-req\">{reqs}</Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\n\r\n\r\ntype PeriodProps = {\r\n  period: Pensum.Mat[],\r\n  periodNum: number,\r\n  cumlen: number\r\n};\r\n\r\n/** Displays a single period from the pensum as table rows. */\r\nexport const Period = ({ period, periodNum, cumlen = 0 }: PeriodProps) => {\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n\r\n  const onClick = useCallback((evt: any) => {\r\n    dispatch({ type: 'selectPeriod', payload: period.map(x => x.code) });\r\n  }, [period, dispatch]);\r\n\r\n  if (period.length === 0) return null;\r\n\r\n  return <Row className=\"row-period\">\r\n    <Col\r\n      className=\"row-period-num click-target\"\r\n      onClick={onClick}\r\n      data-value={periodNum + 1}>\r\n      {periodNum + 1}\r\n    </Col>\r\n    <Col className=\"row-mat-group\">\r\n      {period.map((mat, i) =>\r\n        <MatRow\r\n          key={mat.code}\r\n          mat={mat}\r\n          idx={i + cumlen} />\r\n      )}\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\n\r\ntype PensumTableProps = {\r\n  periods: Pensum.Pensum['periods']\r\n  periodType?: Pensum.Pensum['periodType']\r\n}\r\n\r\nconst defaultPeriodType = {\r\n  name: 'periodo',\r\n  acronym: 'per',\r\n  two: 'pr'\r\n};\r\n\r\n/** Displays a pensum. */\r\nfunction PensumTable({ periods, periodType = defaultPeriodType }: PensumTableProps) {\r\n\r\n  // https://stackoverflow.com/a/55261098\r\n  // CumLen is passed down to calculate if a row is even or odd.\r\n  const cumulativeSum = (sum: number) => (value: number) => sum += value;\r\n  const cumlen = periods.map(x => x.length).map(cumulativeSum(0))\r\n\r\n  return <Container className=\"pensum-table\">\r\n    <TableHead periodNumStr={periodType.two} />\r\n    {periods.map((period, key) =>\r\n      <Period\r\n        key={key}\r\n        period={period}\r\n        periodNum={key}\r\n        cumlen={cumlen[key - 1]} />\r\n    )}\r\n  </Container>\r\n}\r\n\r\nexport default PensumTable;","import { Period, TableHead } from \"./PensumTable\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\ntype Props = {\r\n  loose: Pensum.Pensum['loose']\r\n}\r\n\r\nfunction PensumLoose({ loose }: Props) {\r\n  if (loose.length === 0) return null;\r\n\r\n\r\n  return <Container className=\"pensum-table\">\r\n    <TableHead periodNumStr={null} />\r\n    <Period\r\n      period={loose}\r\n      periodNum={-1}\r\n      cumlen={0} />\r\n  </Container>\r\n}\r\n\r\nexport default PensumLoose;","import Card from 'react-bootstrap/Card';\r\nimport PensumLoose from './PensumLoose';\r\nimport PensumTable from \"./PensumTable\";\r\n\r\ntype Props = {\r\n  pensum: Pensum.Pensum\r\n}\r\n\r\nfunction PensumDisplay({ pensum }: Props) {\r\n  const { career, periods, loose, periodType } = pensum;\r\n\r\n  return <>\r\n    <Card>\r\n      <Card.Body className=\"pensum-table-container\">\r\n        <Card.Title>{career}</Card.Title>\r\n        <PensumTable periods={periods} periodType={periodType} />\r\n      </Card.Body>\r\n    </Card>\r\n\r\n    {loose &&\r\n      <Card>\r\n        <Card.Body className=\"pensum-table-container\">\r\n          <Card.Title>Demás materias</Card.Title>\r\n          <PensumLoose loose={loose} />\r\n        </Card.Body>\r\n      </Card>\r\n    }\r\n\r\n  </>\r\n}\r\n\r\nexport default PensumDisplay;","import PensumDisplay from \"./PensumDisplay\";\r\n\r\nexport default PensumDisplay;","import Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { MatSelectionDispatchContext, MatSelectionModeContext } from \"contexts/mat-selection\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { classnames } from \"lib/format-utils\";\r\nimport \"./filter.css\";\r\n\r\nfunction FilterModeSelector() {\r\n  const mode = useContext(MatSelectionModeContext);\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n\r\n  const Btns = useCallback(() => {\r\n    const obj = {\r\n      'passed': 'Aprobar',\r\n      'course': 'Cursar',\r\n    };\r\n\r\n    const elems = [];\r\n\r\n    for (const [key, val] of Object.entries(obj)) {\r\n      elems.push(<Button\r\n        key={key}\r\n        className={classnames([\r\n          key,\r\n          (mode === key) ? 'active' : 'not-active',\r\n        ])}\r\n        onClick={() => dispatch({ type: 'selectMode', payload: key as any })}>\r\n        {val}\r\n      </Button>)\r\n    }\r\n\r\n    return <>{elems}</>;\r\n  }, [mode, dispatch]);\r\n\r\n  return <ButtonGroup className=\"filter-selector filter-mode\">\r\n    <Btns />\r\n  </ButtonGroup>\r\n}\r\n\r\n\r\nexport default FilterModeSelector;","import Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FilterModeSelector from \"./FilterModeSelector\";\r\n\r\n\r\n\r\nfunction PensumFilter() {\r\n  return <Card >\r\n    <Card.Body>\r\n    <Container>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Row><span className=\"text-center\">Modo de selección</span></Row>\r\n          <Row><FilterModeSelector /></Row>\r\n        </Col>\r\n      </Row>\r\n      \r\n    </Container>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nexport default PensumFilter;","import { useCallback, useContext } from \"react\";\r\nimport PensumSelector from \"./PensumSelector\";\r\nimport PensumDisplay from \"components/PensumDisplay\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\nimport { MatSelectionDispatchContext } from \"contexts/mat-selection\";\r\nimport { ToggleButton } from \"react-bootstrap\";\r\nimport \"./PensumDisplay/mat-code-colors.scss\"\r\nimport FilterModeSelector from \"./PensumFilter/FilterModeSelector\";\r\nimport PensumFilter from \"./PensumFilter\";\r\n\r\n\r\ntype Props = any;\r\n\r\n/** Main tab for the Pensum app. */\r\nfunction PensumExtractor(props: Props) {\r\n  const { state: { pensum } } = useContext(ActivePensumContext);\r\n\r\n  return (<>\r\n    <PensumSelector />\r\n\r\n    {pensum && <>\r\n      <PensumFilter/>\r\n      <PensumDisplay pensum={pensum} />\r\n    </>\r\n    }\r\n  </>)\r\n} \r\n\r\nexport default PensumExtractor;","\r\n// Src: https://github.com/vinorodrigues/bootstrap-dark-5/blob/main/examples/cheatsheet-night.html\r\n// parts from: https://radek.io/posts/secret-darkmode-toggle/\r\n\r\nvar isCssInit = false;\r\n\r\nfunction setColorPreference(color_p: string, persist = false, initial = false) {\r\n  const new_s = color_p;\r\n  const old_s = color_p === 'light' ? 'dark' : 'light'\r\n\r\n  const el = document.body;  // gets root <html> tag\r\n  el.classList.add('color-scheme-' + new_s);\r\n  el.classList.remove('color-scheme-' + old_s);\r\n  el.dataset.colorScheme = new_s;\r\n\r\n  // Background transitions ONLY on switching theme\r\n  if (!initial) {\r\n    el.classList.add('color-scheme-transition');\r\n    setTimeout(() => {\r\n      el.classList.remove('color-scheme-transition');\r\n    }, 500);\r\n  }\r\n\r\n  if (persist) {\r\n    localStorage.setItem('preferred-color-scheme', color_p);\r\n  }\r\n}\r\n\r\nfunction updateUI(color_p: string, id = 'css') {\r\n  // toggle_btn.checked = color_p === 'dark';\r\n\r\n  if (isCssInit) {\r\n    const el = document.querySelector('#' + id) as HTMLElement;\r\n    const data = el.dataset;\r\n    if (color_p === 'dark') {\r\n      el.setAttribute('href', data.hrefDark || '');\r\n    } else {\r\n      el.setAttribute('href', data.hrefLight || '');\r\n    }\r\n    data.colorScheme = color_p;\r\n  }\r\n}\r\n\r\nfunction initColorCSS(color_p: string, id = 'css') {\r\n  isCssInit = true;\r\n\r\n  var el_o = document.querySelector('#' + id) as HTMLElement;\r\n  var el: HTMLElement;\r\n  if (el_o !== null) el_o.remove();\r\n  var el_l = document.querySelector('#' + id + '-light') as HTMLElement;\r\n  var el_d = document.querySelector('#' + id + '-dark') as HTMLElement;\r\n  if (color_p === 'dark') {\r\n    el = el_d;\r\n    el_o = el_l;\r\n  } else {\r\n    el = el_l;\r\n    el_o = el_d;\r\n  }\r\n  el.setAttribute('data-href-light', el_l.getAttribute('href') || '');\r\n  el.setAttribute('data-href-dark', el_d.getAttribute('href') || '');\r\n  el.setAttribute('data-color-scheme', color_p);\r\n  el.setAttribute('media', 'all');\r\n  el.setAttribute('id', id);\r\n  el_o.remove();\r\n}\r\n\r\n\r\nexport function setDarkmode(dark: boolean) {\r\n  const color_p = dark ? 'dark' : 'light';\r\n\r\n  if (!isCssInit) initColorCSS(color_p);\r\n\r\n  setColorPreference(color_p, true);\r\n  updateUI(color_p);\r\n}\r\n\r\nexport function getDarkmode() {\r\n  return document.body.dataset.colorScheme === 'dark';\r\n}\r\n\r\nexport function setThemePreferenceOnLoad() {\r\n  /* Set Preference on load */\r\n  const osColorPreference = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  // console.log('OS wants ' + osColorPreference);\r\n  var preferredColorScheme = localStorage.getItem('preferred-color-scheme');\r\n  if (preferredColorScheme !== null) {\r\n    initColorCSS(preferredColorScheme);\r\n  } else {\r\n    preferredColorScheme = osColorPreference;\r\n  }\r\n  setColorPreference(preferredColorScheme, false, true);\r\n  updateUI(preferredColorScheme);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport { BsFillMoonStarsFill } from 'react-icons/bs';\r\nimport { FaSun } from 'react-icons/fa';\r\nimport { getDarkmode, setDarkmode } from \".\";\r\nimport './btn-switch.scss';\r\n\r\n\r\nfunction DarkModeSwitch() {\r\n  const [dark, setDark] = useState(false);\r\n  \r\n  // onMount\r\n  useEffect(() => {\r\n    setDark(getDarkmode());\r\n  }, [])\r\n\r\n  // onChange\r\n  useEffect(() => {\r\n    setDarkmode(dark);\r\n  }, [dark])\r\n  \r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    setDark(e.target.checked);\r\n  }\r\n\r\n  return <OverlayTrigger\r\n    placement=\"left\"\r\n    overlay={<Tooltip>{(dark ? 'Desactivar' : 'Activar') + ' modo oscuro'}</Tooltip>}>\r\n    <label className={\"darkmode-switch\" + (dark ? ' dark' : '')}>\r\n      {(dark) ? <BsFillMoonStarsFill/> : <FaSun />}\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={dark}\r\n        onChange={handleChange} />\r\n    </label>\r\n  </OverlayTrigger>\r\n}\r\n\r\nexport default DarkModeSwitch;","import DarkModeSwitch from \"lib/DarkMode/DarkModeSwitch\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\n\r\n\r\nfunction AppNavbar() {\r\n  const navbarRef = useRef(null as HTMLElement | null);\r\n\r\n  // Navbar hide on scroll\r\n  useEffect(() => {\r\n    var prevScrollPos = window.scrollY;\r\n    const onScrollFn = () => {\r\n      if (!navbarRef.current) return;\r\n      var currentScrollPos = window.scrollY;\r\n      if (prevScrollPos > currentScrollPos) {\r\n        navbarRef.current.classList.remove('hidden');\r\n      } else {\r\n        navbarRef.current.classList.add('hidden');\r\n      }\r\n      prevScrollPos = currentScrollPos;\r\n    }\r\n\r\n    window.addEventListener('scroll', onScrollFn);\r\n    return () => window.removeEventListener('scroll', onScrollFn);\r\n  }, []);\r\n\r\n  return <Navbar\r\n    ref={navbarRef}\r\n    variant=\"dark\"\r\n    className=\"App-header mb-3\"\r\n    fixed=\"top\" >\r\n    <Container>\r\n      <Navbar.Brand>PENSUMS UNAPEC</Navbar.Brand>\r\n\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  </Navbar>\r\n}\r\n\r\nexport default AppNavbar;","\r\nfunction AppFooter() {\r\n  return <footer className=\"mt-3 navbar navbar-expand navbar-light static-bottom\">\r\n    <span>Pensum Extractor DO</span>\r\n    <span>Fernando Rivas, 2021</span>\r\n    <span><a href=\"http://scydact.github.io/\">scydact.github.io</a></span>\r\n    <span>Version v{process.env.REACT_APP_VERSION} | save v{process.env.REACT_APP_SAVE_VERSION}</span>\r\n    <span>\r\n      En caso de problemas o sugerencias,\r\n      favor escribir a <a\r\n        href=\"mailto:scydact@gmail.com?subject=[Pensum Extractor]\">\r\n        scydact@gmail.com</a>.\r\n    </span>\r\n  </footer>\r\n}\r\n\r\nexport default AppFooter;","import './App.scss';\r\nimport './global-vars.scss';\r\nimport PensumExtractor from 'components/PensumExtractor';\r\nimport Container from 'react-bootstrap/Container';\r\nimport AppNavbar from 'components/AppNavbar';\r\nimport AppFooter from 'components/AppFooter';\r\nimport { UniversityProvider } from 'contexts/university-data';\r\nimport { ActivePensumProvider } from 'contexts/active-pensum';\r\nimport { useCallback } from 'react';\r\nimport { MatSelectionProvider } from 'contexts/mat-selection';\r\n\r\n\r\nfunction App() {\r\n\r\n  // Nested ContextProviders\r\n  const Providers = useCallback(function Providers(props: any) {\r\n    return (\r\n      <UniversityProvider>\r\n        <ActivePensumProvider>\r\n          <MatSelectionProvider>\r\n            {props.children}\r\n          </MatSelectionProvider>\r\n        </ActivePensumProvider>\r\n      </UniversityProvider>\r\n    )\r\n  }, []);\r\n\r\n  return (\r\n    <Providers>\r\n      <AppNavbar />\r\n\r\n      <Container fluid className=\"App\">\r\n        <PensumExtractor />\r\n      </Container>\r\n\r\n      <AppFooter />\r\n    </Providers>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap-dark-5/dist/css/bootstrap-blackbox.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { setThemePreferenceOnLoad } from 'lib/DarkMode';\n\nsetThemePreferenceOnLoad(); // Load dark mode preference\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}