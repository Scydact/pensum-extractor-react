{"version":3,"sources":["functions/metadata-fetch.ts","lib/sort-utils.ts","contexts/university-data/index.tsx","lib/DarkMode/select-theme.ts","functions/pensum-converter.ts","functions/pensum-fetch.ts","functions/pensum-save.ts","contexts/active-pensum/local-storage.ts","contexts/active-pensum/index.tsx","components/PensumSelector.tsx","components/PensumDisplay/MatCode.tsx","components/PensumDisplay/PensumTable.tsx","components/PensumDisplay/PensumDisplay.tsx","components/PensumDisplay/index.tsx","components/PensumExtractor.tsx","lib/DarkMode/index.ts","lib/DarkMode/DarkModeSwitch.tsx","components/AppNavbar.tsx","components/AppFooter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UNIVERSITIES_PATH","BASE_PATH","CAREERS_FILE","a","fetch","response","json","unisObj","TypeError","universities","universityCode","university","api","careers","path","toLowerCase","carrerasObj","sortByProp","propList","length","b","prop","window","universityDataReducer","state","action","type","payload","selected","loading","error","console","initialUniversityData","UniversityContext","createContext","dispatch","UniversityProvider","memo","children","useReducer","useEffect","fetchUniversities","then","unis","u","sort","catch","e","finally","Provider","value","optionStyle","option","styles","data","isDisabled","isFocused","isSelected","color","undefined","selectTheme","theme","colors","primary","primary75","primary50","primary25","danger","dangerLight","neutral0","neutral5","neutral10","neutral20","neutral30","neutral40","neutral50","neutral60","neutral70","neutral80","neutral90","validatePensum","pensum","version","p","old","Number","process","institution","code","codigo","publishDate","vigencia","fetchDate","career","carrera","info","infoCarrera","loose","periods","cuats","warn","oldReqConverter","req","Array","isArray","oldmat2newmat","oldMat","newMat","name","asignatura","cr","creditos","prereq","coreq","push","prereqExtra","map","x","text","forEach","oldCuat","newCuat","loadPensum2","save","MatConverter","mat","period","loadPensumFromSavePensum","LOCAL_STORAGE_PREFIX","LOCAL_SERVER_PREFIX","fetchPensumFromCode","fetchPensumFromCode_localStorage","fetchPensumFromCode_localData","key","join","pensumData","localStorage","getItem","JSON","parse","mat2savemat","pensumToSavePensum","y","PENSUM_STORAGE_KEY","activePensumReducer","setItem","stringify","removeItem","savePensumToLocalStorage","loadPensumFromLocalStorage","ActivePensumContext","ActivePensumProvider","customDispatch","useCallback","createLabelString","PensumSelector","useContext","activePensum","activePensumDispatcher","universityData","universityDispatcher","selectedUni","useState","pensumList","setPensumList","pensumOnInput","setPensumOnInput","uni","find","careerOption","careerSelectOptions","label","universitySelectOptions","useMemo","shortName","longName","fetchCarreras","outForm","Form","onSubmit","evt","preventDefault","options","isSearchable","isLoading","onChange","newValue","className","isClearable","loadingMessage","Button","disabled","style","String","Card","Body","MatCode","content","TableHead","Row","Col","MatRow","cl","idx","reqs","i","Period","cuat","cumlen","PensumTable","sum","Container","PensumDisplay","Title","PensumExtractor","props","isCssInit","darkmode","setColorPreference","color_p","persist","initial","new_s","old_s","el","document","body","classList","add","remove","setTimeout","updateUI","id","querySelector","dataset","setAttribute","hrefDark","hrefLight","colorScheme","initColorCSS","el_o","el_l","el_d","getAttribute","DarkModeSwitch","dark","setDark","setDarkmode","OverlayTrigger","placement","overlay","Tooltip","checked","target","AppNavbar","navbarRef","useRef","prevScrollPos","scrollY","onScrollFn","current","currentScrollPos","addEventListener","removeEventListener","Navbar","ref","variant","fixed","Brand","AppFooter","href","App","Providers","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","osColorPreference","matchMedia","matches","preferredColorScheme","setThemePreferenceOnLoad","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ca85d6d.chunk.js","sourcesContent":["const BASE_PATH = './pensum';\r\nconst UNIVERSITIES_PATH = BASE_PATH + '/universities.json';\r\nconst CAREERS_FILE = 'index.json';\r\n\r\n/** Fetches universities.json */\r\nexport async function fetchUniversities() {\r\n  const response = await fetch(UNIVERSITIES_PATH);\r\n  const unisObj: PensumJson.Universities = await response.json();\r\n\r\n  if (typeof unisObj !== 'object') {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if (!unisObj.universities) {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  return unisObj;\r\n}\r\n\r\n/** Fetches ./pensum/$UNIVERSITY/index.json */\r\nexport async function fetchCarreras(universityCode?: string) {\r\n  if (!universityCode) return {\r\n      university: '',\r\n      api: null,\r\n      careers: []\r\n  } as PensumJson.PensumIndex;\r\n\r\n  const path = BASE_PATH + '/' + universityCode.toLowerCase() + '/' + CAREERS_FILE\r\n  const response = await fetch(path);\r\n  const carrerasObj: PensumJson.PensumIndex = await response.json();\r\n\r\n  if (typeof carrerasObj !== 'object') {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if ( !carrerasObj.api\r\n    || !carrerasObj.university\r\n    || !carrerasObj.careers\r\n  ) {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  return carrerasObj;\r\n}\r\n","export function sortByProp<T, K extends keyof T>(...propList: K[]) {\r\n  if (propList.length === 0) {\r\n    return (a: T, b: T) => (a > b) ? 1 : -1;\r\n  }\r\n\r\n  if (propList.length === 1) {\r\n    const prop = propList[0];\r\n    return (a: T, b: T) => (a[prop] > b[prop]) ? 1 : -1; \r\n  }\r\n\r\n  return (a: T, b: T) => {\r\n    for (let prop of propList) {\r\n      if (a[prop] > b[prop]) {\r\n        return 1;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n}\r\n\r\n(window as any)['sortByProp'] = sortByProp;","import { fetchUniversities } from \"functions/metadata-fetch\"\r\nimport { sortByProp } from \"lib/sort-utils\"\r\nimport React, { createContext, memo, useEffect, useReducer } from \"react\"\r\n\r\nexport declare namespace UniversityData {\r\n  \r\n  /** List of universities/careers. */\r\n  type Payload = {\r\n    universities: PensumJson.University[],\r\n    selected: PensumJson.University | null,\r\n    loading: boolean,\r\n    error: string | null,\r\n  }\r\n\r\n  type Action = \r\n    | {\r\n      type: 'set/universities'\r\n      payload: Payload['universities']\r\n    }\r\n    | {\r\n      type: 'set/selected'\r\n      payload: Payload['selected']\r\n    }\r\n    | {\r\n      type: 'set/loading'\r\n      payload: Payload['loading']\r\n    }\r\n    | {\r\n      type: 'set/error'\r\n      payload: Payload['error']\r\n    }\r\n}\r\n\r\nfunction universityDataReducer(\r\n  state: UniversityData.Payload,\r\n  action: UniversityData.Action): UniversityData.Payload {\r\n  switch (action.type) {\r\n    case 'set/universities':\r\n      return {\r\n        ...state,\r\n        universities: action.payload\r\n      }\r\n\r\n    case 'set/selected':\r\n      return {\r\n        ...state,\r\n        selected: action.payload\r\n      }\r\n\r\n    case 'set/loading':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      }\r\n\r\n    case 'set/error':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n\r\n    default:\r\n      console.error('Unknown action: ', action);\r\n      return state;\r\n  }\r\n}\r\n\r\n/** Initial value for UniversityData */\r\nconst initialUniversityData: UniversityData.Payload = {\r\n  universities: [],\r\n  selected: null,\r\n  loading: true,\r\n  error: null,\r\n}\r\n\r\n\r\n// CONTEXT STUFF\r\n/** University data context. To be used with useContext() for getting selected university/careers. */\r\nexport const UniversityContext = createContext({\r\n  state: initialUniversityData, \r\n  dispatch: {} as React.Dispatch<UniversityData.Action>,\r\n});\r\n\r\ntype UniCtxProps = { children: any};\r\n\r\n/** Handles automatic load of university list. */\r\nexport const UniversityProvider = memo(function UniversityProvider({ children }: UniCtxProps) {\r\n  const [state, dispatch] = useReducer(universityDataReducer, initialUniversityData);\r\n\r\n  // onMount: load universities\r\n  useEffect(() => {\r\n    fetchUniversities()\r\n      .then(unis => {\r\n        const u = unis.universities.sort(sortByProp('longName'));\r\n        dispatch({ type: 'set/universities', payload: u })\r\n      })\r\n      .catch(e => {\r\n        dispatch({ type: 'set/error', payload: e })\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: 'set/loading', payload: false })\r\n      })\r\n  }, []);\r\n  \r\n  return <UniversityContext.Provider value={{ state, dispatch }}>\r\n    {children}\r\n  </UniversityContext.Provider>\r\n})\r\n\r\nexport default UniversityContext;","/**\r\n * Dark mode support styles for react-select components.\r\n */\r\n\r\nimport { StylesConfig, ThemeConfig } from \"react-select\";\r\nimport './theme.scss';\r\n\r\n/** Include this to allow dark mode toggling. */\r\nconst selectTheme: ThemeConfig = (theme) => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary: 'var(--bs-primary)',   // Focus border\r\n    primary75: 'rgba(var(--bs-primary-rgb), 0.75)',\r\n    primary50: 'rgba(var(--bs-primary-rgb), 0.50)',\r\n    primary25: 'rgba(var(--bs-primary-rgb), 0.25)', // Selected Option color\r\n    danger: 'var(--bs-danger)',\r\n    dangerLight: 'rgba(var(--bs-danger-rgb), 0.25)',\r\n    neutral0: 'var(--bs-body-bg)',  // Background\r\n    neutral5: 'var(--th-gray-50)',\r\n    neutral10: 'var(--th-gray-100)',\r\n    neutral20: 'var(--th-gray-200)',  // Border\r\n    neutral30: 'var(--th-gray-300)',  // Border hover/focus\r\n    neutral40: 'var(--th-gray-400)',\r\n    neutral50: 'var(--th-gray-500)',  // Nothing selected\r\n    neutral60: 'var(--th-gray-600)',  // dropdown arrow (focus)\r\n    neutral70: 'var(--th-gray-700)',\r\n    neutral80: 'var(--th-gray-800)',  // Something selected\r\n    neutral90: 'var(--th-gray-900)',\r\n  }\r\n})\r\n\r\n/** Style override to make selected value visible on dark mode. */\r\nexport const optionStyle: StylesConfig = {\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n    ...styles, \r\n    color: (isSelected) ? 'white' : undefined,\r\n  })\r\n}\r\n\r\nexport default selectTheme;","\r\n/** Converts a pensum from an old format to a new format. */\r\nexport function validatePensum(pensum: Pensum.Save.Legacy.Pensum2 | Pensum.Save.Pensum | null, university: string) {\r\n  // Nothing we can do about this :(\r\n  if (!pensum) return null;\r\n\r\n  // Legacy version\r\n  if (pensum.version <= 3) {\r\n    const p = loadPensum2(pensum as Pensum.Save.Legacy.Pensum2, university);\r\n    console.warn('Loaded pensum from old version!');\r\n    return p;\r\n  }\r\n\r\n  // Current version\r\n  if (pensum.version === 5) {\r\n    const p = loadPensumFromSavePensum(pensum);\r\n    return p;\r\n  }\r\n\r\n  console.warn('Pensum did not load correctly!', pensum);\r\n  return null;\r\n}\r\n\r\n/** Fixes the save form of a pensum, making sure that all its properties are set (eg. empty prereqs). */\r\nexport function loadPensumFromSavePensum(save: Pensum.Save.Pensum): Pensum.Pensum {\r\n  const MatConverter = (old: Pensum.Save.Mat): Pensum.Mat => {\r\n    const mat: Pensum.Mat = {\r\n      ...old,\r\n      prereq: (old.prereq) ? old.prereq : [],\r\n      coreq: (old.coreq) ? old.coreq : [],\r\n    };\r\n    \r\n    return mat;\r\n  }\r\n\r\n  const loose: Pensum.Mat[] = save.loose.map(mat => MatConverter(mat));\r\n  const periods: Pensum.Mat[][] = save.periods.map(\r\n    period => period.map(mat => MatConverter(mat)));\r\n  \r\n\r\n  return {\r\n    ...save,\r\n    loose,\r\n    periods,\r\n  };\r\n}\r\n\r\n/** Loads a legacy pensum, mapping the old properties to the new ones. */\r\nexport function loadPensum2(old: Pensum.Save.Legacy.Pensum2, university: string): Pensum.Pensum {\r\n  const pensum: Pensum.Pensum = {\r\n    version: Number(process.env.REACT_APP_SAVE_VERSION),\r\n    institution: university,\r\n    code: old.codigo,\r\n    publishDate: old.vigencia,\r\n    fetchDate: '2021-04-24',\r\n    career: old.carrera,\r\n    info: old.infoCarrera,\r\n    loose: [],\r\n    periods: [],\r\n  };\r\n\r\n  if (!(old.cuats && old.cuats.length)) {\r\n    console.warn(`Pensum ${old.codigo} (${old.carrera}) did not contain any cuat!`);\r\n    return pensum;\r\n  }\r\n\r\n  const oldReqConverter = (req: Pensum.Save.Legacy.Mat['prereq']): string[] => {\r\n    if (!req) return [];\r\n    if (typeof req === 'string') return [req];\r\n    if (Array.isArray(req)) return [...req];\r\n\r\n    console.warn('Unknown requirement!: ', req);\r\n    return [];\r\n  }\r\n\r\n  // Mat converter\r\n  const oldmat2newmat = (oldMat: Pensum.Save.Legacy.Mat) => {\r\n    const newMat: Pensum.Mat = {\r\n      code: oldMat.codigo,\r\n      name: oldMat.asignatura,\r\n      cr: oldMat.creditos,\r\n      prereq: [],\r\n      coreq: [],\r\n    };\r\n\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereq));\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereqExtra).map(x => ({ text: x })));\r\n    return newMat;\r\n  }\r\n\r\n  \r\n  old.cuats.forEach((oldCuat) => {\r\n    const newCuat = [];\r\n\r\n    for (const oldMat of oldCuat) {\r\n      const newMat = oldmat2newmat(oldMat);\r\n      newCuat.push(newMat);\r\n    }\r\n    \r\n    pensum.periods.push(newCuat);\r\n  });\r\n\r\n  return pensum;\r\n}\r\n\r\n/** Converts a pensum into its save form, reducing its size if no requirements are used for each Mat. */\r\nexport function convertPensumToSave(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  \r\n  const mat2savemat = (mat: Pensum.Mat): Pensum.Save.Mat => {\r\n    const out: any = {...mat};\r\n    if (out.prereq.length === 0) delete out.prereq;\r\n    if (out.coreq.length === 0) delete out.coreq;\r\n    \r\n    return out;\r\n  }\r\n  \r\n  const out = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(mat => mat2savemat(mat)),\r\n    periods: pensum.periods.map(p => p.map(mat => mat2savemat(mat))),\r\n  };\r\n  \r\n\r\n  return out;\r\n}","import { validatePensum } from \"./pensum-converter\";\r\n\r\nexport const LOCAL_STORAGE_PREFIX = 'pensumextractor';\r\nexport const LOCAL_SERVER_PREFIX = './pensum';\r\n\r\n/**\r\n * Tries to load from the given pensum code from a university.\r\n * \r\n * Lookup order:\r\n *  1. `localStorage`\r\n *  2. local data (`pensum/university/CODE.json`)\r\n *  3. from url\r\n */\r\nexport async function fetchPensumFromCode(university?: string, code?: string) {\r\n    if (!university || !code) return null;\r\n\r\n    let pensum: Pensum.Pensum | null;\r\n\r\n    pensum = await fetchPensumFromCode_localStorage(university, code);\r\n    if (pensum) return pensum;\r\n\r\n    pensum = await fetchPensumFromCode_localData(university, code);\r\n    if (pensum) return pensum;\r\n\r\n    return null;\r\n}\r\n\r\n/** \r\n * Tries to fetch the pensum from `localStorage`.\r\n * \r\n * **Important note!** This only does fetch. The saving to `localStorage` will be done at window.unload.\r\n */\r\nexport async function fetchPensumFromCode_localStorage(university: string, code: string) {\r\n    const key = [LOCAL_STORAGE_PREFIX, university, code].join('_');\r\n    const pensumData = localStorage.getItem(key);\r\n\r\n    if (!pensumData) return null; // Could not fetch\r\n\r\n    // Parse fetched data\r\n    // TODO: CHECK IF DATA IS VALID\r\n    const pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n    return validatePensum(pensum, university);\r\n}\r\n\r\n/** Tries to fetch the pensum from `./pensum/$UNIVERSIDAD.` */\r\nexport async function fetchPensumFromCode_localData(university: string, code: string) {\r\n    const path = [LOCAL_SERVER_PREFIX, university, code].join('/') + '.json';\r\n    const response = await fetch(path);\r\n    const pensumData: Pensum.Save.Pensum = await response.json();\r\n\r\n    if (!pensumData) return null; // Could not fetch\r\n\r\n    // TODO: CHECK IF DATA IS VALID\r\n    // Parse fetched data\r\n    const pensum = pensumData;\r\n    return validatePensum(pensum, university);\r\n}\r\n\r\nexport async function savePensumToLocalStorage(pensum: Pensum.Pensum) {\r\n    \r\n}","/** Omits prereq | coreq if empty. */\r\nfunction mat2savemat(mat: Pensum.Mat): Pensum.Save.Mat {\r\n  const save: Pensum.Save.Mat = { ...mat };\r\n\r\n  if (save.prereq && save.prereq.length === 0)\r\n    delete save.prereq;\r\n  if (save.coreq && save.coreq.length === 0)\r\n    delete save.coreq;\r\n\r\n  return save;\r\n}\r\n\r\n/** This function removes any empty parameters to make the savepensum smaller. */\r\nfunction pensumToSavePensum(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  const save = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(x => mat2savemat(x)),\r\n    periods: pensum.periods.map(x => x.map(y => mat2savemat(y))),\r\n  };\r\n\r\n  return save;\r\n}\r\n\r\nexport default pensumToSavePensum;","import { validatePensum } from \"functions/pensum-converter\";\r\nimport pensumToSavePensum from \"functions/pensum-save\";\r\n\r\nexport declare namespace ActivePensum {\r\n\r\n  /** List of universities/careers. */\r\n  type Payload = Pensum.Pensum | null;\r\n\r\n  type Action =\r\n    | {\r\n      type: 'set'\r\n      payload: Payload\r\n    }\r\n    | {\r\n      type: 'clear' | 'load/fromSave'\r\n    }\r\n    | {\r\n      type: 'load'\r\n      payload: {\r\n        university: string,\r\n        code: string,\r\n      }\r\n    }\r\n}\r\n\r\nconst PENSUM_STORAGE_KEY = 'pensumData';\r\n\r\nexport function savePensumToLocalStorage(pensum: Pensum.Pensum | null) {\r\n  if (!pensum) {\r\n    localStorage.removeItem(PENSUM_STORAGE_KEY);\r\n    return;\r\n  }\r\n\r\n  var save = pensumToSavePensum(pensum);\r\n  localStorage.setItem(PENSUM_STORAGE_KEY, JSON.stringify(save));\r\n}\r\n\r\nexport function loadPensumFromLocalStorage(): Pensum.Pensum | null {\r\n  const pensumData = localStorage.getItem(PENSUM_STORAGE_KEY);\r\n\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  const pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n  const loadedPensum = validatePensum(pensum, pensum.institution);\r\n  return loadedPensum;\r\n}\r\n\r\n\r\nexport function activePensumReducer(\r\n  state: ActivePensum.Payload,\r\n  action: ActivePensum.Action): ActivePensum.Payload {\r\n  switch (action.type) {\r\n    case 'clear':\r\n      // savePensumToLocalStorage(null); // Dont clear save!\r\n      return null;\r\n\r\n    case 'set':\r\n      savePensumToLocalStorage(action.payload);\r\n      return action.payload;\r\n\r\n    case 'load/fromSave':\r\n      return loadPensumFromLocalStorage();\r\n\r\n    // Case for 'load' is handled on the Provider, since its async!\r\n\r\n    default:\r\n      console.error('Unknown action \"' + action.type + '\".');\r\n      return state;\r\n  }\r\n}","import { fetchPensumFromCode } from \"functions/pensum-fetch\";\r\nimport { createContext, memo, useCallback, useEffect, useReducer } from \"react\";\r\nimport { ActivePensum, activePensumReducer } from \"./local-storage\";\r\n\r\ntype ActivePensumContextProps = {\r\n  state: Pensum.Pensum | null,\r\n  dispatch: (action: ActivePensum.Action) => any,\r\n}\r\n\r\n/** Context for the current loaded pensum. */\r\nconst ActivePensumContext = createContext({} as ActivePensumContextProps);\r\n\r\ntype Props = { children: any};\r\n\r\n// this double naming thing is so the React chrome extension gets the name correctly.\r\nexport const ActivePensumProvider = memo(function ActivePensumProvider({ children }: Props) { \r\n  const [state, dispatch] = useReducer(activePensumReducer, null);\r\n\r\n  // onMount: load saved pensum\r\n  useEffect(() => {\r\n    dispatch({type: 'load/fromSave'});\r\n  }, []);\r\n\r\n  const customDispatch = useCallback(async (action) => {\r\n    switch (action.type) {\r\n      case 'load':\r\n        const {university, code} = action.payload;\r\n        const pensum = await fetchPensumFromCode(university, code);\r\n        dispatch({ type: 'set', payload: pensum });\r\n        break;\r\n\r\n      default:\r\n        dispatch(action);\r\n    }\r\n  }, []);\r\n  \r\n  return <ActivePensumContext.Provider value={{ state, dispatch: customDispatch }}>\r\n    {children}\r\n  </ActivePensumContext.Provider>\r\n})\r\n\r\n\r\nexport default ActivePensumContext;","import { fetchCarreras } from \"functions/metadata-fetch\";\r\nimport UniversityContext from \"contexts/university-data\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport Select from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport selectTheme, { optionStyle } from \"lib/DarkMode/select-theme\";\r\nimport { sortByProp } from \"lib/sort-utils\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\n\r\n// type SelectProps = React.ComponentProps<typeof Select>['onChange'];\r\ntype SelectProps = { label: string, value: string } | null;\r\n\r\n/** Creates a formatted label, for use with this component's <Select> labels. */\r\nfunction createLabelString(code: string, name: string) {\r\n  return `[${code}] ${name}`;\r\n}\r\n\r\n/** Simple form that manages University and Career selection \r\n * (Populates the university/career list from the server.). \r\n * Also loads the required pensum. */\r\nfunction PensumSelector() {\r\n  const { state: activePensum, dispatch: activePensumDispatcher } = useContext(ActivePensumContext);\r\n  const { state: universityData, dispatch: universityDispatcher } = useContext(UniversityContext);\r\n  const {universities, selected: selectedUni, loading, error} = universityData;\r\n\r\n  const [pensumList, setPensumList] = useState(undefined as PensumJson.PensumIndex | undefined);\r\n  const [pensumOnInput, setPensumOnInput] = useState(null as SelectProps);\r\n\r\n\r\n  // On active pensum change (may be triggered by this same element, or not?)\r\n  useEffect(() => {\r\n    if (activePensum) {\r\n      // Set selected university\r\n      const uni = universities.find(x => x.code === activePensum.institution);\r\n      if (uni) universityDispatcher({ type: 'set/selected', payload: uni });\r\n\r\n      // Set career\r\n      const careerOption = careerSelectOptions.find(x => x.value === activePensum.code)\r\n        || {\r\n        value: activePensum.code,\r\n        label: createLabelString(activePensum.code, activePensum.career),\r\n      };\r\n      setPensumOnInput(careerOption);\r\n\r\n    } else {\r\n      setPensumOnInput(null);\r\n    }\r\n  }, [\r\n    activePensum,\r\n    activePensum?.code,\r\n    activePensum?.career,\r\n    activePensum?.institution\r\n  ]);\r\n\r\n\r\n  // University select options\r\n  const universitySelectOptions = useMemo(() =>\r\n    universityData.universities.map(\r\n      x => ({ value: x.code, label: createLabelString(x.shortName, x.longName) })),\r\n    [universityData, universityData.universities]);\r\n\r\n\r\n  // Update the university list if university changes\r\n  useEffect(() => {\r\n    universityDispatcher({type: \"set/selected\", payload: universities[0] || null});\r\n  }, [universities]);\r\n\r\n\r\n  // On user change university selection\r\n  const handleUniversityChange = (newValue: SelectProps) => {\r\n    if (!newValue) {\r\n      universityDispatcher({type: \"set/selected\", payload: null})\r\n      return;\r\n    }\r\n    \r\n    const selected = universities.find(x => x.code === newValue.value) || null;\r\n    universityDispatcher({ type: \"set/selected\", payload: selected });\r\n      \r\n    if (newValue.value !== selected?.code)\r\n      setPensumOnInput(null);\r\n  }\r\n\r\n\r\n\r\n  // Carrera select options\r\n  const careerSelectOptions = useMemo(() => {\r\n    if (!pensumList) return [];\r\n\r\n    const o = pensumList.careers.sort(sortByProp(\"code\"));\r\n\r\n    return o.map(x => ({ value: x.code, label: createLabelString(x.code, x.name) }));\r\n  }, [pensumList]);\r\n\r\n\r\n  // Fetch new carreras if university changes\r\n  useEffect(() => {\r\n    // No university selected. No pensum on the index.\r\n    if (!selectedUni) {\r\n      setPensumList(undefined);\r\n      setPensumOnInput(null);\r\n      return;\r\n    }\r\n\r\n    // Start fetching pensum index list.\r\n    universityDispatcher({ type: \"set/loading\", payload: true })\r\n    fetchCarreras(selectedUni?.code)\r\n      .then(pensumList => {\r\n        setPensumList(pensumList)\r\n      })\r\n      .catch(e => {\r\n        console.warn(`Unable to load pensums for ${selectedUni?.code}: `, e);\r\n        setPensumList(undefined)\r\n      })\r\n      .finally(() => {\r\n        universityDispatcher({ type: \"set/loading\", payload: false })\r\n      })\r\n  }, [selectedUni, universityDispatcher]);\r\n\r\n  const handlePensumChange = (newValue: SelectProps) => {\r\n    setPensumOnInput(newValue);\r\n  }\r\n\r\n\r\n\r\n  // On submit\r\n  const handleSubmit = (evt: any) => {\r\n    evt.preventDefault();\r\n    activePensumDispatcher({type: 'load', payload: {\r\n      university: selectedUni?.code || '',\r\n      code: pensumOnInput?.value || '',\r\n    }});\r\n  }\r\n\r\n\r\n  const outForm = (\r\n    <Form onSubmit={handleSubmit}>\r\n\r\n      <Select\r\n        // defaultValue={universitySelectOptions[0]}\r\n        value={universitySelectOptions.find(x => x.value === selectedUni?.code)}\r\n        options={universitySelectOptions}\r\n        isSearchable={true}\r\n        isLoading={loading}\r\n        onChange={handleUniversityChange as any} // as any to be able to use selectStyles without TS panicking.\r\n        name=\"university\" \r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n        styles={optionStyle}/>\r\n\r\n      <CreatableSelect\r\n        isClearable\r\n        value={pensumOnInput}\r\n        options={careerSelectOptions}\r\n        isLoading={loading}\r\n        loadingMessage={() => <span>Cargando carreras...</span>}\r\n        onChange={handlePensumChange as any} // as any to be able to use selectStyles\r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n        styles={optionStyle}/>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        disabled={!pensumOnInput}\r\n        className=\"w-100\">\r\n      Cargar\r\n      </Button>\r\n\r\n      {(error) ? <p style={{ color: 'red' }}>{String(error)}</p> : null}\r\n    </Form>)\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        {outForm}\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PensumSelector;","import './mat-code.scss';\r\n\r\n\r\ntype Props = {\r\n  data: string | {text: string},\r\n  type: 'prereq' | 'coreq'\r\n}\r\n\r\n\r\nfunction MatCode({ data, type }: Props) {\r\n\r\n  let className = 'mat-code code ' + type;\r\n\r\n  let content;\r\n  if (typeof data === 'string') {\r\n    content = data;\r\n  } else {\r\n    content = data.text;\r\n  }\r\n\r\n  return (<span className={className}>{content}</span>)\r\n}\r\n\r\nexport default MatCode;","import './table.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport MatCode from './MatCode';\r\n\r\ntype Props = {\r\n  pensum: Pensum.Pensum\r\n}\r\n\r\n/** Headers for the pensum table. */\r\nfunction TableHead() {\r\n  return <Row className=\"pensum-header row-period\">\r\n    <Col className=\"row-period-num\">Qt.</Col>\r\n    <Col className=\"row-mat-group\">\r\n      <Row className=\"row-mat\">\r\n        <Col className=\"row-code\">Código</Col>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"row-name\">Asignatura</Col>\r\n            <Col className=\"row-cr\">Cr.</Col>\r\n            <Col className=\"row-prereq\">Requisitos</Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\n/** Displays a single Mat as from the pensum a table row. */\r\nfunction MatRow({ mat, idx }: { mat: Pensum.Mat, idx: number }) {\r\n  var cl = \"row-mat\";\r\n  if (idx & 1) cl += ' even'; // technically should be odd, but i don't care enough.\r\n\r\n  const reqs = [] as JSX.Element[];\r\n  // reqs.push(...mat.prereq.map((x, i) => <span key={i}>{(typeof x === 'string') ? x : x.text} </span>));\r\n  // reqs.push(...mat.coreq.map((x, i) => <span key={i+1000}>{(typeof x === 'string') ? x : x.text} </span>));\r\n  reqs.push(...mat.prereq.map((x, i) => <MatCode key={i} data={x} type='prereq'/>));\r\n\r\n  return <Row className={cl} data-mat={mat.code}>\r\n    <Col className=\"row-code code\">{mat.code}</Col>\r\n    <Col>\r\n      <Row>\r\n        <Col className=\"row-name\">{mat.name}</Col>\r\n        <Col className=\"row-cr\">{mat.cr}</Col>\r\n        <Col className=\"row-req\">{reqs}</Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\n/** Displays a single period from the pensum as table rows. */\r\nexport function Period({ period, cuat, cumlen = 0 }: { period: Pensum.Mat[], cuat: number, cumlen: number}) {\r\n\r\n  return <Row className=\"row-period\">\r\n    <Col className=\"row-period-num\" data-value={cuat + 1}>{cuat + 1}</Col> {/** TODO: Poner en variable global si se maneja por \"cuatrimestre/trimestre/semestre\", y reflejar aqui. */}\r\n    <Col className=\"row-mat-group\">{period.map((mat, i) =>\r\n      <MatRow\r\n        key={mat.code}\r\n        mat={mat}\r\n        idx={i + cumlen} />\r\n    )}\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\n/** Displays a pensum. */\r\nfunction PensumTable({ pensum }: Props) {\r\n  const { periods } = pensum;\r\n\r\n  // https://stackoverflow.com/a/55261098\r\n  // CumLen is passed down to calculate if a row is even or odd.\r\n  const cumulativeSum = (sum: number) => (value: number) => sum += value;\r\n  const cumlen = periods.map(x => x.length).map(cumulativeSum(0))\r\n\r\n  return <Container className=\"pensum-table\">\r\n    <TableHead />\r\n    {periods.map((period, key) =>\r\n      <Period\r\n        key={key}\r\n        period={period}\r\n        cuat={key}\r\n        cumlen={cumlen[key - 1]} />\r\n    )}\r\n  </Container>\r\n}\r\n\r\nexport default PensumTable;","import Card from 'react-bootstrap/Card';\r\nimport PensumTable from \"./PensumTable\";\r\n\r\ntype Props = {\r\n  pensum: Pensum.Pensum\r\n}\r\n\r\nfunction PensumDisplay({ pensum }: Props) {\r\n\r\n\r\n  return <>\r\n    <Card>\r\n      <Card.Body className=\"pensum-table-container\">\r\n        <Card.Title>{pensum.career}</Card.Title>\r\n        <PensumTable pensum={pensum} />\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n\r\nexport default PensumDisplay;","import PensumDisplay from \"./PensumDisplay\";\r\n\r\nexport default PensumDisplay;","import { useContext } from \"react\";\r\nimport PensumSelector from \"./PensumSelector\";\r\nimport PensumDisplay from \"components/PensumDisplay\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\n\r\n\r\ntype Props = any;\r\n\r\nfunction PensumExtractor(props: Props) {\r\n  const { state: activePensum } = useContext(ActivePensumContext);\r\n\r\n  return (<>  \r\n    <PensumSelector />\r\n\r\n    {activePensum && <PensumDisplay pensum={activePensum} />}\r\n  </>)\r\n} \r\n\r\nexport default PensumExtractor;","\r\n// Src: https://github.com/vinorodrigues/bootstrap-dark-5/blob/main/examples/cheatsheet-night.html\r\n// parts from: https://radek.io/posts/secret-darkmode-toggle/\r\n\r\nvar isCssInit = false;\r\nvar darkmode = false;\r\n\r\nfunction setColorPreference(color_p: string, persist = false, initial = false) {\r\n  const new_s = color_p;\r\n  const old_s = color_p === 'light' ? 'dark' : 'light'\r\n\r\n  const el = document.body;  // gets root <html> tag\r\n  el.classList.add('color-scheme-' + new_s);\r\n  el.classList.remove('color-scheme-' + old_s);\r\n\r\n  // Background transitions ONLY on switching theme\r\n  if (!initial) {\r\n    el.classList.add('color-scheme-transition');\r\n    setTimeout(() => {\r\n      el.classList.remove('color-scheme-transition');\r\n    }, 500);\r\n  }\r\n\r\n  if (persist) {\r\n    localStorage.setItem('preferred-color-scheme', color_p);\r\n  }\r\n}\r\n\r\nfunction updateUI(color_p: string, id = 'css') {\r\n  // toggle_btn.checked = color_p === 'dark';\r\n\r\n  if (isCssInit) {\r\n    const el = document.querySelector('#' + id) as HTMLElement;\r\n    const data = el.dataset;\r\n    if (color_p === 'dark') {\r\n      el.setAttribute('href', data.hrefDark || '');\r\n      darkmode = true;\r\n    } else {\r\n      el.setAttribute('href', data.hrefLight || '');\r\n      darkmode = false;\r\n    }\r\n    data.colorScheme = color_p;\r\n  }\r\n}\r\n\r\nfunction initColorCSS(color_p: string, id = 'css') {\r\n  isCssInit = true;\r\n\r\n  var el_o = document.querySelector('#' + id) as HTMLElement;\r\n  var el: HTMLElement;\r\n  if (el_o !== null) el_o.remove();\r\n  var el_l = document.querySelector('#' + id + '-light') as HTMLElement;\r\n  var el_d = document.querySelector('#' + id + '-dark') as HTMLElement;\r\n  if (color_p === 'dark') {\r\n    el = el_d;\r\n    el_o = el_l;\r\n  } else {\r\n    el = el_l;\r\n    el_o = el_d;\r\n  }\r\n  el.setAttribute('data-href-light', el_l.getAttribute('href') || '');\r\n  el.setAttribute('data-href-dark', el_d.getAttribute('href') || '');\r\n  el.setAttribute('data-color-scheme', color_p);\r\n  el.setAttribute('media', 'all');\r\n  el.setAttribute('id', id);\r\n  el_o.remove();\r\n}\r\n\r\n\r\nexport function setDarkmode(dark: boolean) {\r\n  const color_p = dark ? 'dark' : 'light';\r\n\r\n  if (!isCssInit) initColorCSS(color_p);\r\n\r\n  setColorPreference(color_p, true);\r\n  updateUI(color_p);\r\n}\r\n\r\nexport function getDarkmode() {\r\n  return darkmode;\r\n}\r\n\r\nexport function setThemePreferenceOnLoad() {\r\n  /* Set Preference on load */\r\n  const osColorPreference = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  // console.log('OS wants ' + osColorPreference);\r\n  var preferredColorScheme = localStorage.getItem('preferred-color-scheme');\r\n  if (preferredColorScheme !== null) {\r\n    initColorCSS(preferredColorScheme);\r\n  } else {\r\n    preferredColorScheme = osColorPreference;\r\n  }\r\n  setColorPreference(preferredColorScheme, false, true);\r\n  updateUI(preferredColorScheme);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport { BsFillMoonStarsFill } from 'react-icons/bs';\r\nimport { FaSun } from 'react-icons/fa';\r\nimport { getDarkmode, setDarkmode } from \".\";\r\nimport './btn-switch.scss';\r\n\r\n\r\nfunction DarkModeSwitch() {\r\n  const [dark, setDark] = useState(false);\r\n  \r\n  // onMount\r\n  useEffect(() => {\r\n    setDark(getDarkmode());\r\n  }, [])\r\n\r\n  // onChange\r\n  useEffect(() => {\r\n    setDarkmode(dark);\r\n  }, [dark])\r\n  \r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    setDark(e.target.checked);\r\n  }\r\n\r\n  return <OverlayTrigger\r\n    placement=\"left\"\r\n    overlay={<Tooltip>{(dark ? 'Desactivar' : 'Activar') + ' modo oscuro'}</Tooltip>}>\r\n    <label className={\"darkmode-switch\" + (dark ? ' dark' : '')}>\r\n      {(dark) ? <BsFillMoonStarsFill/> : <FaSun />}\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={dark}\r\n        onChange={handleChange} />\r\n    </label>\r\n  </OverlayTrigger>\r\n}\r\n\r\nexport default DarkModeSwitch;","import DarkModeSwitch from \"lib/DarkMode/DarkModeSwitch\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\n\r\n\r\nfunction AppNavbar() {\r\n  const navbarRef = useRef(null as HTMLElement | null);\r\n\r\n  // Navbar hide on scroll\r\n  useEffect(() => {\r\n    var prevScrollPos = window.scrollY;\r\n    const onScrollFn = () => {\r\n      if (!navbarRef.current) return;\r\n      var currentScrollPos = window.scrollY;\r\n      if (prevScrollPos > currentScrollPos) {\r\n        navbarRef.current.classList.remove('hidden');\r\n      } else {\r\n        navbarRef.current.classList.add('hidden');\r\n      }\r\n      prevScrollPos = currentScrollPos;\r\n    }\r\n\r\n    window.addEventListener('scroll', onScrollFn);\r\n    return () => window.removeEventListener('scroll', onScrollFn);\r\n  }, []);\r\n\r\n  return <Navbar\r\n    ref={navbarRef}\r\n    variant=\"dark\"\r\n    className=\"App-header mb-3\"\r\n    fixed=\"top\" >\r\n    <Container>\r\n      <Navbar.Brand>PENSUMS UNAPEC</Navbar.Brand>\r\n\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  </Navbar>\r\n}\r\n\r\nexport default AppNavbar;","\r\nfunction AppFooter() {\r\n  return <footer className=\"mt-3 navbar navbar-expand navbar-light static-bottom\">\r\n    <span>Pensum Extractor DO</span>\r\n    <span>Fernando Rivas, 2021</span>\r\n    <span><a href=\"http://scydact.github.io/\">scydact.github.io</a></span>\r\n    <span>Version v{process.env.REACT_APP_VERSION} | save v{process.env.REACT_APP_SAVE_VERSION}</span>\r\n    <span>\r\n      En caso de problemas o sugerencias,\r\n      favor escribir a <a\r\n        href=\"mailto:scydact@gmail.com?subject=[Pensum Extractor]\">\r\n        scydact@gmail.com</a>.\r\n    </span>\r\n  </footer>\r\n}\r\n\r\nexport default AppFooter;","import './App.scss';\nimport './global-vars.scss';\nimport PensumExtractor from 'components/PensumExtractor';\nimport Container from 'react-bootstrap/Container';\nimport AppNavbar from 'components/AppNavbar';\nimport AppFooter from 'components/AppFooter';\nimport { UniversityProvider } from 'contexts/university-data';\nimport { ActivePensumProvider } from 'contexts/active-pensum';\nimport { useCallback } from 'react';\n\n\nfunction App() {\n\n  // Nested ContextProviders\n  const Providers = useCallback(function Providers(props: any) {\n    return (\n      <UniversityProvider>\n        <ActivePensumProvider>\n          {props.children}\n        </ActivePensumProvider>\n      </UniversityProvider>\n    )\n  }, []);\n\n  return (  \n    <Providers>\n      <AppNavbar />\n\n      <Container fluid className=\"App\">\n        <PensumExtractor />\n      </Container>\n\n      <AppFooter />\n    </Providers>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap-dark-5/dist/css/bootstrap-blackbox.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { setThemePreferenceOnLoad } from 'lib/DarkMode';\n\nsetThemePreferenceOnLoad(); // Load dark mode preference\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}