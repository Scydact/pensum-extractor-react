{"version":3,"sources":["lib/DarkMode/index.ts","lib/DarkMode/DarkModeSwitch.tsx","components/AppNavbar.tsx","components/AppFooter.tsx","functions/metadata-fetch.ts","lib/sort-utils.ts","contexts/university-data/index.tsx","lib/DarkMode/select-theme.ts","functions/pensum-fetch.ts","functions/pensum-save.ts","functions/pensum-get-extras.ts","lib/set-utils.ts","contexts/active-pensum/reducer.ts","contexts/active-pensum/index.tsx","components/Pensum/PensumSelector.tsx","contexts/mat-selection/default.ts","contexts/mat-selection/reducer.ts","contexts/mat-selection/index.tsx","components/Pensum/Mat/MatCode.tsx","contexts/pensum-row-nodes/index.tsx","components/Pensum/Table/MatRow.tsx","components/Pensum/Table/Period.tsx","components/Pensum/Table/Table.tsx","components/Pensum/Table/index.ts","components/Pensum/PensumDisplay.tsx","components/Pensum/Filter/FilterModeSelector.tsx","components/Pensum/Filter/FilterVisibilitySelector.tsx","components/Pensum/Filter/index.tsx","components/Pensum/PensumExtractor.tsx","components/MatInfo/index.tsx","components/MatInfo/MatInfo.tsx","components/MatInfo/Details.tsx","components/MatInfo/MatIndex.tsx","App.tsx","reportWebVitals.ts","index.tsx","lib/format-utils.tsx","functions/pensum-converter.ts"],"names":["isCssInit","setColorPreference","color_p","persist","initial","new_s","old_s","el","document","body","classList","add","remove","dataset","colorScheme","setTimeout","localStorage","setItem","updateUI","id","querySelector","data","setAttribute","hrefDark","hrefLight","initColorCSS","el_o","el_l","el_d","getAttribute","DarkModeSwitch","useState","dark","setDark","useEffect","setDarkmode","OverlayTrigger","placement","overlay","Tooltip","className","type","checked","onChange","e","target","AppNavbar","navbarRef","useRef","prevScrollPos","window","scrollY","onScrollFn","current","currentScrollPos","addEventListener","removeEventListener","Navbar","ref","variant","fixed","Container","Brand","AppFooter","href","process","BASE_PATH","UNIVERSITIES_PATH","CAREERS_FILE","a","fetch","response","json","unisObj","TypeError","universities","fetchCarreras","universityCode","university","api","careers","path","toLowerCase","carrerasObj","sortByProp","propList","length","b","prop","universityDataReducer","state","action","payload","loading","selected","code","find","x","imgUrl","longName","shortName","toUpperCase","console","warn","error","initialUniversityData","UniversityContext","createContext","dispatch","select","UniversityProvider","memo","children","useReducer","useCallback","pensumList","fetchUniversities","then","unis","u","sort","catch","finally","Provider","value","optionStyle","option","provided","color","isSelected","undefined","placeholder","opacity","selectTheme","theme","colors","primary","primary75","primary50","primary25","danger","dangerLight","neutral0","neutral5","neutral10","neutral20","neutral30","neutral40","neutral50","neutral60","neutral70","neutral80","neutral90","LOCAL_STORAGE_PREFIX","LOCAL_SERVER_PREFIX","fetchPensumFromCode","PensumFetchError","fetchPensumFromCode_localStorage","pensum","fetchPensumFromCode_localData","fetchPensumFromSource","key","join","pensumData","getItem","JSON","parse","validatePensum","extractor","default","url","log","Error","mat2savemat","mat","save","prereq","coreq","pensumToSavePensum","loose","map","periods","y","processPensumMats","list","periodMap","Map","codeMap","postreqMap","looseUnhandled","Set","matMap","matPeriod","matPostreq","mats","warnings","processMat","periodNum","has","push","text","set","forEach","period","periodIdx","get","matSet","keys","setA","setB","_difference","elem","delete","difference","warning","PENSUM_STORAGE_KEY","createPayload","matData","activePensumReducer","stringify","removeItem","savePensumToLocalStorage","institution","loadPensumFromLocalStorage","defaultContext","load","ActivePensumContext","ActivePensumProvider","m","SyntaxError","message","createLabelString","name","SelectUni","options","isLoading","isSearchable","styles","SelectCareer","isClearable","loadingMessage","PensumSelector","useContext","activePensum","error_pensum","loading_pensum","loadPensum","universityData","selectUniversity","selected_uni","loading_uni","error_uni","pensumOnInput","setPensumOnInput","previousPensum","usePreviousValue","careerSelectOptions","useMemo","label","careerOption","career","universitySelectOptions","selectedUniversity","handleUniversityChange","newValue","handleSubmit","evt","preventDefault","uni","Card","Body","Form","onSubmit","Button","disabled","Spinner","animation","size","style","String","matSelectionModeTypes","createDefaultSelection","mode","tracker","course","passed","currentName","storage","filter","TRACKER_STORAGE_KEY","matSelectionReducer","obj","fn","cloneTracker","o","Object","entries","newMode","matCount","sortedTracker","fromEntries","i","k","v","untracked","isTracked","allOnMain","allUnselected","noneUnselected","someUnselected","newName","t","trim","hasOwnProperty","RangeError","oldName","oldTracker","trackerState","JSONSetUtils","saveTrackerToLocalStorage","str","base","createDefaultState","val","every","createPayloadWithDefaults","loadTrackerFromLocalStorage","Array","isArray","matSelectHelpers","periodStr","MatSelectionDispatchContext","MatSelectionModeContext","MatSelectionTrackerContext","MatSelectionTrackerNameContext","MatSelectionTrackerStorageContext","MatSelectionFilterContext","MatSelectionProvider","MatCode","content","rest","classnames","LongMatCode","scrollToRow","updateNode","PensumRowNodesContext","PensumRowNodesProvider","node","n","scrollIntoView","behavior","block","trackerCheckmarks","MatRow","idx","rowRef","clickableRef","trackerMode","currentTracker","cl","reqs","cbMouseEnter","cbMouseLeave","clickable","onClick","Row","Col","to","cr","Period","cumlen","isAllMatsOnSameTracker","commonTracker","filteredPeriod","tr","matrows","TableHead","props","processedPeriod","periodNumStr","defaultPeriodType","acronym","two","PensumTable","sum","periodIndexStart","periodType","periodElems","PensumDisplay","Title","FilterModeSelector","Btns","elems","ButtonGroup","FilterVisibilitySelector","PensumFilter","PensumExtractor","MatInfo","navigate","useNavigate","Modal","show","onHide","Footer","Details","rowNodeMap","useParams","Invalid","title","periodName","generalInfo","isMatHiddenOnPensum","locateBtn","reqCbFactory","prereqInfo","req","coreqInfo","postreqs","postreqInfo","Header","closeButton","Index","Layout","fluid","App","Providers","basename","element","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","osColorPreference","matchMedia","matches","preferredColorScheme","setThemePreferenceOnLoad","ReactDOM","render","StrictMode","getElementById","arr","Boolean","japaneseDateFormat","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","version","p","convertPensum2","MatConverter","old","convertSavePensum","Number","codigo","publishDate","vigencia","fetchDate","carrera","info","infoCarrera","src","date","Date","cuats","oldReqConverter","oldmat2newmat","oldMat","newMat","asignatura","creditos","prereqExtra","oldCuat","newCuat"],"mappings":"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","file":"static/js/main.2a71e3db.chunk.js","sourcesContent":["\r\n// Src: https://github.com/vinorodrigues/bootstrap-dark-5/blob/main/examples/cheatsheet-night.html\r\n// parts from: https://radek.io/posts/secret-darkmode-toggle/\r\n\r\nvar isCssInit = false;\r\n\r\nfunction setColorPreference(color_p: string, persist = false, initial = false) {\r\n  const new_s = color_p;\r\n  const old_s = color_p === 'light' ? 'dark' : 'light'\r\n\r\n  const el = document.body;  // gets root <html> tag\r\n  el.classList.add('color-scheme-' + new_s);\r\n  el.classList.remove('color-scheme-' + old_s);\r\n  el.dataset.colorScheme = new_s;\r\n\r\n  // Background transitions ONLY on switching theme\r\n  if (!initial) {\r\n    el.classList.add('color-scheme-transition');\r\n    setTimeout(() => {\r\n      el.classList.remove('color-scheme-transition');\r\n    }, 500);\r\n  }\r\n\r\n  if (persist) {\r\n    localStorage.setItem('preferred-color-scheme', color_p);\r\n  }\r\n}\r\n\r\nfunction updateUI(color_p: string, id = 'css') {\r\n  // toggle_btn.checked = color_p === 'dark';\r\n\r\n  if (isCssInit) {\r\n    const el = document.querySelector('#' + id) as HTMLElement;\r\n    const data = el.dataset;\r\n    if (color_p === 'dark') {\r\n      el.setAttribute('href', data.hrefDark || '');\r\n    } else {\r\n      el.setAttribute('href', data.hrefLight || '');\r\n    }\r\n    data.colorScheme = color_p;\r\n  }\r\n}\r\n\r\nfunction initColorCSS(color_p: string, id = 'css') {\r\n  isCssInit = true;\r\n\r\n  var el_o = document.querySelector('#' + id) as HTMLElement;\r\n  var el: HTMLElement;\r\n  if (el_o !== null) el_o.remove();\r\n  var el_l = document.querySelector('#' + id + '-light') as HTMLElement;\r\n  var el_d = document.querySelector('#' + id + '-dark') as HTMLElement;\r\n  if (color_p === 'dark') {\r\n    el = el_d;\r\n    el_o = el_l;\r\n  } else {\r\n    el = el_l;\r\n    el_o = el_d;\r\n  }\r\n  el.setAttribute('data-href-light', el_l.getAttribute('href') || '');\r\n  el.setAttribute('data-href-dark', el_d.getAttribute('href') || '');\r\n  el.setAttribute('data-color-scheme', color_p);\r\n  el.setAttribute('media', 'all');\r\n  el.setAttribute('id', id);\r\n  el_o.remove();\r\n}\r\n\r\n\r\nexport function setDarkmode(dark: boolean) {\r\n  const color_p = dark ? 'dark' : 'light';\r\n\r\n  if (!isCssInit) initColorCSS(color_p);\r\n\r\n  setColorPreference(color_p, true);\r\n  updateUI(color_p);\r\n}\r\n\r\nexport function getDarkmode() {\r\n  return document.body.dataset.colorScheme === 'dark';\r\n}\r\n\r\nexport function setThemePreferenceOnLoad() {\r\n  /* Set Preference on load */\r\n  const osColorPreference = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  // console.log('OS wants ' + osColorPreference);\r\n  var preferredColorScheme = localStorage.getItem('preferred-color-scheme');\r\n  if (preferredColorScheme !== null) {\r\n    initColorCSS(preferredColorScheme);\r\n  } else {\r\n    preferredColorScheme = osColorPreference;\r\n  }\r\n  setColorPreference(preferredColorScheme, false, true);\r\n  updateUI(preferredColorScheme);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport { BsFillMoonStarsFill } from 'react-icons/bs';\r\nimport { FaSun } from 'react-icons/fa';\r\nimport { getDarkmode, setDarkmode } from \".\";\r\nimport './btn-switch.scss';\r\n\r\n\r\nfunction DarkModeSwitch() {\r\n  const [dark, setDark] = useState(false);\r\n  \r\n  // onMount\r\n  useEffect(() => {\r\n    setDark(getDarkmode());\r\n  }, [])\r\n\r\n  // onChange\r\n  useEffect(() => {\r\n    setDarkmode(dark);\r\n  }, [dark])\r\n  \r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    setDark(e.target.checked);\r\n  }\r\n\r\n  return <OverlayTrigger\r\n    placement=\"left\"\r\n    overlay={<Tooltip>{(dark ? 'Desactivar' : 'Activar') + ' modo oscuro'}</Tooltip>}>\r\n    <label className={\"darkmode-switch\" + (dark ? ' dark' : '')}>\r\n      {(dark) ? <BsFillMoonStarsFill/> : <FaSun />}\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={dark}\r\n        onChange={handleChange} />\r\n    </label>\r\n  </OverlayTrigger>\r\n}\r\n\r\nexport default DarkModeSwitch;","import DarkModeSwitch from \"lib/DarkMode/DarkModeSwitch\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\n\r\n\r\nfunction AppNavbar() {\r\n  const navbarRef = useRef(null as HTMLElement | null);\r\n\r\n  // Navbar hide on scroll\r\n  useEffect(() => {\r\n    var prevScrollPos = window.scrollY;\r\n    const onScrollFn = () => {\r\n      if (!navbarRef.current) return;\r\n      var currentScrollPos = window.scrollY;\r\n      if (prevScrollPos > currentScrollPos) {\r\n        navbarRef.current.classList.remove('hidden');\r\n      } else {\r\n        navbarRef.current.classList.add('hidden');\r\n      }\r\n      prevScrollPos = currentScrollPos;\r\n    }\r\n\r\n    window.addEventListener('scroll', onScrollFn);\r\n    return () => window.removeEventListener('scroll', onScrollFn);\r\n  }, []);\r\n\r\n  return <Navbar\r\n    ref={navbarRef}\r\n    variant=\"dark\"\r\n    className=\"App-header mb-3\"\r\n    fixed=\"top\" >\r\n    <Container>\r\n      <Navbar.Brand>PENSUMS UNAPEC</Navbar.Brand>\r\n\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  </Navbar>\r\n}\r\n\r\nexport default AppNavbar;","\r\nfunction AppFooter() {\r\n  return <footer className=\"mt-3 navbar navbar-expand navbar-light static-bottom\">\r\n    <span>Pensum Extractor DO</span>\r\n    <span>Fernando Rivas, 2021</span>\r\n    <span><a href=\"http://scydact.github.io/\">scydact.github.io</a></span>\r\n    <span>Version v{process.env.REACT_APP_VERSION} | save v{process.env.REACT_APP_SAVE_VERSION}</span>\r\n    <span>\r\n      En caso de problemas o sugerencias,\r\n      favor escribir a <a\r\n        href=\"mailto:scydact@gmail.com?subject=[Pensum Extractor]\">\r\n        scydact@gmail.com</a>.\r\n    </span>\r\n  </footer>\r\n}\r\n\r\nexport default AppFooter;","const BASE_PATH = process.env.PUBLIC_URL + '/pensum';\r\nconst UNIVERSITIES_PATH = BASE_PATH + '/universities.json';\r\nconst CAREERS_FILE = 'index.json';\r\n\r\n/** Fetches universities.json */\r\nexport async function fetchUniversities() {\r\n  const response = await fetch(UNIVERSITIES_PATH);\r\n  const unisObj: PensumJson.Universities = await response.json();\r\n\r\n  if (typeof unisObj !== 'object') {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if (!unisObj.universities) {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  return unisObj;\r\n}\r\n\r\n/** Fetches ./pensum/$UNIVERSITY/index.json */\r\nexport async function fetchCarreras(universityCode?: string) {\r\n  if (!universityCode) return {\r\n      university: '',\r\n      api: null,\r\n      careers: []\r\n  } as PensumJson.PensumIndex;\r\n\r\n  const path = BASE_PATH + '/' + universityCode.toLowerCase() + '/' + CAREERS_FILE\r\n  const response = await fetch(path);\r\n  const carrerasObj: PensumJson.PensumIndex = await response.json();\r\n\r\n  if (typeof carrerasObj !== 'object') {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if ( !carrerasObj.api\r\n    || !carrerasObj.university\r\n    || !carrerasObj.careers\r\n  ) {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  return carrerasObj;\r\n}\r\n","export function sortByProp<T, K extends keyof T>(...propList: K[]) {\r\n  if (propList.length === 0) {\r\n    return (a: T, b: T) => (a > b) ? 1 : -1;\r\n  }\r\n\r\n  if (propList.length === 1) {\r\n    const prop = propList[0];\r\n    return (a: T, b: T) => (a[prop] > b[prop]) ? 1 : -1; \r\n  }\r\n\r\n  return (a: T, b: T) => {\r\n    for (let prop of propList) {\r\n      if (a[prop] > b[prop]) {\r\n        return 1;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n}\r\n\r\n/** \r\n * Similar to Array.map(), but for objects. \r\n * @example\r\n * const foo = {x: 1, y: 2, z: 3};\r\n * objectMap(foo, v => v.toString());\r\n * // returns {x: '1', y: '2', z: '3'}\r\n */\r\nexport function objectMap\r\n  <T, F extends (val: T[keyof T], key: keyof T, index: number) => any>\r\n  (obj: T, fn: F) {\r\n  return Object.fromEntries(\r\n    (Object.entries(obj) as [keyof T, T[keyof T]][]).map(\r\n      ([k, v], i) => [k, fn(v, k, i)] as [keyof T, ReturnType<F>])\r\n  ) as { [P in keyof T]: ReturnType<F> }\r\n}","import { fetchCarreras, fetchUniversities } from \"functions/metadata-fetch\"\r\nimport { sortByProp } from \"lib/sort-utils\"\r\nimport React, { createContext, memo, useCallback, useEffect, useReducer } from \"react\"\r\n\r\nfunction universityDataReducer(\r\n  state: UniversityData.Payload,\r\n  action: UniversityData.DispatchAction): UniversityData.Payload {\r\n  switch (action.type) {\r\n    case 'set/universities':\r\n      return {\r\n        ...state,\r\n        universities: action.payload\r\n      }\r\n\r\n    case 'set/selected': {\r\n      if (!action.payload) return {\r\n        ...state,\r\n        loading: false,\r\n        selected: null,\r\n      };\r\n\r\n      const { code, data: careerIndex } = action.payload;\r\n      const { careers } = careerIndex;\r\n\r\n      const university = state.universities.find(x => x.code === code) ||\r\n        { code, imgUrl: null, longName: code, shortName: code.toUpperCase() };\r\n\r\n      // Ignore if already selected.\r\n      if (state.selected?.code === code) return {\r\n        ...state,\r\n        loading: false,\r\n      }; \r\n\r\n      // University codes don't match!\r\n      if (university.code !== code) console.warn('University code mismatch!');\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        selected: {\r\n          code,\r\n          university,\r\n          careers,\r\n        }\r\n      }\r\n    }\r\n\r\n    case 'set/loading':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      }\r\n\r\n    case 'set/error':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n\r\n    default:\r\n      console.error('Unknown action: ', action);\r\n      return state;\r\n  }\r\n}\r\n\r\n/** Initial value for UniversityData */\r\nconst initialUniversityData: UniversityData.Payload = {\r\n  universities: [],\r\n  selected: null,\r\n  loading: true,\r\n  error: null,\r\n}\r\n\r\n\r\n\r\n// CONTEXT STUFF\r\n/** University data context. To be used with useContext() for getting selected university/careers. */\r\nexport const UniversityContext = createContext({\r\n  state: initialUniversityData, \r\n  dispatch: {} as React.Dispatch<UniversityData.DispatchAction>,\r\n  select: async (code: string | null) => { },\r\n});\r\n\r\n\r\ntype UniCtxProps = { children: any};\r\n\r\n/** Handles automatic load of university list. */\r\nexport const UniversityProvider = memo(function UniversityProvider({ children }: UniCtxProps) {\r\n  const [state, dispatch] = useReducer(universityDataReducer, initialUniversityData);\r\n\r\n  /** Select a new university from a given code. */\r\n  const select = useCallback(async (code: string | null) => {\r\n    // If no code was given, select no pensum.\r\n    if (!code) {\r\n      dispatch({ type: 'set/selected', payload: null });\r\n      return;\r\n    }\r\n\r\n    // Don't do anything if university code didn't change...\r\n    code = code?.toLowerCase();\r\n    if (code === state.selected?.code) {\r\n      return;\r\n    }\r\n\r\n    // Code was give, select fetch new pensum!\r\n    dispatch({ type: \"set/loading\", payload: true });\r\n    try {\r\n      const pensumList = await fetchCarreras(code);\r\n      dispatch({ type: 'set/selected', payload: { code, data: pensumList } });\r\n    }\r\n    catch (err) {\r\n      console.warn(`Unable to load pensums for ${code}: `, err);\r\n      dispatch({\r\n        type: 'set/selected',\r\n        payload: {\r\n          code: code,\r\n          data: {\r\n            api: null,\r\n            university: code.toUpperCase(),\r\n            careers: [],\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return;\r\n  }, [state.selected, dispatch]);\r\n\r\n\r\n  // onMount: load universities\r\n  useEffect(() => {\r\n    fetchUniversities()\r\n      .then(unis => {\r\n        const u = unis.universities.sort(sortByProp('longName'));\r\n        dispatch({ type: 'set/universities', payload: u })\r\n      })\r\n      .catch(e => {\r\n        dispatch({ type: 'set/error', payload: e })\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: 'set/loading', payload: false })\r\n      })\r\n      \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (state.selected === null) {\r\n      select('unapec');\r\n    }\r\n  }, [select, state.selected]);\r\n  \r\n  return <UniversityContext.Provider value={{ state, dispatch, select }}>\r\n    {children}\r\n  </UniversityContext.Provider>\r\n})\r\n\r\nexport default UniversityContext;","/**\r\n * Dark mode support styles for react-select components.\r\n */\r\n\r\nimport { StylesConfig, ThemeConfig } from \"react-select\";\r\nimport './theme.scss';\r\n\r\n/** Include this to allow dark mode toggling. */\r\nconst selectTheme: ThemeConfig = (theme) => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary: 'var(--bs-primary)',   // Focus border\r\n    primary75: 'rgba(var(--bs-primary-rgb), 0.75)',\r\n    primary50: 'rgba(var(--bs-primary-rgb), 0.50)',\r\n    primary25: 'rgba(var(--bs-primary-rgb), 0.25)', // Selected Option color\r\n    danger: 'var(--bs-danger)',\r\n    dangerLight: 'rgba(var(--bs-danger-rgb), 0.25)',\r\n    neutral0: 'var(--bs-body-bg)',  // Background\r\n    neutral5: 'var(--th-gray-50)',\r\n    neutral10: 'var(--th-gray-100)',\r\n    neutral20: 'var(--th-gray-200)',  // Border\r\n    neutral30: 'var(--th-gray-300)',  // Border hover/focus\r\n    neutral40: 'var(--th-gray-400)',\r\n    neutral50: 'var(--th-gray-500)',  // Nothing selected\r\n    neutral60: 'var(--th-gray-600)',  // dropdown arrow (focus)\r\n    neutral70: 'var(--th-gray-700)',\r\n    neutral80: 'var(--th-gray-800)',  // Something selected\r\n    neutral90: 'var(--th-gray-900)',\r\n  }\r\n})\r\n\r\n/** Style override to make selected value visible on dark mode. */\r\nexport const optionStyle: StylesConfig = {\r\n  option: (provided, state) => ({\r\n    ...provided, \r\n    color: (state.isSelected) ? 'white' : undefined,\r\n  }),\r\n\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    opacity: 0.6,\r\n  })\r\n  \r\n}\r\n\r\nexport default selectTheme;","import { validatePensum } from \"./pensum-converter\";\r\n\r\nexport const LOCAL_STORAGE_PREFIX = 'pensumextractor';\r\nexport const LOCAL_SERVER_PREFIX = process.env.PUBLIC_URL + '/pensum';\r\n\r\n/**\r\n * Tries to load from the given pensum code from a university.\r\n * \r\n * Lookup order:\r\n *  1. `localStorage`\r\n *  2. local data (`pensum/university/CODE.json`)\r\n *  3. from url\r\n */\r\nexport async function fetchPensumFromCode(university?: string, code?: string) {\r\n  if (!university || !code) throw new PensumFetchError('No university or code provided!');//return null;\r\n\r\n  let pensum: Pensum.Pensum | null;\r\n\r\n  pensum = await fetchPensumFromCode_localStorage(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  pensum = await fetchPensumFromCode_localData(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  pensum = await fetchPensumFromSource(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  // Don't return null!\r\n  // Instead throw error, so this gets catched.\r\n  throw new PensumFetchError(`Unable to fetch pensum with identifier ${university}/${code}`);\r\n}\r\n\r\n/** \r\n * Tries to fetch the pensum from `localStorage`.\r\n * \r\n * **Important note!** This only does fetch. The saving to `localStorage` will be done at window.unload.\r\n */\r\nasync function fetchPensumFromCode_localStorage(university: string, code: string) {\r\n  const key = [LOCAL_STORAGE_PREFIX, university, code].join('_');\r\n  const pensumData = localStorage.getItem(key);\r\n\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  const pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n  return validatePensum(pensum, university);\r\n}\r\n\r\n\r\n/** Tries to fetch the pensum from `./pensum/$UNIVERSIDAD.` */\r\nasync function fetchPensumFromCode_localData(university: string, code: string) {\r\n  const path = [LOCAL_SERVER_PREFIX, university, code].join('/') + '.json';\r\n\r\n  let pensumData: Pensum.Save.Pensum;\r\n  try {\r\n    const response = await fetch(path);\r\n    pensumData = await response.json();\r\n  } catch {\r\n    return null;\r\n  }\r\n\r\n  return validatePensum(pensumData, university);\r\n}\r\n\r\nasync function fetchPensumFromSource(university: string, code: string) {\r\n  switch (university) {\r\n    case 'unapec': {\r\n      const extractor = await import('extractor/unapec');\r\n      return await extractor.default(code, \r\n        (state, url, id) => console.log(`${state} ${university}/${code}, using proxy #${id}: ${url}`))\r\n    }\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport class PensumFetchError extends Error {}","/** Omits prereq | coreq if empty. */\r\nfunction mat2savemat(mat: Pensum.Mat): Pensum.Save.Mat {\r\n  const save: Pensum.Save.Mat = { ...mat };\r\n\r\n  if (save.prereq && save.prereq.length === 0)\r\n    delete save.prereq;\r\n  if (save.coreq && save.coreq.length === 0)\r\n    delete save.coreq;\r\n\r\n  return save;\r\n}\r\n\r\n/** This function removes any empty parameters to make the savepensum smaller. */\r\nfunction pensumToSavePensum(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  const save = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(x => mat2savemat(x)),\r\n    periods: pensum.periods.map(x => x.map(y => mat2savemat(y))),\r\n  };\r\n\r\n  return save;\r\n}\r\n\r\nexport default pensumToSavePensum;","import { difference } from \"lib/set-utils\";\r\n\r\n/** Gets all the extra data of a pensum's mats. */\r\nexport function processPensumMats(pensum: Pensum.Pensum | null): ActivePensum.MatExtraData {\r\n  if (!pensum) return {\r\n    list: [],\r\n    periodMap: new Map(),\r\n    codeMap: new Map(),\r\n    postreqMap: new Map(),\r\n    looseUnhandled: new Set(),\r\n  };\r\n\r\n  const matMap = new Map<string, Pensum.Mat>();\r\n  const matPeriod = new Map<string, number>();\r\n  const matPostreq = new Map<string, string[]>();\r\n  const mats: Pensum.Mat[] = [];\r\n  const warnings: { code: string, text: string }[] = [];\r\n\r\n  const processMat = (mat: Pensum.Mat, periodNum: number) => {\r\n    if (matMap.has(mat.code)) \r\n      warnings.push({code: mat.code, text: 'was already registered!'});\r\n\r\n    // Add to all lists/maps/sets\r\n    matMap.set(mat.code, mat);\r\n    matPeriod.set(mat.code, periodNum);\r\n    mats.push(mat);\r\n  }\r\n\r\n\r\n  // Loose mats have period 0\r\n  pensum.loose.forEach(mat => processMat(mat, 0));\r\n\r\n  pensum.periods.forEach((period, periodIdx) => {\r\n    period.forEach(mat => processMat(mat, periodIdx + 1));\r\n  });\r\n\r\n\r\n  // After all mats are registered, get postreqs\r\n  for (const mat of mats) {\r\n    const code = mat.code;\r\n\r\n    for (const prereq of mat.prereq) {\r\n      if (typeof prereq === 'string') { // Only select codes, not {text: ''}\r\n\r\n        // Add or create new list\r\n        const list = matPostreq.get(prereq);\r\n        if (list) list.push(code);\r\n        else matPostreq.set(prereq, [code]);\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  // Get unhandled loose mats\r\n  const matSet = new Set(matMap.keys());\r\n  const hasPostreqSet = new Set(matPostreq.keys());\r\n  \r\n  // Codes that are prereqs to something but do not exist on mats.\r\n  const looseUnhandled = difference(hasPostreqSet, matSet);\r\n\r\n\r\n  // Play all the warnings\r\n  for (const warning of warnings) {\r\n    console.warn(`Warning at pensum-get-extras [${warning.code}]: ${warning.text}`);\r\n  }\r\n\r\n\r\n\r\n  return {\r\n    /** List of all mats */\r\n    list: mats,\r\n    /** Map: code<string> -> period<number> */\r\n    periodMap: matPeriod,\r\n    /** Map : code<string> -> mat<Mat> */\r\n    codeMap: matMap, \r\n    /** Map: code<string> -> postreqs<string> */\r\n    postreqMap: matPostreq,\r\n    /** List of mats that are prereqs but are not registered. */\r\n    looseUnhandled: looseUnhandled,\r\n  }\r\n}\r\n\r\nexport default processPensumMats;","// Almost everything extracted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n\r\n/**\r\n * Checks if all the elements of `subset` are inside `set`.\r\n * @param set Global set\r\n * @param subset Smaller set\r\n * @returns True if the smaller set is inside the global set.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setB = new Set([2, 3])\r\n * isSuperset(setA, setB) // returns true\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function isSuperset<T>(set: Set<T>, subset: Set<T>) {\r\n  for (let elem of subset) {\r\n      if (!set.has(elem)) {\r\n          return false\r\n      }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Returns the union of both sets.\r\n * @param setA \r\n * @param setB \r\n * @returns Union of setA and setB.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * union(setA, setC) // returns Set {1, 2, 3, 4, 5, 6}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function union<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _union = new Set(setA)\r\n  for (let elem of setB) {\r\n      _union.add(elem)\r\n  }\r\n  return _union\r\n}\r\n\r\n/**\r\n * Returns the elements that both sets have in common with each other.\r\n * @param setA \r\n * @param setB \r\n * @returns Intersection of both sets\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * intersection(setA, setC) // returns Set {3, 4}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function intersection<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _intersection = new Set()\r\n  for (let elem of setB) {\r\n      if (setA.has(elem)) {\r\n          _intersection.add(elem)\r\n      }\r\n  }\r\n  return _intersection\r\n}\r\n  \r\n/**\r\n * Returns the elements that are not shared between `setA` and `setB`.\r\n * Same as union(A,B) - intersect(A,B);\r\n * @param setA \r\n * @param setB \r\n * @returns Elements not shared between sets.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * symmetricDifference(setA, setC) // returns Set {1, 2, 5, 6}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function symmetricDifference<T>(setA: Set<T>, setB: Set<T>) {\r\n    let _difference = new Set(setA)\r\n    for (let elem of setB) {\r\n      if (_difference.has(elem)) {\r\n          _difference.delete(elem)\r\n      } else {\r\n          _difference.add(elem)\r\n      }\r\n  }\r\n  return _difference\r\n}\r\n\r\n/**\r\n * Returns the elements of `setA` that are not in `setB`. \r\n * @param setA \r\n * @param setB \r\n * @returns setA - setB\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * difference(setA, setC) // returns Set {1, 2}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function difference<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _difference = new Set(setA)\r\n  for (let elem of setB) {\r\n      _difference.delete(elem)\r\n  }\r\n  return _difference\r\n}","import { validatePensum } from \"functions/pensum-converter\";\r\nimport pensumToSavePensum from \"functions/pensum-save\";\r\nimport processPensumMats from \"functions/pensum-get-extras\";\r\n\r\nconst PENSUM_STORAGE_KEY = process.env.REACT_APP_PENSUM_STORAGE_PENSUM_KEY || 'pensumData';\r\n\r\nexport function savePensumToLocalStorage(pensum: Pensum.Pensum | null) {\r\n  if (!pensum) {\r\n    localStorage.removeItem(PENSUM_STORAGE_KEY);\r\n    return;\r\n  }\r\n\r\n  var save = pensumToSavePensum(pensum);\r\n  localStorage.setItem(PENSUM_STORAGE_KEY, JSON.stringify(save));\r\n}\r\n\r\nexport function loadPensumFromLocalStorage(): Pensum.Pensum | null {\r\n  const pensumData = localStorage.getItem(PENSUM_STORAGE_KEY);\r\n\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  const pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n  const loadedPensum = validatePensum(pensum, pensum.institution);\r\n  return loadedPensum;\r\n}\r\n\r\n\r\nexport function createPayload(pensum: ActivePensum.Payload['pensum']): ActivePensum.Payload {\r\n  return {\r\n    pensum, \r\n    matData: processPensumMats(pensum),\r\n    error: null,\r\n    loading: false,\r\n  }\r\n}\r\n\r\nexport function activePensumReducer(\r\n  state: ActivePensum.Payload,\r\n  action: ActivePensum.Action): ActivePensum.Payload {\r\n  switch (action.type) {\r\n    case 'clear':\r\n      // savePensumToLocalStorage(null); // Dont clear save!\r\n      return createPayload(null);\r\n\r\n    case 'set':\r\n      savePensumToLocalStorage(action.payload);\r\n      return createPayload(action.payload);\r\n\r\n    case 'load/fromSave':\r\n      var pensum = loadPensumFromLocalStorage();\r\n      return createPayload(pensum);\r\n\r\n    // Case for 'load' is handled on the Provider, since its async!\r\n\r\n    case 'error':\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'loading':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n\r\n    default:\r\n      console.error('Unknown action \"' + action.type + '\".');\r\n      return state;\r\n  }\r\n}","import { fetchPensumFromCode, PensumFetchError } from \"functions/pensum-fetch\";\r\nimport React, { createContext, memo, useCallback, useEffect, useReducer } from \"react\";\r\nimport { activePensumReducer, createPayload } from \"./reducer\";\r\n\r\n\r\ntype ActivePensumContextProps = {\r\n  state: ActivePensum.Payload,\r\n  dispatch: (action: ActivePensum.Action) => any,\r\n  load: (university: string, code: string) => any,\r\n}\r\n\r\nconst defaultContext: ActivePensumContextProps = {\r\n  state: createPayload(null),\r\n  dispatch: () => {},\r\n  load: () => {},\r\n}\r\n\r\n\r\n/** Context for the current loaded pensum. */\r\nconst ActivePensumContext = createContext(defaultContext);\r\n\r\ntype Props = { children: any};\r\n\r\n// this double naming thing is so the React chrome extension gets the name correctly.\r\nexport const ActivePensumProvider = memo(function ActivePensumProvider({ children }: Props) { \r\n  const [state, dispatch] = useReducer(activePensumReducer, defaultContext.state);\r\n\r\n  // onMount: load saved pensum\r\n  useEffect(() => {\r\n    dispatch({type: 'load/fromSave'});\r\n  }, []);\r\n\r\n  // Custom fn to load a pensum\r\n  const load = useCallback(async (university: string, code: string) => {\r\n    dispatch({ type: 'loading', payload: true });\r\n\r\n    try {\r\n      const pensum = await fetchPensumFromCode(university, code);\r\n      dispatch({ type: 'set', payload: pensum });\r\n    }\r\n    catch (error) {\r\n      let m: any;\r\n\r\n      if (error instanceof SyntaxError)\r\n        m = `JSON could not be parsed for ${university}/${code}.`;\r\n      else if (error instanceof PensumFetchError)\r\n        m = error.message;\r\n      else\r\n        m = error;\r\n\r\n      dispatch({ type: 'error' as 'error', payload: m });\r\n    }\r\n  }, []);\r\n  \r\n  return <ActivePensumContext.Provider value={{ state, dispatch, load }}>\r\n    {children}\r\n  </ActivePensumContext.Provider>\r\n})\r\n\r\n\r\nexport default ActivePensumContext;","import UniversityContext from \"contexts/university-data\";\r\nimport React, { memo, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport Select from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport selectTheme, { optionStyle } from \"lib/DarkMode/select-theme\";\r\nimport { sortByProp } from \"lib/sort-utils\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\nimport { usePreviousValue } from \"beautiful-react-hooks\";\r\n\r\n// type SelectProps = React.ComponentProps<typeof Select>['onChange'];\r\ntype SelectProps = { label: string, value: string } | null;\r\n\r\n/** Creates a formatted label, for use with this component's <Select> labels. */\r\nfunction createLabelString(code: string, name: string) {\r\n  return `[${code}] ${name}`;\r\n}\r\n\r\n\r\n/** Simple form that manages University and Career selection \r\n * (Populates the university/career list from the server.). */\r\nfunction PensumSelector() {\r\n  // Quite awful, just read this context from right to left.\r\n  const { state: {\r\n      pensum:   activePensum,\r\n      error:    error_pensum,\r\n      loading:  loading_pensum,\r\n    },\r\n    load: loadPensum,\r\n  } = useContext(ActivePensumContext);\r\n\r\n  const {\r\n    state:  universityData,\r\n    select: selectUniversity,\r\n  } = useContext(UniversityContext);\r\n\r\n  const {\r\n    universities,\r\n    selected: selected_uni,\r\n    loading:  loading_uni,\r\n    error:    error_uni,\r\n  } = universityData;\r\n\r\n  const [pensumOnInput, setPensumOnInput] = useState(null as SelectProps);\r\n  const previousPensum = usePreviousValue(activePensum);\r\n\r\n\r\n  // ***************************************************************************\r\n  // Carrera select form <options>\r\n  // Maps careers from {code, name} to {value, label}\r\n  // ***************************************************************************\r\n  const careerSelectOptions = useMemo(() => {\r\n    const pensumList = selected_uni?.careers;\r\n    if (!pensumList) return [];\r\n\r\n    const o = pensumList.sort(sortByProp(\"code\"));\r\n\r\n    return o.map(x => ({ value: x.code, label: createLabelString(x.code, x.name) }));\r\n  }, [selected_uni]);\r\n\r\n  \r\n  // ***************************************************************************\r\n  // On pensum change\r\n  //  If the pensum changed, do:\r\n  //  1. Auto select university from the active pensum.\r\n  //  2. Update the selected career <select> value.\r\n  // ***************************************************************************\r\n  useEffect(() => {\r\n    // If pensums are the same, nothing to change!\r\n    if (activePensum === previousPensum) return;\r\n    // If no pensum is selected, there's nothing to \"select\"!\r\n    if (!activePensum) return;\r\n    \r\n    // Select university\r\n    selectUniversity(activePensum.institution);\r\n\r\n    // Try to find existing label\r\n    const careerOption = careerSelectOptions.find(x => x.value === activePensum.code)\r\n      || {\r\n      value: activePensum.code,\r\n      label: createLabelString(activePensum.code, activePensum.career),\r\n    };\r\n    setPensumOnInput(careerOption);\r\n\r\n  }, [activePensum, previousPensum, careerSelectOptions, selectUniversity]);\r\n\r\n\r\n  // ***************************************************************************\r\n  // University select\r\n  // ***************************************************************************\r\n  const universitySelectOptions = useMemo(() => universities.map(\r\n    x => ({ value: x.code, label: createLabelString(x.shortName, x.longName) })),\r\n    [universities]);\r\n\r\n  const selectedUniversity = useMemo(() => (universitySelectOptions.find(\r\n    x => x.value === selected_uni?.code) || null),\r\n    [universitySelectOptions, selected_uni]);\r\n\r\n  // On user change university selection\r\n  const handleUniversityChange = useCallback((newValue: SelectProps) => {\r\n    selectUniversity(newValue?.value || null);\r\n  }, [selectUniversity]);\r\n\r\n\r\n  // ***************************************************************************\r\n  // On submit\r\n  // ***************************************************************************\r\n  const handleSubmit = useCallback((evt?: any) => {\r\n    if (evt) evt.preventDefault();\r\n    const uni = selected_uni?.code || '';\r\n    const code = pensumOnInput?.value || '';\r\n    loadPensum(uni, code);\r\n  }, [loadPensum, selected_uni, pensumOnInput]);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <SelectUni\r\n            value={selectedUniversity}\r\n            options={universitySelectOptions}\r\n            isLoading={loading_uni}\r\n            onChange={handleUniversityChange} />\r\n\r\n          <SelectCareer\r\n            value={pensumOnInput}\r\n            options={careerSelectOptions}\r\n            isLoading={loading_uni}\r\n            onChange={setPensumOnInput}/>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={!pensumOnInput}\r\n            className=\"w-100\">\r\n            {(!loading_pensum) ?\r\n              'Cargar' :\r\n              <Spinner animation=\"border\" size=\"sm\"><span className=\"visually-hidden\">Cargando...</span></Spinner>}\r\n          </Button>\r\n\r\n          {error_uni && <p style={{ color: 'red' }}>{'Error @ uni: ' + String(error_uni)}</p>}\r\n          {error_pensum && <p style={{ color: 'red' }}>{'Error @ pensum: ' + String(error_pensum)}</p>}\r\n        </Form>\r\n        </Container>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n// ***************************************************************************\r\n// University select\r\n// ***************************************************************************\r\ntype CustomSelectProps = {\r\n  value: SelectProps,\r\n  options: SelectProps[],\r\n  isLoading: boolean,\r\n  onChange: Function,\r\n}\r\n\r\nconst SelectUni = memo(\r\n  function SelectUni({ value, options, isLoading, onChange }: CustomSelectProps) {\r\n    return (<>\r\n      <label className=\"form-label mb-0 small\">Universidad</label>\r\n      <Select\r\n        // defaultValue={universitySelectOptions[0]}\r\n        value={value}\r\n        options={options}\r\n        isSearchable={true}\r\n        isLoading={isLoading}\r\n        onChange={onChange as any} // as any to be able to use selectStyles without TS panicking.\r\n        name=\"university\"\r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n\r\n        placeholder=\"Seleccione una universidad...\"\r\n        styles={optionStyle} />\r\n    </>\r\n    )\r\n  }\r\n);\r\n\r\n\r\n// ***************************************************************************\r\n// Career select\r\n// ***************************************************************************\r\nconst SelectCareer = memo(\r\n  function SelectCareer({ value, options, isLoading, onChange }: CustomSelectProps) {\r\n    return (<>\r\n      <label className=\"form-label mb-0 small\">Carrera</label>\r\n      <CreatableSelect\r\n        isClearable\r\n        value={value}\r\n        options={options}\r\n        isLoading={isLoading}\r\n        loadingMessage={() => <span>Cargando carreras...</span>}\r\n        onChange={onChange as any} // as any to be able to use selectStyles\r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n\r\n        placeholder=\"Seleccione o escriba una carrera o su codigo...\"\r\n        styles={optionStyle} />\r\n    </>\r\n    )\r\n  }\r\n);\r\n\r\n\r\n\r\nexport default PensumSelector;","export const matSelectionModeTypes: MatSelection.TrackerModeTypes = [\r\n  'passed',\r\n  'course',\r\n];\r\n\r\n/** Creates a default MatSelection object, with all predefined values. */\r\nconst createDefaultSelection = (): MatSelection.Payload => ({\r\n  mode: 'passed',\r\n  tracker: {\r\n    course: new Set(),\r\n    passed: new Set(),\r\n  },\r\n  currentName: null,\r\n  storage: {},\r\n  filter: new Set(),\r\n});\r\n\r\nexport default createDefaultSelection;","import { objectMap } from \"lib/sort-utils\";\r\nimport createDefaultState, { matSelectionModeTypes } from \"./default\";\r\n\r\nconst TRACKER_STORAGE_KEY = process.env.REACT_APP_PENSUM_STORAGE_TRACKER_KEY || 'pensumTracker';\r\n\r\n// TODO: IMPLEMENT TRACKER INTO THE PENSUM TABLE >:V\r\n// IMPORTANT: Friendly remined that any method that modifies the state must call saveToStorage.\r\nexport function matSelectionReducer(\r\n  state: MatSelection.Payload,\r\n  action: MatSelection.Action): MatSelection.Payload {\r\n\r\n  const cloneTracker = (tracker?: MatSelection.Tracker): MatSelection.Tracker => {\r\n    if (!tracker) tracker = state.tracker;\r\n\r\n    const o: any = {};\r\n    for (const [key, set] of Object.entries(tracker)) {\r\n      o[key] = new Set(set);\r\n    }\r\n    return o;\r\n  }\r\n\r\n  const { mode } = state;\r\n\r\n  switch (action.type) {\r\n\r\n    case 'selectMode': {\r\n      const newMode = action.payload || 'passed';\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        mode: newMode,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n    case 'select': {\r\n      const mat = action.payload;\r\n      const tracker = cloneTracker();\r\n\r\n      if (tracker[mode].has(mat)) {\r\n        tracker[mode].delete(mat);\r\n      } else { // Add to this tracker, and remove from the rest\r\n        tracker[mode].add(mat);\r\n        for (const [key, set] of Object.entries(tracker)) {\r\n          if (key !== mode) set.delete(mat);\r\n        }\r\n      }\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        tracker\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n    case 'selectPeriod': {\r\n      const period = action.payload;\r\n      const tracker = cloneTracker();\r\n\r\n      const matCount = period.length;\r\n      if (matCount === 0) return state;\r\n      \r\n      \r\n      // Check each tracker.\r\n      const sortedTracker = objectMap(tracker, x => [] as string[]);\r\n      const untracked = [] as string[];\r\n\r\n      for (const code of period) {\r\n        let isTracked = false;\r\n\r\n        for (const [key, set] of Object.entries(tracker)) {\r\n          if (set.has(code)) {\r\n            (sortedTracker as any)[key].push(code);\r\n            isTracked = true;\r\n          }\r\n        }\r\n\r\n        if (!isTracked) {\r\n          untracked.push(code);\r\n        }\r\n      }\r\n\r\n\r\n      \r\n      /**\r\n       * Cases:\r\n       * - All on main: remove all;\r\n       * - All unselected: just add all\r\n       * - Some holes: set holes only.\r\n       * - All on both (none unselected): finish adding all (same as prev.)\r\n       */\r\n      const allOnMain = sortedTracker[mode].length === matCount;\r\n      const allUnselected = untracked.length === matCount;\r\n      const noneUnselected = untracked.length === 0;\r\n      const someUnselected = !allUnselected && !noneUnselected;\r\n\r\n      // Case 1: All on main -> remove all\r\n      if (allOnMain) {\r\n        period.forEach(code => tracker[mode].delete(code));\r\n      } \r\n      // Case 3: Add only the unselected. Leave the rest intact.\r\n      else if (someUnselected) {\r\n        untracked.forEach(code => tracker[mode].add(code));\r\n      }\r\n      // Case 2 & 4: Add to this set, don't remove from the other.\r\n      else {\r\n        for (const code of period) {\r\n          for (const [key, set] of Object.entries(tracker)) {\r\n            if (key === mode) set.add(code);\r\n            else set.delete(code);\r\n          }\r\n        }\r\n      }\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        tracker\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n    \r\n\r\n\r\n    // TRACKER ID STUFF\r\n    /** Sets/renames the name of the current trackers. */\r\n    case 'setTrackerID': {\r\n      let newName: string | null;\r\n\r\n      // Simple check if string is valid.\r\n      // If not valid (or empty), just set to null.\r\n      // This is so the user can remove the tracker by just clearing an input form.\r\n      if (typeof action.payload !== 'string') newName = null;      \r\n      else {\r\n        const t = action.payload.trim();\r\n        newName = (t === '') ? null : t;\r\n      }\r\n\r\n      // Check if the newName is a prototype property\r\n      // This is to avoid setting the tracker to something like 'toString'.\r\n      if (typeof newName === 'string'\r\n        && state.storage[newName] // Check if this value exists\r\n        && !state.storage.hasOwnProperty(newName) // Check if this value is from the prototype\r\n      ) {\r\n        throw RangeError(`Given name ${newName} is a prototype property!`);\r\n      }\r\n\r\n      // If there was a previous name, remove it so this action is equivalent to \"renaming\".\r\n      const storage = { ...state.storage };\r\n      if (state.currentName)\r\n        delete storage[state.currentName];\r\n\r\n      // saveToStorage will automatically copy the current tracker to the new tracker name.\r\n      return matSelectionReducer({\r\n        ...state,\r\n        currentName: newName,\r\n        storage,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n    case 'copyTrackerID': {\r\n      const {'old': oldName, 'new': newName} = action.payload;\r\n\r\n      if (oldName === newName) return state;\r\n      \r\n      const storage = { ...state.storage };\r\n      const oldTracker = storage[oldName];\r\n\r\n      // Nothing to copy!\r\n      if (!oldTracker) return state;\r\n      storage[newName] = cloneTracker(oldTracker);\r\n\r\n      // Replace currentName if needed\r\n      // IMPORTANT: Remove this thing if you don't want auto-switching to the new tracker on copy.\r\n      let currentName = state.currentName; \r\n      if (currentName === oldName)\r\n        currentName = newName;\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        storage,\r\n        currentName,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n    case 'deleteTrackerID': {\r\n      const name = action.payload;\r\n\r\n      if (!name || !state.storage[name]) return state;\r\n\r\n      // Do the deletion\r\n      const storage = { ...state.storage };\r\n      delete storage[name];\r\n      \r\n      // Replace currentName if needed\r\n      let currentName = state.currentName;\r\n      if (currentName === name)\r\n        currentName = null;\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        storage,\r\n        currentName,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n    // Filter options\r\n    case 'toggleFilter': {\r\n      const filter = new Set(state.filter);\r\n      const x = action.payload;\r\n      \r\n      if (filter.has(x)) filter.delete(x);\r\n      else (filter.add(x));\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        filter,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n\r\n    // TRACKER SAVE ACTIONS\r\n    case 'saveToStorage': {\r\n      if (state.currentName) {\r\n        state.storage[state.currentName] = state.tracker;\r\n      }\r\n      saveTrackerToLocalStorage(state);\r\n      return state;\r\n    }\r\n\r\n    case 'loadFromStorage': {\r\n      const data = loadTrackerFromLocalStorage();\r\n      if (!data) return state;\r\n      return data;\r\n    }\r\n\r\n    default:\r\n      console.error('Unknown action \"' + (action as any)?.type + '\".');\r\n      return state;\r\n  }\r\n}\r\n\r\n/** Default tracker */\r\n\r\n\r\n\r\n/** Set of utils to convert the tracker's sets into arrays. \r\n * Used to save the sets to the localStorage. */\r\nconst JSONSetUtils = {\r\n  replacer: function Set_toJSON(key: string, value: any) {\r\n    if (typeof value === 'object' && value instanceof Set) {\r\n      return [...value];\r\n    }\r\n    return value;\r\n  },\r\n\r\n  reviver: function Set_fromJSON(key: string, value: any) {\r\n    if (typeof value === 'object' && Array.isArray(value)) {\r\n      return new Set(value);\r\n    }\r\n    return value\r\n  }\r\n}\r\n\r\nfunction saveTrackerToLocalStorage(trackerState: MatSelection.Payload) {\r\n  const json = JSON.stringify(trackerState, JSONSetUtils.replacer);\r\n  localStorage.setItem(TRACKER_STORAGE_KEY, json);\r\n}\r\n\r\nfunction loadTrackerFromLocalStorage(): MatSelection.Payload | null {\r\n  const str = localStorage.getItem(TRACKER_STORAGE_KEY);\r\n  if (!str) return null;\r\n\r\n  const data: MatSelection.Payload = JSON.parse(str, JSONSetUtils.reviver);\r\n\r\n  // Simple check for minimun structure\r\n  if (!( // Negate to make it a type guard\r\n    data \r\n    && data.tracker \r\n    && typeof data.tracker.passed  === 'object' \r\n    && data.tracker.passed instanceof Set\r\n    && data.storage\r\n    )) {\r\n    return null;\r\n  }\r\n\r\n  // Return verified result\r\n  return createPayloadWithDefaults(data);\r\n}\r\n\r\n/** Validates the payload from the given, All props are verifier to be valid. */\r\nfunction createPayloadWithDefaults(data: any): MatSelection.Payload {\r\n  // Correct minimal structure\r\n  /* 1. tracker */\r\n  /* 2. mode. */\r\n  /* 3. tracker name on storage. */\r\n  /* 4. storage for all the saved trackers. */\r\n  /* 5. filter. */\r\n\r\n  const base = createDefaultState();\r\n\r\n  const tracker = {\r\n    ...base.tracker,\r\n    ...data.tracker,\r\n  };\r\n\r\n  const mode = \r\n    (data.mode in matSelectionModeTypes) ? data.mode : base.mode;\r\n\r\n  const currentName =\r\n    (typeof data.currentName === 'string') ? data.currentName : null;\r\n\r\n  let storage: MatSelection.Payload['storage'] = base.storage;\r\n  if (typeof data.storage === 'object') {\r\n    storage = Object.fromEntries(Object.entries(data.storage)\r\n      .filter(([key, val]) =>\r\n        typeof key === 'string' // Key is a string\r\n\r\n        // If the key is from the prototype (eg. 'toString', don't include it.)\r\n        && storage[key]\r\n        && !storage.hasOwnProperty(key)\r\n\r\n        // Verify value is a Set of strings\r\n        && val instanceof Set\r\n        && [...val].every(code => typeof code === 'string')\r\n      ) as Array<[string, MatSelection.Tracker]>\r\n    )\r\n  }\r\n\r\n  const filter: MatSelection.Payload['filter'] = \r\n    (data.filter instanceof Set) ? data.filter : base.filter;\r\n\r\n  return {\r\n    tracker,\r\n    mode,\r\n    currentName,\r\n    storage,\r\n    filter,\r\n  };\r\n}","import { createContext, memo, useReducer, useEffect } from \"react\";\r\nimport { matSelectionReducer } from \"./reducer\";\r\nimport createDefaultState from \"./default\";\r\n\r\ntype MatSelectionContextProps = {\r\n  state: MatSelection.Payload,\r\n  dispatch: (action: MatSelection.Action) => any,\r\n}\r\n\r\nconst defaultContext: MatSelectionContextProps = ({\r\n  state: createDefaultState(),\r\n  dispatch: () => {},\r\n});\r\n\r\n/** Collection of helper functions to use for mat selection. */\r\nexport const matSelectHelpers = {\r\n  /** \r\n   * Get the current tracker of a mat.\r\n   * @example\r\n   * getTracker(tracker, 'MAT101'); // returns 'passed'\r\n   * getTracker(tracker, 'MAT102'); // returns 'course'\r\n   * getTracker(tracker, 'MAT103'); // returns null\r\n  */\r\n  getTracker(tracker: MatSelection.Payload['tracker'], code: string) {\r\n    for (const [key, set] of Object.entries(tracker)) {\r\n      if (set.has(code)) return key as MatSelection.TrackerMode;\r\n    }\r\n    return null;\r\n  },\r\n  /** \r\n   * Gets the common tracker for all the given mats. If all the mats don't share a tracker, return null.\r\n  */\r\n  getCommonTracker(tracker: MatSelection.Payload['tracker'], periodStr: string[]) {\r\n    for (const [key, set] of Object.entries(tracker)) {\r\n      if (periodStr.every(code => set.has(code)))\r\n        return key as MatSelection.TrackerMode;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport const MatSelectionDispatchContext = createContext(defaultContext.dispatch);\r\nexport const MatSelectionModeContext = createContext(defaultContext.state.mode);\r\nexport const MatSelectionTrackerContext = createContext(defaultContext.state.tracker);\r\nexport const MatSelectionTrackerNameContext = createContext(defaultContext.state.currentName);\r\nexport const MatSelectionTrackerStorageContext = createContext(defaultContext.state.storage);\r\nexport const MatSelectionFilterContext = createContext(defaultContext.state.filter);\r\n\r\ntype Props = { children: any };\r\n\r\nexport const MatSelectionProvider = memo(function MatSelectionProvider({ children }: Props) {\r\n  const [state, dispatch] = useReducer(matSelectionReducer, defaultContext.state);\r\n\r\n  useEffect(() => {\r\n    // Load data from cookies\r\n    dispatch({ type: 'loadFromStorage' });\r\n\r\n    (window as any)['x'] = dispatch;\r\n  }, []);\r\n\r\n  return <MatSelectionDispatchContext.Provider value={dispatch}>\r\n    <MatSelectionModeContext.Provider value={state.mode}>\r\n      <MatSelectionTrackerContext.Provider value={state.tracker}>\r\n        <MatSelectionTrackerNameContext.Provider value={state.currentName}>\r\n          <MatSelectionTrackerStorageContext.Provider value={state.storage}>\r\n            <MatSelectionFilterContext.Provider value={state.filter}>\r\n              {children}\r\n            </MatSelectionFilterContext.Provider>\r\n          </MatSelectionTrackerStorageContext.Provider>\r\n        </MatSelectionTrackerNameContext.Provider>\r\n      </MatSelectionTrackerContext.Provider>\r\n    </MatSelectionModeContext.Provider>\r\n  </MatSelectionDispatchContext.Provider>\r\n})","import ActivePensumContext from 'contexts/active-pensum';\r\nimport { matSelectHelpers, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\nimport { classnames } from 'lib/format-utils';\r\nimport { useContext } from 'react';\r\nimport './mat-code-colors.scss';\r\nimport './mat-code.scss';\r\n\r\n\r\ntype Props = React.ComponentPropsWithRef<'span'> & {\r\n  data: Pensum.Requirement,\r\n  type?: 'prereq' | 'coreq',\r\n  children?: React.ReactNode,\r\n};\r\n\r\n/** Single matcode. */\r\nfunction MatCode({ data, type = \"prereq\", children, ...rest }: Props) {\r\n  const { state: { matData } } = useContext(ActivePensumContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  let className: any[] = ['mat-code', type];\r\n\r\n  let content;\r\n  if (typeof data === 'string') {\r\n    content = children || data;\r\n    className.push('code', 'click-target');\r\n\r\n    if (matData.looseUnhandled.has(data)) \r\n      className.push('missing');\r\n\r\n    className.push(matSelectHelpers.getTracker(tracker, data) || 'default');\r\n\r\n  } else {\r\n    content = children || data.text;\r\n    className.push('req-text');\r\n  }\r\n\r\n  return (<span className={classnames(className)} {...rest}>{content}</span>)\r\n}\r\n\r\n/** Same as mat code, but formatted as `[CODE] Name` */\r\nexport function LongMatCode({ data, type = \"prereq\", children, ...rest }: Props) {\r\n  const { state: { matData } } = useContext(ActivePensumContext);\r\n\r\n  // Override\r\n  if (children) return <MatCode data={data} type={type} {...rest}>{children}</MatCode>\r\n\r\n  let name;\r\n  if (typeof data === 'string') {\r\n    name = matData.codeMap.get(data)?.name;\r\n  }\r\n\r\n  if (name) {\r\n    return <MatCode data={data} type={type} {...rest}>\r\n      {`[${data}] ${name}`}\r\n    </MatCode>\r\n  } else {\r\n    return <MatCode data={data} type={type} {...rest}/>\r\n  }\r\n}\r\n\r\nexport default MatCode;","/**\r\n * This context is used to store the react nodes of each pensum row.\r\n * Used to scroll a specific mat into view.\r\n * \r\n * This thing probably is a memory leaks when there's a lot of pensum changes, \r\n * since new mats will be added while keeping the old mats empty refs.\r\n */\r\n\r\nimport React, { createContext, memo, MutableRefObject, useCallback, useRef } from \"react\"\r\n\r\ntype mapArg = React.RefObject<HTMLElement>;\r\n\r\ntype PensumRowNodesContextProps = {\r\n  /** Map that contains pensum row references.  */\r\n  map: MutableRefObject<Map<string, mapArg>>,\r\n  /** Scrolls to the pensum row of the given mat code. */\r\n  scrollToRow: (code: string) => void,\r\n  /** Updates the row reference on map. */\r\n  updateNode: (code: string, node: mapArg) => void,\r\n}\r\n\r\nconst defaultContext: PensumRowNodesContextProps = {\r\n  map: { current: new Map() },\r\n  scrollToRow: () => {},\r\n  updateNode: () => {},\r\n}\r\n\r\nconst PensumRowNodesContext = createContext(defaultContext);\r\n\r\ntype Props = { children: any };\r\n\r\nexport const PensumRowNodesProvider = memo(function PensumRowNodesProvider({children}: Props) {\r\n  const map = useRef(new Map());\r\n\r\n  const updateNode: PensumRowNodesContextProps['updateNode'] = useCallback((code, node) => {\r\n    map.current.set(code, node);\r\n    console.log(`Updated ${code}:`, !!node?.current)\r\n  }, []);\r\n\r\n  const scrollToRow: PensumRowNodesContextProps['scrollToRow'] = useCallback((code) => {\r\n    setTimeout(() => {\r\n      // Without this timeout, scrollIntoView won't work on navigation URL changes.\r\n      let n = map.current.get(code);\r\n      if (n) {\r\n        n.current?.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        n.current?.classList.remove('highlight-row');\r\n        n.current?.classList.add('highlight-row');\r\n        setTimeout(() => n?.current?.classList.remove('highlight-row'), 3e3);\r\n      }\r\n    }, 0);\r\n  }, []);\r\n\r\n  return <PensumRowNodesContext.Provider value={{map, scrollToRow, updateNode}}>\r\n    {children}\r\n  </PensumRowNodesContext.Provider>\r\n});\r\n\r\nexport default PensumRowNodesContext;","import { useCallback, useContext, useEffect, useRef } from \"react\";\r\nimport { matSelectHelpers, MatSelectionDispatchContext, MatSelectionModeContext, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\nimport { classnames } from 'lib/format-utils';\r\n\r\nimport MatCode from '../Mat/MatCode';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from \"react-router-dom\";\r\nimport PensumRowNodesContext from \"contexts/pensum-row-nodes\";\r\n\r\ntype MatRowProps = {\r\n  mat: Pensum.Mat,\r\n  idx: number\r\n};\r\n\r\nconst trackerCheckmarks = new Map([\r\n  ['passed', '✅'],\r\n  ['course', '🔳'],\r\n  [null, '⬜'],\r\n]);\r\n\r\n/** Displays a single Mat as from the pensum a table row. */\r\nfunction MatRow({ mat, idx }: MatRowProps) {\r\n  const rowRef = useRef<HTMLDivElement>(null);\r\n  const clickableRef = useRef<HTMLDivElement>(null);\r\n\r\n  const { updateNode } = useContext(PensumRowNodesContext);\r\n\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  const trackerMode = useContext(MatSelectionModeContext);\r\n\r\n  const currentTracker = matSelectHelpers.getTracker(tracker, mat.code);\r\n  \r\n  // Classes. Any falsy values will be discarded\r\n  const cl = [\r\n    \"row-mat\",\r\n    (idx & 1) && 'even',  // Mark the mat as even, if the index is odd????? lol.\r\n    currentTracker,       // Color according to the tracker.\r\n\r\n    // On hover, will clicking this set the tracker or not?\r\n    'mat-hover-' + (currentTracker === trackerMode ? 'default' : trackerMode),\r\n  ];\r\n\r\n  const reqs = [\r\n    ...mat.prereq.map((x, i) => <MatCode key={i       } data={x} type='prereq'/>),\r\n    ...mat.coreq.map( (x, i) => <MatCode key={i + 1000} data={x} type='coreq' />),\r\n  ] as JSX.Element[];\r\n\r\n  // On hover INSIDE THE MAT CHECKBOX, change the background of the ENTIRE ROW.\r\n  useEffect(() => {\r\n    const cbMouseEnter = () => {\r\n      rowRef.current?.classList.add('track-hover');\r\n    }\r\n    const cbMouseLeave = () => {\r\n      rowRef.current?.classList.remove('track-hover');\r\n    }\r\n\r\n    const clickable = clickableRef.current;\r\n\r\n    if (!clickable) return;\r\n\r\n    clickable.addEventListener('mouseenter', cbMouseEnter);\r\n    clickable.addEventListener('mouseleave', cbMouseLeave);\r\n    return () => {\r\n      clickable.removeEventListener('mouseenter', cbMouseEnter);\r\n      clickable.removeEventListener('mouseleave', cbMouseLeave);\r\n    }\r\n  }, [rowRef, clickableRef]);\r\n\r\n  useEffect(() => {\r\n    updateNode(mat.code, rowRef);\r\n    return () => updateNode(mat.code, rowRef);\r\n  }, [mat.code, updateNode, rowRef]);\r\n\r\n  const onClick = useCallback((evt: any) => {\r\n    dispatch({ type: 'select', payload: mat.code });\r\n  }, [mat.code, dispatch])\r\n\r\n  return <Row\r\n    ref={rowRef}\r\n    className={classnames(cl)}\r\n    data-mat={mat.code}>\r\n    <Col ref={clickableRef} onClick={onClick} className=\"row-check click-target\">\r\n      {trackerCheckmarks.get(currentTracker) || '⬜x'}\r\n    </Col>\r\n    <Col className=\"row-code code\"><Link to={`/mat/${mat.code}`}>{mat.code}</Link></Col>\r\n    <Col>\r\n      <Row className=\"h-100 align-items-center\">\r\n        <Col className=\"row-name\">{mat.name}</Col>\r\n        <Col className=\"row-cr\">{mat.cr}</Col>\r\n        <Col className=\"row-req\">{reqs}</Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\nexport default MatRow;","import { useCallback, useContext } from \"react\";\r\nimport { matSelectHelpers, MatSelectionDispatchContext, MatSelectionFilterContext, MatSelectionModeContext, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\nimport { classnames } from 'lib/format-utils';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport MatRow from \"./MatRow\";\r\n\r\ntype PeriodProps = {\r\n  period: Pensum.Mat[],\r\n  periodNum: number,\r\n  cumlen: number\r\n};\r\n\r\n/** Displays a single period from the pensum as table rows. */\r\nexport const Period = ({ period, periodNum, cumlen = 0 }: PeriodProps) => {\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n  const trackerMode = useContext(MatSelectionModeContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  const filter = useContext(MatSelectionFilterContext);\r\n\r\n  const isAllMatsOnSameTracker = period.every(mat => tracker[trackerMode]?.has(mat.code));\r\n  const commonTracker = matSelectHelpers.getCommonTracker(tracker, period.map(mat => mat.code));\r\n\r\n  // css classes\r\n  const cl = [\r\n    'row-period-num', \r\n    'click-target',\r\n\r\n    // Hover color according to tracker mode.\r\n    'table-hover-' + ((isAllMatsOnSameTracker) ? 'default' : trackerMode),\r\n\r\n    // Common tracker sets period color only if all mats have a tracker in common.\r\n    commonTracker,\r\n  ];\r\n\r\n\r\n  const filteredPeriod = period.filter(mat => {\r\n    const tr = matSelectHelpers.getTracker(tracker, mat.code);\r\n    return !filter.has(tr);\r\n  });\r\n\r\n\r\n  const onClick = useCallback((evt: any) => {\r\n    dispatch({ type: 'selectPeriod', payload: filteredPeriod.map(x => x.code) });\r\n  }, [filteredPeriod, dispatch]);\r\n\r\n  if (filteredPeriod.length === 0) return null;\r\n\r\n  const matrows = filteredPeriod.map((mat, i) =>\r\n    <MatRow\r\n      key={mat.code}\r\n      mat={mat}\r\n      idx={i + cumlen} />\r\n  )\r\n\r\n  return <Row className=\"row-period\">\r\n    <Col\r\n      className={classnames(cl)}\r\n      onClick={onClick}\r\n      data-value={periodNum}>\r\n      {periodNum}\r\n    </Col>\r\n    <Col className=\"row-mat-group\">\r\n      {matrows}\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\nexport default Period;","import './table.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { memo } from 'react';\r\nimport { toTitleCase } from 'lib/format-utils';\r\nimport Period from './Period';\r\n\r\n/** Headers for the pensum table. */\r\nexport const TableHead = memo((props: { periodNumStr?: string | null }) => {\r\n  // Memo makes this thing pure, and never update >:D (if props don't change).\r\n  \r\n  const processedPeriod = props.periodNumStr || '';\r\n  \r\n  return <Row className=\"pensum-header row-period\">\r\n    <Col className=\"row-period-num\">{processedPeriod}</Col>\r\n    <Col className=\"row-mat-group\">\r\n      <Row className=\"row-mat\">\r\n        <Col className=\"row-check\"></Col>\r\n        <Col className=\"row-code\">Código</Col>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"row-name\">Asignatura</Col>\r\n            <Col className=\"row-cr\">Cr.</Col>\r\n            <Col className=\"row-prereq\">Requisitos</Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n})\r\n\r\n\r\ntype PensumTableProps = {\r\n  periods: Pensum.Pensum['periods'],\r\n  periodIndexStart?: number,\r\n  periodType?: Pensum.Pensum['periodType'] | null\r\n}\r\n\r\nconst defaultPeriodType = {\r\n  name: 'Periodo',\r\n  acronym: 'Per',\r\n  two: 'Pr'\r\n};\r\n\r\n/** Displays a pensum. */\r\nfunction PensumTable({ periods, periodIndexStart = 1, periodType = defaultPeriodType }: PensumTableProps) {\r\n  \r\n  // https://stackoverflow.com/a/55261098\r\n  // CumLen is passed down to calculate if a row is even or odd.\r\n  const cumulativeSum = (sum: number) => (value: number) => sum += value;\r\n  const cumlen = periods.map(x => x.length).map(cumulativeSum(0))\r\n\r\n  const periodElems = periods.map((period, key) =>\r\n    <Period\r\n      key={key}\r\n      period={period}\r\n      periodNum={key + periodIndexStart}\r\n      cumlen={cumlen[key - 1]} />\r\n  );\r\n  \r\n  return <Container className=\"pensum-table\">\r\n    <TableHead periodNumStr={periodType?.two} />\r\n    <div \r\n    className=\"pensum-table-body\"\r\n    data-empty-text=\"No hay materias que cumplan con el filtro actual.\">\r\n      {periodElems}\r\n    </div>\r\n  </Container>\r\n}\r\n\r\nexport default PensumTable;","import PensumTable from \"./Table\";\r\n\r\nexport default PensumTable;","import Card from 'react-bootstrap/Card';\r\nimport PensumTable from \"./Table\";\r\n\r\ntype Props = {\r\n  pensum: Pensum.Pensum\r\n}\r\n\r\nfunction PensumDisplay({ pensum }: Props) {\r\n  const { career, periods, loose, periodType } = pensum;\r\n\r\n  return <>\r\n    <Card>\r\n      <Card.Body className=\"pensum-table-container\">\r\n        <Card.Title>{career}</Card.Title>\r\n        <PensumTable periods={periods} periodType={periodType} />\r\n      </Card.Body>\r\n    </Card>\r\n\r\n    {loose && (loose.length > 0) &&\r\n      <Card>\r\n        <Card.Body className=\"pensum-table-container\">\r\n          <Card.Title>Demás materias</Card.Title>\r\n          <PensumTable periods={[loose]} periodType={null} periodIndexStart={0} />\r\n        </Card.Body>\r\n      </Card>\r\n    }\r\n\r\n  </>\r\n}\r\n\r\nexport default PensumDisplay;","import Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { MatSelectionDispatchContext, MatSelectionModeContext } from \"contexts/mat-selection\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport { classnames } from \"lib/format-utils\";\r\nimport \"./filter.scss\";\r\n\r\ntype Props = {\r\n  entries: [MatSelection.TrackerMode, string][]\r\n}\r\n\r\nfunction FilterModeSelector({ entries }: Props) {\r\n  const mode = useContext(MatSelectionModeContext);\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n\r\n  const Btns = useCallback(() => {\r\n    const elems = [];\r\n\r\n    for (const [key, val] of entries) {\r\n      elems.push(<Button\r\n        key={key}\r\n        className={classnames([\r\n          key,\r\n          (mode === key) ? 'active' : 'not-active',\r\n        ])}\r\n        onClick={() => dispatch({ type: 'selectMode', payload: key as any })}>\r\n        {val}\r\n      </Button>)\r\n    }\r\n\r\n    return <>{elems}</>;\r\n  }, [entries, mode, dispatch]);\r\n\r\n  return <ButtonGroup className=\"filter-selector filter-mode\">\r\n    <Btns />\r\n  </ButtonGroup>\r\n}\r\n\r\n\r\nexport default FilterModeSelector;","import { MatSelectionDispatchContext, MatSelectionFilterContext } from \"contexts/mat-selection\";\r\nimport { classnames } from \"lib/format-utils\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport \"./filter.scss\";\r\n\r\n\r\ntype Props = {\r\n  entries: [MatSelection.TrackerMode | null, string][]\r\n}\r\n\r\nfunction FilterVisibilitySelector({ entries }: Props) {\r\n  const filter = useContext(MatSelectionFilterContext);\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n\r\n  const Btns = useCallback(() => {\r\n\r\n    const elems = [];\r\n\r\n    for (const [key, val] of entries) {\r\n      elems.push(<Button\r\n        key={key}\r\n        className={classnames([\r\n          key || 'default',\r\n          (!filter.has(key)) ? 'active' : 'not-active',\r\n        ])}\r\n        onClick={() => dispatch({ type: 'toggleFilter', payload: key })}>\r\n        {val}\r\n      </Button>)\r\n    }\r\n\r\n    return <>{elems}</>;\r\n  }, [entries, filter, dispatch]);\r\n\r\n  return <ButtonGroup className=\"filter-selector filter-filter\">\r\n    <Btns />\r\n  </ButtonGroup>\r\n}\r\n\r\n\r\n\r\nexport default FilterVisibilitySelector;","import Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FilterModeSelector from \"./FilterModeSelector\";\r\nimport FilterVisibilitySelector from \"./FilterVisibilitySelector\";\r\n\r\n\r\n\r\nfunction PensumFilter() {\r\n  const modeEntries: React.ComponentProps<typeof FilterModeSelector>['entries'] = [\r\n    ['passed', 'Aprobar'],\r\n    ['course', 'Cursar'],\r\n  ];\r\n\r\n  const visibleEntries: React.ComponentProps<typeof FilterVisibilitySelector>['entries'] = [\r\n    [null, 'Pendientes'],\r\n    ['course', 'Cursando'],\r\n    ['passed', 'Aprobadas'],\r\n  ];\r\n\r\n  return <Card >\r\n    <Card.Body>\r\n    <Container>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Row><span className=\"text-center\">Modo de selección:</span></Row>\r\n          <Row><FilterModeSelector entries={modeEntries}/></Row>\r\n        </Col>\r\n        <Col>\r\n          <Row><span className=\"text-center\">Mostrar solo:</span></Row>\r\n          <Row><FilterVisibilitySelector entries={visibleEntries}/></Row>\r\n        </Col>\r\n      </Row>\r\n      \r\n    </Container>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nexport default PensumFilter;","import { useContext } from \"react\";\r\nimport PensumSelector from \"./PensumSelector\";\r\nimport PensumDisplay from \"components/Pensum/PensumDisplay\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\nimport PensumFilter from \"./Filter\";\r\n\r\n\r\ntype Props = any;\r\n\r\n/** Main tab for the Pensum app. */\r\nfunction PensumExtractor(props: Props) {\r\n  const { state: { pensum } } = useContext(ActivePensumContext);\r\n\r\n  return (<>\r\n    <PensumSelector />\r\n\r\n    {pensum && <>\r\n      <PensumFilter/>\r\n      <PensumDisplay pensum={pensum} />\r\n    </>\r\n    }\r\n  </>)\r\n} \r\n\r\nexport default PensumExtractor;","import MatInfo from \"./MatInfo\";\r\n\r\nexport default MatInfo;","import { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function MatInfo() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleHide = () => {\r\n    navigate(-1);\r\n  };\r\n  const handleClose = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return <Modal show={true} onHide={handleHide}>\r\n    <Outlet />\r\n\r\n    <Modal.Footer>\r\n      <Button variant=\"primary\" onClick={handleClose}>\r\n        Cerrar\r\n      </Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n}","\r\nimport { useParams, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { matSelectHelpers, MatSelectionFilterContext, MatSelectionTrackerContext } from \"contexts/mat-selection\";\r\nimport MatCode, { LongMatCode } from \"components/Pensum/Mat/MatCode\";\r\nimport PensumRowNodesContext from \"contexts/pensum-row-nodes\";\r\n\r\n\r\nexport default function Details() {\r\n  const { state: { matData, pensum } } = useContext(ActivePensumContext);\r\n  const { map: rowNodeMap, scrollToRow } = useContext(PensumRowNodesContext);\r\n\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const code = params.code;\r\n\r\n  if (!code) return <Navigate to=\"/mat\" />;\r\n\r\n  const mat = matData.codeMap.get(code);\r\n  if (!mat) return <Invalid code={code} />;\r\n\r\n  const title = <><MatCode data={mat.code} /> <span>{mat.name}</span></>;\r\n\r\n  const periodName = (pensum?.periodType.name || 'Periodo') + ':';\r\n  const generalInfo = <Container>\r\n    <Row>\r\n      <Col className=\"text-end\">Código:</Col>\r\n      <Col>{mat.code}</Col>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"text-end\">Créditos:</Col>\r\n      <Col>{mat.cr}</Col>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"text-end\">{periodName}</Col>\r\n      <Col>{matData.periodMap.get(mat.code)}</Col>\r\n    </Row>\r\n  </Container>;\r\n\r\n  const isMatHiddenOnPensum = !rowNodeMap.current.get(mat.code)?.current;\r\n  const locateBtn = <Container>\r\n    <Row>\r\n      <Button \r\n      disabled={isMatHiddenOnPensum}\r\n      onClick={() => {\r\n        navigate('/');\r\n        scrollToRow(mat.code);\r\n      }}>\r\n        Localizar en pensum\r\n      </Button>\r\n    </Row>\r\n    {/* TODO: Add locate on tree btn? */}\r\n  </Container>\r\n\r\n  /** Requirement callback factory.\r\n   * Creates a onClick handler for the mat reqs.\r\n   */\r\n  const reqCbFactory = (mat: Pensum.Requirement) =>\r\n    (typeof mat === 'string') ? () => navigate('/mat/' + mat) : undefined;\r\n\r\n  const prereqInfo = (mat.prereq.length > 0) && <Container>\r\n    <Row>Pre-requisitos:</Row>\r\n    <Row>\r\n      {mat.prereq.map((req, idx) =>\r\n        <LongMatCode\r\n          key={idx}\r\n          data={req}\r\n          onClick={reqCbFactory(req)} />)}\r\n    </Row>\r\n  </Container>;\r\n\r\n  const coreqInfo = (mat.coreq.length > 0) && <Container>\r\n    <Row>Co-requisitos:</Row>\r\n    <Row>\r\n      {mat.coreq.map((req, idx) =>\r\n        <LongMatCode\r\n          key={idx}\r\n          data={req}\r\n          type=\"coreq\"\r\n          onClick={reqCbFactory(req)} />)}\r\n    </Row>\r\n  </Container>;\r\n\r\n  const postreqs = matData.postreqMap.get(mat.code) || [];\r\n  const postreqInfo = (postreqs.length > 0) && <Container>\r\n    <Row>Es requisito de:</Row>\r\n    <Row>\r\n      {postreqs.map((req, idx) =>\r\n        <LongMatCode\r\n          key={idx}\r\n          data={req}\r\n          onClick={reqCbFactory(req)} />)}\r\n    </Row>\r\n  </Container>;\r\n\r\n\r\n  return (<>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n\r\n    <Modal.Body className=\"d-flex flex-column gap-3\">\r\n      {generalInfo}\r\n      {locateBtn}\r\n\r\n      {prereqInfo}\r\n      {coreqInfo}\r\n      {postreqInfo}\r\n    </Modal.Body>\r\n  </>)\r\n}\r\n\r\nfunction Invalid({ code }: { code: string }) {\r\n  return <>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>{`Materia no encontrada: ${code}`}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      Intente usando mayusculas o guiones de por medio.\r\n    </Modal.Body>\r\n  </>\r\n}","import Modal from \"react-bootstrap/Modal\";\r\n\r\nexport default function Index() {\r\n  // TODO: Show index of all mats.\r\n\r\n  return (<>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Inserte un codigo</Modal.Title>\r\n    </Modal.Header>\r\n\r\n    <Modal.Body>\r\n      ...\r\n    </Modal.Body>\r\n  </>)\r\n}","import './App.scss';\r\nimport './global-vars.scss';\r\n\r\nimport { useCallback } from 'react';\r\nimport { BrowserRouter, Routes, Route, Outlet, Navigate } from 'react-router-dom';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport AppNavbar from 'components/AppNavbar';\r\nimport AppFooter from 'components/AppFooter';\r\n\r\nimport PensumExtractor from 'components/Pensum/PensumExtractor';\r\nimport { UniversityProvider } from 'contexts/university-data';\r\nimport { ActivePensumProvider } from 'contexts/active-pensum';\r\nimport { MatSelectionProvider } from 'contexts/mat-selection';\r\n\r\nimport MatInfo from 'components/MatInfo';\r\nimport MatInfoDetails from 'components/MatInfo/Details';\r\nimport MatInfoIndex from 'components/MatInfo/MatIndex';\r\nimport { PensumRowNodesProvider } from 'contexts/pensum-row-nodes';\r\n\r\n\r\nfunction App() {\r\n\r\n  // Nested ContextProviders\r\n  const Providers = useCallback(function Providers(props: any) {\r\n    return (\r\n      <UniversityProvider>\r\n        <ActivePensumProvider>\r\n          <MatSelectionProvider>\r\n            <PensumRowNodesProvider> \r\n              {props.children}\r\n            </PensumRowNodesProvider>\r\n          </MatSelectionProvider>\r\n        </ActivePensumProvider>\r\n      </UniversityProvider>\r\n    )\r\n  }, []);\r\n\r\n  return (\r\n    <Providers>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Layout />}>\r\n            \r\n            <Route path=\"mat\" element={<MatInfo />}> \r\n              <Route index element={<MatInfoIndex />} />\r\n              <Route path=\":code\" element={<MatInfoDetails />} />\r\n            </Route>\r\n\r\n            <Route path=\"*\" element={<Navigate to=\"/\"/>} />\r\n\r\n          </Route>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </Providers>\r\n  );\r\n}\r\n\r\nfunction Layout() {\r\n  return (<>\r\n    <AppNavbar />\r\n\r\n    <Container fluid className=\"App\">\r\n      <PensumExtractor />\r\n    </Container>\r\n\r\n    <Outlet />\r\n    <AppFooter />\r\n  </>)\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap-dark-5/dist/css/bootstrap-blackbox.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { setThemePreferenceOnLoad } from 'lib/DarkMode';\n\nsetThemePreferenceOnLoad(); // Load dark mode preference\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/** \r\n * Joins an array of classes into a className string.\r\n * @example\r\n * // returns 'card backdrop red'\r\n * let isRed = true;\r\n * classnames(['card', 'backdrop', isRed && 'red']);\r\n * @returns The joined strings, but only from items whose values are truthy.\r\n * */\r\nexport const classnames = (arr: any[]) => arr.filter(Boolean).join(' ');\r\n\r\n\r\n/**\r\n * Formats a date as YYYY-MM-DD\r\n * @param d Date to convert\r\n * \r\n * @example\r\n * let d = new Date(2010, 7, 5);\r\n * japaneseDateFormat(d);\r\n * // returns \"2010-07-05\";\r\n * \r\n * @returns Date in format YYYY-MM-DD.\r\n */\r\nexport const japaneseDateFormat = (d: Date) => {\r\n  let ye = new Intl.DateTimeFormat('en', { year:  'numeric' }).format(d);\r\n  let mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(d);\r\n  let da = new Intl.DateTimeFormat('en', { day:   '2-digit' }).format(d);\r\n  return `${da}-${mo}-${ye}`;\r\n}\r\n\r\n/** \r\n * Converts a string to title case. \r\n * @example\r\n * let txt = toTitleCase(\"john smith\");\r\n * // returns \"John Smith\"\r\n * @src https://stackoverflow.com/a/196991/13255686\r\n */\r\nexport function toTitleCase(str: string) {\r\n  return str.replace(\r\n    /\\w\\S*/g,\r\n    function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    }\r\n  );\r\n}\r\n","import { japaneseDateFormat } from \"lib/format-utils\";\r\n\r\n/** Converts a pensum from an old format to a new format. */\r\nexport function validatePensum(pensum: Pensum.Save.Legacy.Pensum2 | Pensum.Save.Pensum | null, university: string) {\r\n  // Nothing we can do about this :(\r\n  if (!pensum) return null;\r\n\r\n  // Legacy version\r\n  if (pensum.version <= 3) {\r\n    const p = convertPensum2(pensum as Pensum.Save.Legacy.Pensum2, university);\r\n    console.warn('Loaded pensum from old version!');\r\n    return p;\r\n  }\r\n\r\n  // Current version\r\n  if (pensum.version === 5) {\r\n    const p = convertSavePensum(pensum);\r\n    return p;\r\n  }\r\n\r\n  console.warn('Pensum did not load correctly!', pensum);\r\n  return null;\r\n}\r\n\r\n/** Fixes the save form of a pensum, making sure that all its properties are set (eg. empty prereqs). */\r\nexport function convertSavePensum(save: Pensum.Save.Pensum): Pensum.Pensum {\r\n  const MatConverter = (old: Pensum.Save.Mat): Pensum.Mat => {\r\n    const mat: Pensum.Mat = {\r\n      ...old,\r\n      prereq: (old.prereq) ? old.prereq : [],\r\n      coreq: (old.coreq) ? old.coreq : [],\r\n    };\r\n    \r\n    return mat;\r\n  }\r\n\r\n  const loose: Pensum.Mat[] = save.loose.map(mat => MatConverter(mat));\r\n  const periods: Pensum.Mat[][] = save.periods.map(\r\n    period => period.map(mat => MatConverter(mat)));\r\n  \r\n\r\n  return {\r\n    ...save,\r\n    loose,\r\n    periods,\r\n  };\r\n}\r\n\r\n/** Loads a legacy pensum, mapping the old properties to the new ones. */\r\nexport function convertPensum2(old: Pensum.Save.Legacy.Pensum2, university: string): Pensum.Pensum {\r\n  const pensum: Pensum.Pensum = {\r\n    version: Number(process.env.REACT_APP_SAVE_VERSION),\r\n    institution: university,\r\n    code: old.codigo,\r\n    publishDate: old.vigencia,\r\n    fetchDate: '2021-04-24',\r\n    career: old.carrera,\r\n    info: old.infoCarrera,\r\n    src: {\r\n      type: 'convert',\r\n      date: japaneseDateFormat(new Date()),\r\n      url: `./pensum/${university}/${old.codigo.toLowerCase()}.json`,\r\n    },\r\n    periodType: {\r\n      name: 'Cuatrimestre',\r\n      acronym: 'Cuat',\r\n      two: 'Ct',\r\n    },\r\n    loose: [],\r\n    periods: [],\r\n  };\r\n\r\n  if (!(old.cuats && old.cuats.length)) {\r\n    console.warn(`Pensum ${old.codigo} (${old.carrera}) did not contain any cuat!`);\r\n    return pensum;\r\n  }\r\n\r\n  const oldReqConverter = (req: Pensum.Save.Legacy.Mat['prereq']): string[] => {\r\n    if (!req) return [];\r\n    if (typeof req === 'string') return [req];\r\n    if (Array.isArray(req)) return [...req];\r\n\r\n    console.warn('Unknown requirement!: ', req);\r\n    return [];\r\n  }\r\n\r\n  // Mat converter\r\n  const oldmat2newmat = (oldMat: Pensum.Save.Legacy.Mat) => {\r\n    const newMat: Pensum.Mat = {\r\n      code: oldMat.codigo,\r\n      name: oldMat.asignatura,\r\n      cr: oldMat.creditos,\r\n      prereq: [],\r\n      coreq: [],\r\n    };\r\n\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereq));\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereqExtra).map(x => ({ text: x })));\r\n    return newMat;\r\n  }\r\n\r\n  \r\n  old.cuats.forEach((oldCuat) => {\r\n    const newCuat = [];\r\n\r\n    for (const oldMat of oldCuat) {\r\n      const newMat = oldmat2newmat(oldMat);\r\n      newCuat.push(newMat);\r\n    }\r\n    \r\n    pensum.periods.push(newCuat);\r\n  });\r\n\r\n  return pensum;\r\n}\r\n\r\n/** Converts a pensum into its save form, reducing its size if no requirements are used for each Mat. */\r\nexport function convertPensumToSave(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  \r\n  const mat2savemat = (mat: Pensum.Mat): Pensum.Save.Mat => {\r\n    const out: any = {...mat};\r\n    if (out.prereq.length === 0) delete out.prereq;\r\n    if (out.coreq.length === 0) delete out.coreq;\r\n    \r\n    return out;\r\n  }\r\n  \r\n  const out = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(mat => mat2savemat(mat)),\r\n    periods: pensum.periods.map(p => p.map(mat => mat2savemat(mat))),\r\n  };\r\n  \r\n\r\n  return out;\r\n}"],"sourceRoot":""}