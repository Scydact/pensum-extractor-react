{"version":3,"sources":["lib/DarkMode/index.ts","lib/DarkMode/DarkModeSwitch.tsx","components/AppNavbar.tsx","components/AppFooter.tsx","functions/metadata-fetch.ts","lib/sort-utils.ts","contexts/university-data/index.tsx","lib/DarkMode/select-theme.ts","functions/pensum-fetch.ts","functions/pensum-save.ts","functions/pensum-get-extras.ts","lib/set-utils.ts","contexts/active-pensum/reducer.ts","contexts/active-pensum/index.tsx","components/Pensum/PensumSelector.tsx","contexts/mat-selection/default.ts","contexts/mat-selection/reducer.ts","contexts/mat-selection/index.tsx","components/Pensum/Mat/MatCode.tsx","contexts/pensum-row-nodes/index.tsx","components/Pensum/Table/MatRow.tsx","components/Pensum/Table/Period.tsx","components/Pensum/Table/Table.tsx","components/Pensum/Table/index.ts","components/Pensum/PensumDisplay.tsx","components/Pensum/Filter/FilterModeSelector.tsx","components/Pensum/Filter/FilterVisibilitySelector.tsx","components/Pensum/Actions/index.tsx","components/Pensum/PensumInfo.tsx","components/Pensum/PensumProgress.tsx","components/Pensum/PensumExtractor.tsx","components/MatInfo/index.tsx","components/MatInfo/MatInfo.tsx","components/MatInfo/Details.tsx","components/MatInfo/MatIndex.tsx","components/Debug/index.tsx","components/Pensum/Actions/CalcIndice.tsx","App.tsx","reportWebVitals.ts","index.tsx","serviceWorkerRegistration.js","lib/format-utils.tsx","functions/pensum-converter.ts"],"names":["isCssInit","setColorPreference","color_p","persist","initial","new_s","old_s","el","document","body","classList","add","remove","dataset","colorScheme","setTimeout","localStorage","setItem","updateUI","id","querySelector","data","setAttribute","hrefDark","hrefLight","initColorCSS","el_o","el_l","el_d","getAttribute","DarkModeSwitch","useState","dark","setDark","useEffect","setDarkmode","OverlayTrigger","placement","overlay","Tooltip","className","type","checked","onChange","e","target","AppNavbar","navbarRef","useRef","navigate","useNavigate","prevScrollPos","window","scrollY","onScrollFn","current","currentScrollPos","height","getBoundingClientRect","style","top","addEventListener","removeEventListener","Navbar","ref","variant","fixed","Container","Brand","onClick","AppFooter","href","rel","margin","process","title","BASE_PATH","UNIVERSITIES_PATH","CAREERS_FILE","a","fetch","response","json","unisObj","TypeError","universities","fetchCarreras","universityCode","university","api","careers","path","toLowerCase","carrerasObj","sortByProp","propList","length","b","prop","universityDataReducer","state","action","payload","loading","selected","code","find","x","imgUrl","longName","shortName","toUpperCase","console","warn","error","initialUniversityData","UniversityContext","createContext","dispatch","select","UniversityProvider","memo","children","useReducer","useCallback","pensumList","fetchUniversities","then","unis","u","sort","catch","finally","Provider","value","optionStyle","option","provided","color","isSelected","undefined","placeholder","opacity","selectTheme","theme","colors","primary","primary75","primary50","primary25","danger","dangerLight","neutral0","neutral5","neutral10","neutral20","neutral30","neutral40","neutral50","neutral60","neutral70","neutral80","neutral90","LOCAL_STORAGE_PREFIX","LOCAL_SERVER_PREFIX","fetchPensumFromCode","PensumFetchError","fetchPensumFromCode_localStorage","pensum","fetchPensumFromCode_localData","fetchPensumFromSource","key","join","pensumData","getItem","JSON","parse","validatePensum","extractor","default","url","log","Error","mat2savemat","mat","save","prereq","coreq","pensumToSavePensum","loose","map","periods","y","processPensumMats","list","periodMap","Map","codeMap","postreqMap","looseUnhandled","Set","matMap","matPeriod","matPostreq","mats","warnings","processMat","periodNum","has","push","text","set","forEach","period","periodIdx","get","matSet","keys","setA","setB","_difference","elem","delete","difference","warning","PENSUM_STORAGE_KEY","savePensumToLocalStorage","stringify","removeItem","createPayload","matData","activePensumReducer","institution","loadPensumFromLocalStorage","loadLegacyPensumFromLocalStorage","defaultContext","load","ActivePensumContext","ActivePensumProvider","m","SyntaxError","message","createLabelString","name","SelectUni","options","isLoading","isSearchable","styles","SelectCareer","isClearable","loadingMessage","PensumSelector","useContext","activePensum","error_pensum","loading_pensum","loadPensum","universityData","selectUniversity","selected_uni","loading_uni","error_uni","pensumOnInput","setPensumOnInput","previousPensum","usePreviousValue","careerSelectOptions","useMemo","label","careerOption","career","universitySelectOptions","selectedUniversity","handleUniversityChange","newValue","handleSubmit","evt","preventDefault","uni","Card","Body","Form","onSubmit","zIndex","position","Button","disabled","Spinner","animation","size","String","matSelectionModeTypes","createDefaultSelection","mode","tracker","course","passed","currentName","storage","filter","TRACKER_STORAGE_KEY","LEGACY_TRACKER_STORAGE_KEY","matSelectionReducer","obj","fn","cloneTracker","o","Object","entries","newMode","matCount","sortedTracker","fromEntries","i","k","v","untracked","isTracked","allOnMain","allUnselected","noneUnselected","someUnselected","_union","union","clear","newName","t","trim","hasOwnProperty","RangeError","oldName","oldTracker","saveTrackerToLocalStorage","str","JSONSetUtils","createPayloadWithDefaults","loadTrackerFromLocalStorage","olddata","saveVer","filterMode","pushIfFalse","val","pending","onCourse","selectMode","userData","addIfTracker","arr","targetSet","Array","isArray","every","loadLegacyTrackerFromLocalStorage","trackerState","base","createDefaultState","includes","matSelectHelpers","periodStr","MatSelectionDispatchContext","MatSelectionModeContext","MatSelectionTrackerContext","MatSelectionTrackerNameContext","MatSelectionTrackerStorageContext","MatSelectionFilterContext","MatSelectionProvider","MatCode","content","ogClass","rest","split","classnames","LongMatCode","scrollToRow","updateNode","PensumRowNodesContext","PensumRowNodesProvider","node","n","scrollIntoView","behavior","block","trackerCheckmarks","MatRow","idx","rowRef","clickableRef","trackerMode","currentTracker","cl","reqs","cbMouseEnter","cbMouseLeave","clickable","Row","Col","to","cr","Period","cumlen","isAllMatsOnSameTracker","commonTracker","filteredPeriod","tr","matrows","TableHead","props","processedPeriod","periodNumStr","defaultPeriodType","acronym","two","PensumTable","sum","periodIndexStart","periodType","periodElems","PensumDisplay","Header","Title","FilterModeSelector","Btns","elems","ButtonGroup","FilterVisibilitySelector","PensumActions","ActionButtons","matSelectDispatch","btnVariant","vertical","PensumInfo","info","line","InfoLine","parsed","splitOnFirstColon","substring","indexOf","splitOnDots","parseInfoLine","PensumProgress","matList","out","creds","total","useGradeProgress","percentPassed","percentCourse","ProgressBar","striped","now","backgroundColor","Percent","extra","pBase","toFixed","pExtra","extraText","PensumExtractor","MatInfo","Modal","show","onHide","Footer","Details","rowNodeMap","useParams","Invalid","periodName","generalInfo","isMatHiddenOnPensum","locateBtn","reqCbFactory","prereqInfo","req","coreqInfo","postreqs","postreqInfo","closeButton","Index","DebugPage","testLegacyLocalStorage","CalcIndice","useGPA","formValues","setFormValues","periodGPA","cumHours","setCumHours","cumGPA","setCumGPA","newCumGPA","handleHide","formHeaders","minWidth","centerY","formRows","f","weight","Select","prev","Number","numFormCl","validOut","InputGroup","Text","FormControl","toPrecision","InfoGetGPAFromBanner","Math","abs","min","step","max","useFormValues","totalPassedCr","reduce","cum","weightSum","pga","getPeriodPGA","currentCr","useLocalStorage","updateFormValues","old","trackedMats","Boolean","passedCr","OutLink","LayoutWithPensum","App","Providers","basename","fluid","element","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","osColorPreference","matchMedia","matches","preferredColorScheme","setThemePreferenceOnLoad","ReactDOM","render","StrictMode","getElementById","navigator","URL","location","origin","wb","Workbox","event","isUpdate","register","registerServiceWorker","japaneseDateFormat","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","version","p","convertPensum2","MatConverter","convertSavePensum","codigo","publishDate","vigencia","fetchDate","carrera","infoCarrera","src","date","Date","cuats","oldReqConverter","oldmat2newmat","oldMat","newMat","asignatura","creditos","prereqExtra","oldCuat","newCuat"],"mappings":"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","file":"static/js/main.d0f627ed.chunk.js","sourcesContent":["\r\n// Src: https://github.com/vinorodrigues/bootstrap-dark-5/blob/main/examples/cheatsheet-night.html\r\n// parts from: https://radek.io/posts/secret-darkmode-toggle/\r\n\r\nvar isCssInit = false;\r\n\r\nfunction setColorPreference(color_p: string, persist = false, initial = false) {\r\n  const new_s = color_p;\r\n  const old_s = color_p === 'light' ? 'dark' : 'light'\r\n\r\n  const el = document.body;  // gets root <html> tag\r\n  el.classList.add('color-scheme-' + new_s);\r\n  el.classList.remove('color-scheme-' + old_s);\r\n  el.dataset.colorScheme = new_s;\r\n\r\n  // Background transitions ONLY on switching theme\r\n  if (!initial) {\r\n    el.classList.add('color-scheme-transition');\r\n    setTimeout(() => {\r\n      el.classList.remove('color-scheme-transition');\r\n    }, 500);\r\n  }\r\n\r\n  if (persist) {\r\n    localStorage.setItem('preferred-color-scheme', color_p);\r\n  }\r\n}\r\n\r\nfunction updateUI(color_p: string, id = 'css') {\r\n  // toggle_btn.checked = color_p === 'dark';\r\n\r\n  if (isCssInit) {\r\n    const el = document.querySelector('#' + id) as HTMLElement;\r\n    const data = el.dataset;\r\n    if (color_p === 'dark') {\r\n      el.setAttribute('href', data.hrefDark || '');\r\n    } else {\r\n      el.setAttribute('href', data.hrefLight || '');\r\n    }\r\n    data.colorScheme = color_p;\r\n  }\r\n}\r\n\r\nfunction initColorCSS(color_p: string, id = 'css') {\r\n  isCssInit = true;\r\n\r\n  var el_o = document.querySelector('#' + id) as HTMLElement;\r\n  var el: HTMLElement;\r\n  if (el_o !== null) el_o.remove();\r\n  var el_l = document.querySelector('#' + id + '-light') as HTMLElement;\r\n  var el_d = document.querySelector('#' + id + '-dark') as HTMLElement;\r\n  if (color_p === 'dark') {\r\n    el = el_d;\r\n    el_o = el_l;\r\n  } else {\r\n    el = el_l;\r\n    el_o = el_d;\r\n  }\r\n  el.setAttribute('data-href-light', el_l.getAttribute('href') || '');\r\n  el.setAttribute('data-href-dark', el_d.getAttribute('href') || '');\r\n  el.setAttribute('data-color-scheme', color_p);\r\n  el.setAttribute('media', 'all');\r\n  el.setAttribute('id', id);\r\n  el_o.remove();\r\n}\r\n\r\n\r\nexport function setDarkmode(dark: boolean) {\r\n  const color_p = dark ? 'dark' : 'light';\r\n\r\n  if (!isCssInit) initColorCSS(color_p);\r\n\r\n  setColorPreference(color_p, true);\r\n  updateUI(color_p);\r\n}\r\n\r\nexport function getDarkmode() {\r\n  return document.body.dataset.colorScheme === 'dark';\r\n}\r\n\r\nexport function setThemePreferenceOnLoad() {\r\n  /* Set Preference on load */\r\n  const osColorPreference = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  // console.log('OS wants ' + osColorPreference);\r\n  var preferredColorScheme = localStorage.getItem('preferred-color-scheme');\r\n  if (preferredColorScheme !== null) {\r\n    initColorCSS(preferredColorScheme);\r\n  } else {\r\n    preferredColorScheme = osColorPreference;\r\n  }\r\n  setColorPreference(preferredColorScheme, false, true);\r\n  updateUI(preferredColorScheme);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport { BsFillMoonStarsFill } from 'react-icons/bs';\r\nimport { FaSun } from 'react-icons/fa';\r\nimport { getDarkmode, setDarkmode } from \".\";\r\nimport './btn-switch.scss';\r\n\r\n\r\nfunction DarkModeSwitch() {\r\n  const [dark, setDark] = useState(false);\r\n  \r\n  // onMount\r\n  useEffect(() => {\r\n    setDark(getDarkmode());\r\n  }, [])\r\n\r\n  // onChange\r\n  useEffect(() => {\r\n    setDarkmode(dark);\r\n  }, [dark])\r\n  \r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    setDark(e.target.checked);\r\n  }\r\n\r\n  return <OverlayTrigger\r\n    placement=\"left\"\r\n    overlay={<Tooltip>{(dark ? 'Desactivar' : 'Activar') + ' modo oscuro'}</Tooltip>}>\r\n    <label className={\"darkmode-switch\" + (dark ? ' dark' : '')}>\r\n      {(dark) ? <BsFillMoonStarsFill/> : <FaSun />}\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={dark}\r\n        onChange={handleChange} />\r\n    </label>\r\n  </OverlayTrigger>\r\n}\r\n\r\nexport default DarkModeSwitch;","import DarkModeSwitch from \"lib/DarkMode/DarkModeSwitch\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction AppNavbar() {\r\n  const navbarRef = useRef(null as HTMLElement | null);\r\n  const navigate = useNavigate();\r\n\r\n  // Navbar hide on scroll\r\n  useEffect(() => {\r\n    var prevScrollPos = window.scrollY;\r\n    const onScrollFn = () => {\r\n      if (!navbarRef.current) return;\r\n      var currentScrollPos = window.scrollY;\r\n      var { height } = navbarRef.current.getBoundingClientRect();\r\n\r\n      if (prevScrollPos > currentScrollPos) {\r\n        navbarRef.current.style.top = '0';\r\n      } else {\r\n        navbarRef.current.style.top = (height < currentScrollPos ? -height : -currentScrollPos) + 'px';\r\n      }\r\n      prevScrollPos = currentScrollPos;\r\n    }\r\n\r\n    window.addEventListener('scroll', onScrollFn);\r\n    return () => window.removeEventListener('scroll', onScrollFn);\r\n  }, []);\r\n\r\n  return <Navbar\r\n    ref={navbarRef}\r\n    variant=\"dark\"\r\n    className=\"App-header mb-3\"\r\n    fixed=\"top\" >\r\n    <Container>\r\n      <Navbar.Brand\r\n       onClick={() => navigate(\"/\")}>PENSUMS UNAPEC</Navbar.Brand>\r\n\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  </Navbar>\r\n}\r\n\r\nexport default AppNavbar;","import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AppFooter() {\r\n  const navigate = useNavigate();\r\n\r\n  return <footer className=\"my-3 navbar navbar-expand navbar-light static-bottom text-center\">\r\n    <span>Pensum Extractor DO</span>\r\n    <span>Fernando Rivas, 2021</span>\r\n    <span>\r\n      <a\r\n        href=\"http://scydact.github.io/\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\">\r\n        scydact.github.io\r\n      </a>\r\n      <span style={{ margin: '0 .5rem' }}>\r\n        (<a\r\n          href=\"https://github.com/Scydact/pensum-extractor-react\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\">\r\n          Ver en GitHub\r\n        </a>)\r\n      </span>\r\n    </span>\r\n    <span>Version v{process.env.REACT_APP_VERSION} | save v{process.env.REACT_APP_SAVE_VERSION}</span>\r\n    <span>\r\n      En caso de problemas o sugerencias,\r\n      favor escribir a <a\r\n        href=\"mailto:scydact@gmail.com?subject=[Pensum Extractor]\">\r\n        scydact@gmail.com</a>\r\n      <span\r\n       className=\"muted\" \r\n       onClick={() => navigate(\"debug\")}\r\n       title=\"Debug\">\r\n        .\r\n      </span>\r\n    </span>\r\n  </footer>\r\n}\r\n\r\nexport default AppFooter;","const BASE_PATH = process.env.PUBLIC_URL + '/pensum';\r\nconst UNIVERSITIES_PATH = BASE_PATH + '/universities.json';\r\nconst CAREERS_FILE = 'index.json';\r\n\r\n/** Fetches universities.json */\r\nexport async function fetchUniversities() {\r\n  const response = await fetch(UNIVERSITIES_PATH);\r\n  const unisObj: PensumJson.Universities = await response.json();\r\n\r\n  if (typeof unisObj !== 'object') {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if (!unisObj.universities) {\r\n    throw TypeError('Invalid universities.json format.');\r\n  }\r\n\r\n  return unisObj;\r\n}\r\n\r\n/** Fetches ./pensum/$UNIVERSITY/index.json */\r\nexport async function fetchCarreras(universityCode?: string) {\r\n  if (!universityCode) return {\r\n      university: '',\r\n      api: null,\r\n      careers: []\r\n  } as PensumJson.PensumIndex;\r\n\r\n  const path = BASE_PATH + '/' + universityCode.toLowerCase() + '/' + CAREERS_FILE\r\n  const response = await fetch(path);\r\n  const carrerasObj: PensumJson.PensumIndex = await response.json();\r\n\r\n  if (typeof carrerasObj !== 'object') {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  // In the future, check if all props are valid.\r\n  if ( !carrerasObj.api\r\n    || !carrerasObj.university\r\n    || !carrerasObj.careers\r\n  ) {\r\n    throw TypeError('Invalid careers.json format.');\r\n  }\r\n\r\n  return carrerasObj;\r\n}\r\n","export function sortByProp<T, K extends keyof T>(...propList: K[]) {\r\n  if (propList.length === 0) {\r\n    return (a: T, b: T) => (a > b) ? 1 : -1;\r\n  }\r\n\r\n  if (propList.length === 1) {\r\n    const prop = propList[0];\r\n    return (a: T, b: T) => (a[prop] > b[prop]) ? 1 : -1; \r\n  }\r\n\r\n  return (a: T, b: T) => {\r\n    for (let prop of propList) {\r\n      if (a[prop] > b[prop]) {\r\n        return 1;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n}\r\n\r\n/** \r\n * Similar to Array.map(), but for objects. \r\n * @example\r\n * const foo = {x: 1, y: 2, z: 3};\r\n * objectMap(foo, v => v.toString());\r\n * // returns {x: '1', y: '2', z: '3'}\r\n */\r\nexport function objectMap\r\n  <T, F extends (val: T[keyof T], key: keyof T, index: number) => any>\r\n  (obj: T, fn: F) {\r\n  return Object.fromEntries(\r\n    (Object.entries(obj) as [keyof T, T[keyof T]][]).map(\r\n      ([k, v], i) => [k, fn(v, k, i)] as [keyof T, ReturnType<F>])\r\n  ) as { [P in keyof T]: ReturnType<F> }\r\n}\r\n\r\n\r\n/**\r\n * Returns a hash code for a string.\r\n * (Compatible to Java's String.hashCode())\r\n *\r\n * The hash code for a string object is computed as\r\n *     s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]\r\n * using number arithmetic, where s[i] is the i th character\r\n * of the given string, n is the length of the string,\r\n * and ^ indicates exponentiation.\r\n * (The hash value of the empty string is zero.)\r\n *\r\n * @param {string} s a string\r\n * @return {number} a hash code value for the given string.\r\n * @src https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0\r\n */\r\nexport function stringHash(s: string) {\r\n  var h = 0, l = s.length, i = 0;\r\n  if ( l > 0 )\r\n    while (i < l)\r\n      h = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n  return h;\r\n};","import { fetchCarreras, fetchUniversities } from \"functions/metadata-fetch\"\r\nimport { sortByProp } from \"lib/sort-utils\"\r\nimport React, { createContext, memo, useCallback, useEffect, useReducer } from \"react\"\r\n\r\nfunction universityDataReducer(\r\n  state: UniversityData.Payload,\r\n  action: UniversityData.DispatchAction): UniversityData.Payload {\r\n  switch (action.type) {\r\n    case 'set/universities':\r\n      return {\r\n        ...state,\r\n        universities: action.payload\r\n      }\r\n\r\n    case 'set/selected': {\r\n      if (!action.payload) return {\r\n        ...state,\r\n        loading: false,\r\n        selected: null,\r\n      };\r\n\r\n      const { code, data: careerIndex } = action.payload;\r\n      const { careers } = careerIndex;\r\n\r\n      const university = state.universities.find(x => x.code === code) ||\r\n        { code, imgUrl: null, longName: code, shortName: code.toUpperCase() };\r\n\r\n      // Ignore if already selected.\r\n      if (state.selected?.code === code) return {\r\n        ...state,\r\n        loading: false,\r\n      }; \r\n\r\n      // University codes don't match!\r\n      if (university.code !== code) console.warn('University code mismatch!');\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        selected: {\r\n          code,\r\n          university,\r\n          careers,\r\n        }\r\n      }\r\n    }\r\n\r\n    case 'set/loading':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      }\r\n\r\n    case 'set/error':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n\r\n    default:\r\n      console.error('Unknown action: ', action);\r\n      return state;\r\n  }\r\n}\r\n\r\n/** Initial value for UniversityData */\r\nconst initialUniversityData: UniversityData.Payload = {\r\n  universities: [],\r\n  selected: null,\r\n  loading: true,\r\n  error: null,\r\n}\r\n\r\n\r\n\r\n// CONTEXT STUFF\r\n/** University data context. To be used with useContext() for getting selected university/careers. */\r\nexport const UniversityContext = createContext({\r\n  state: initialUniversityData, \r\n  dispatch: {} as React.Dispatch<UniversityData.DispatchAction>,\r\n  select: async (code: string | null) => { },\r\n});\r\n\r\n\r\ntype UniCtxProps = { children: any};\r\n\r\n/** Handles automatic load of university list. */\r\nexport const UniversityProvider = memo(function UniversityProvider({ children }: UniCtxProps) {\r\n  const [state, dispatch] = useReducer(universityDataReducer, initialUniversityData);\r\n\r\n  /** Select a new university from a given code. */\r\n  const select = useCallback(async (code: string | null) => {\r\n    // If no code was given, select no pensum.\r\n    if (!code) {\r\n      dispatch({ type: 'set/selected', payload: null });\r\n      return;\r\n    }\r\n\r\n    // Don't do anything if university code didn't change...\r\n    code = code?.toLowerCase();\r\n    if (code === state.selected?.code) {\r\n      return;\r\n    }\r\n\r\n    // Code was give, select fetch new pensum!\r\n    dispatch({ type: \"set/loading\", payload: true });\r\n    try {\r\n      const pensumList = await fetchCarreras(code);\r\n      dispatch({ type: 'set/selected', payload: { code, data: pensumList } });\r\n    }\r\n    catch (err) {\r\n      console.warn(`Unable to load pensums for ${code}: `, err);\r\n      dispatch({\r\n        type: 'set/selected',\r\n        payload: {\r\n          code: code,\r\n          data: {\r\n            api: null,\r\n            university: code.toUpperCase(),\r\n            careers: [],\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return;\r\n  }, [state.selected, dispatch]);\r\n\r\n\r\n  // onMount: load universities\r\n  useEffect(() => {\r\n    fetchUniversities()\r\n      .then(unis => {\r\n        const u = unis.universities.sort(sortByProp('longName'));\r\n        dispatch({ type: 'set/universities', payload: u })\r\n      })\r\n      .catch(e => {\r\n        dispatch({ type: 'set/error', payload: e })\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: 'set/loading', payload: false })\r\n      })\r\n      \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (state.selected === null) {\r\n      select('unapec');\r\n    }\r\n  }, [select, state.selected]);\r\n  \r\n  return <UniversityContext.Provider value={{ state, dispatch, select }}>\r\n    {children}\r\n  </UniversityContext.Provider>\r\n})\r\n\r\nexport default UniversityContext;","/**\r\n * Dark mode support styles for react-select components.\r\n */\r\n\r\nimport { StylesConfig, ThemeConfig } from \"react-select\";\r\nimport './theme.scss';\r\n\r\n/** Include this to allow dark mode toggling. */\r\nconst selectTheme: ThemeConfig = (theme) => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary: 'var(--bs-primary)',   // Focus border\r\n    primary75: 'rgba(var(--bs-primary-rgb), 0.75)',\r\n    primary50: 'rgba(var(--bs-primary-rgb), 0.50)',\r\n    primary25: 'rgba(var(--bs-primary-rgb), 0.25)', // Selected Option color\r\n    danger: 'var(--bs-danger)',\r\n    dangerLight: 'rgba(var(--bs-danger-rgb), 0.25)',\r\n    neutral0: 'var(--bs-body-bg)',  // Background\r\n    neutral5: 'var(--th-gray-50)',\r\n    neutral10: 'var(--th-gray-100)',\r\n    neutral20: 'var(--th-gray-200)',  // Border\r\n    neutral30: 'var(--th-gray-300)',  // Border hover/focus\r\n    neutral40: 'var(--th-gray-400)',\r\n    neutral50: 'var(--th-gray-500)',  // Nothing selected\r\n    neutral60: 'var(--th-gray-600)',  // dropdown arrow (focus)\r\n    neutral70: 'var(--th-gray-700)',\r\n    neutral80: 'var(--th-gray-800)',  // Something selected\r\n    neutral90: 'var(--th-gray-900)',\r\n  }\r\n})\r\n\r\n/** Style override to make selected value visible on dark mode. */\r\nexport const optionStyle: StylesConfig = {\r\n  option: (provided, state) => ({\r\n    ...provided, \r\n    color: (state.isSelected) ? 'white' : undefined,\r\n  }),\r\n\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    opacity: 0.6,\r\n  })\r\n  \r\n}\r\n\r\nexport default selectTheme;","import { validatePensum } from \"./pensum-converter\";\r\n\r\nexport const LOCAL_STORAGE_PREFIX = process.env.REACT_APP_PENSUM_STORAGE_PENSUM_LOCALSAVE_KEY;\r\nexport const LOCAL_SERVER_PREFIX = process.env.PUBLIC_URL + '/pensum';\r\n\r\n/**\r\n * Tries to load from the given pensum code from a university.\r\n * \r\n * Lookup order:\r\n *  1. `localStorage`\r\n *  2. local data (`pensum/university/CODE.json`)\r\n *  3. from url\r\n */\r\nexport async function fetchPensumFromCode(university?: string, code?: string) {\r\n  if (!university || !code) throw new PensumFetchError('No university or code provided!');//return null;\r\n\r\n  let pensum: Pensum.Pensum | null;\r\n\r\n  pensum = await fetchPensumFromCode_localStorage(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  pensum = await fetchPensumFromCode_localData(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  pensum = await fetchPensumFromSource(university, code);\r\n  if (pensum) return pensum;\r\n\r\n  // Don't return null!\r\n  // Instead throw error, so this gets cached.\r\n  throw new PensumFetchError(`Unable to fetch pensum with identifier ${university}/${code}`);\r\n}\r\n\r\n/** \r\n * Tries to fetch the pensum from `localStorage`.\r\n * \r\n * **Important note!** This only does fetch. The saving to `localStorage` will be done at window.unload.\r\n */\r\nasync function fetchPensumFromCode_localStorage(university: string, code: string) {\r\n  const key = [LOCAL_STORAGE_PREFIX, university, code].join('_');\r\n  const pensumData = localStorage.getItem(key);\r\n\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  const pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n  return validatePensum(pensum, university);\r\n}\r\n\r\n\r\n/** Tries to fetch the pensum from `./pensum/$UNIVERSIDAD.` */\r\nasync function fetchPensumFromCode_localData(university: string, code: string) {\r\n  const path = [LOCAL_SERVER_PREFIX, university, code].join('/') + '.json';\r\n\r\n  let pensumData: Pensum.Save.Pensum;\r\n  try {\r\n    const response = await fetch(path);\r\n    pensumData = await response.json();\r\n  } catch {\r\n    return null;\r\n  }\r\n\r\n  return validatePensum(pensumData, university);\r\n}\r\n\r\nasync function fetchPensumFromSource(university: string, code: string) {\r\n  switch (university) {\r\n    case 'unapec': {\r\n      const extractor = await import('extractor/unapec');\r\n      return await extractor.default(code, \r\n        (state, url, id) => console.log(`${state} ${university}/${code}, using proxy #${id}: ${url}`))\r\n    }\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport class PensumFetchError extends Error {}","/** Omits prereq | coreq if empty. */\r\nfunction mat2savemat(mat: Pensum.Mat): Pensum.Save.Mat {\r\n  const save: Pensum.Save.Mat = { ...mat };\r\n\r\n  if (save.prereq && save.prereq.length === 0)\r\n    delete save.prereq;\r\n  if (save.coreq && save.coreq.length === 0)\r\n    delete save.coreq;\r\n\r\n  return save;\r\n}\r\n\r\n/** This function removes any empty parameters to make the savepensum smaller. */\r\nfunction pensumToSavePensum(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  const save = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(x => mat2savemat(x)),\r\n    periods: pensum.periods.map(x => x.map(y => mat2savemat(y))),\r\n  };\r\n\r\n  return save;\r\n}\r\n\r\nexport default pensumToSavePensum;","import { difference } from \"lib/set-utils\";\r\n\r\n/** Gets all the extra data of a pensum's mats. */\r\nexport function processPensumMats(pensum: Pensum.Pensum | null): ActivePensum.MatExtraData {\r\n  if (!pensum) return {\r\n    list: [],\r\n    periodMap: new Map(),\r\n    codeMap: new Map(),\r\n    postreqMap: new Map(),\r\n    looseUnhandled: new Set(),\r\n  };\r\n\r\n  const matMap = new Map<string, Pensum.Mat>();\r\n  const matPeriod = new Map<string, number>();\r\n  const matPostreq = new Map<string, string[]>();\r\n  const mats: Pensum.Mat[] = [];\r\n  const warnings: { code: string, text: string }[] = [];\r\n\r\n  const processMat = (mat: Pensum.Mat, periodNum: number) => {\r\n    if (matMap.has(mat.code)) \r\n      warnings.push({code: mat.code, text: 'was already registered!'});\r\n\r\n    // Add to all lists/maps/sets\r\n    matMap.set(mat.code, mat);\r\n    matPeriod.set(mat.code, periodNum);\r\n    mats.push(mat);\r\n  }\r\n\r\n\r\n  // Loose mats have period 0\r\n  pensum.loose.forEach(mat => processMat(mat, 0));\r\n\r\n  pensum.periods.forEach((period, periodIdx) => {\r\n    period.forEach(mat => processMat(mat, periodIdx + 1));\r\n  });\r\n\r\n\r\n  // After all mats are registered, get postreqs\r\n  for (const mat of mats) {\r\n    const code = mat.code;\r\n\r\n    for (const prereq of mat.prereq) {\r\n      if (typeof prereq === 'string') { // Only select codes, not {text: ''}\r\n\r\n        // Add or create new list\r\n        const list = matPostreq.get(prereq);\r\n        if (list) list.push(code);\r\n        else matPostreq.set(prereq, [code]);\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  // Get unhandled loose mats\r\n  const matSet = new Set(matMap.keys());\r\n  const hasPostreqSet = new Set(matPostreq.keys());\r\n  \r\n  // Codes that are prereqs to something but do not exist on mats.\r\n  const looseUnhandled = difference(hasPostreqSet, matSet);\r\n\r\n\r\n  // Play all the warnings\r\n  for (const warning of warnings) {\r\n    console.warn(`Warning at pensum-get-extras [${warning.code}]: ${warning.text}`);\r\n  }\r\n\r\n\r\n\r\n  return {\r\n    /** List of all mats */\r\n    list: mats,\r\n    /** Map: code<string> -> period<number> */\r\n    periodMap: matPeriod,\r\n    /** Map : code<string> -> mat<Mat> */\r\n    codeMap: matMap, \r\n    /** Map: code<string> -> postreqs<string> */\r\n    postreqMap: matPostreq,\r\n    /** List of mats that are prereqs but are not registered. */\r\n    looseUnhandled: looseUnhandled,\r\n  }\r\n}\r\n\r\nexport default processPensumMats;","// Almost everything extracted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n\r\n/**\r\n * Checks if all the elements of `subset` are inside `set`.\r\n * @param set Global set\r\n * @param subset Smaller set\r\n * @returns True if the smaller set is inside the global set.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setB = new Set([2, 3])\r\n * isSuperset(setA, setB) // returns true\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function isSuperset<T>(set: Set<T>, subset: Set<T>) {\r\n  for (let elem of subset) {\r\n      if (!set.has(elem)) {\r\n          return false\r\n      }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Returns the union of both sets.\r\n * @param setA \r\n * @param setB \r\n * @returns Union of setA and setB.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * union(setA, setC) // returns Set {1, 2, 3, 4, 5, 6}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function union<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _union = new Set(setA)\r\n  for (let elem of setB) {\r\n      _union.add(elem)\r\n  }\r\n  return _union\r\n}\r\n\r\n/**\r\n * Returns the elements that both sets have in common with each other.\r\n * @param setA \r\n * @param setB \r\n * @returns Intersection of both sets\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * intersection(setA, setC) // returns Set {3, 4}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function intersection<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _intersection = new Set()\r\n  for (let elem of setB) {\r\n      if (setA.has(elem)) {\r\n          _intersection.add(elem)\r\n      }\r\n  }\r\n  return _intersection\r\n}\r\n  \r\n/**\r\n * Returns the elements that are not shared between `setA` and `setB`.\r\n * Same as union(A,B) - intersect(A,B);\r\n * @param setA \r\n * @param setB \r\n * @returns Elements not shared between sets.\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * symmetricDifference(setA, setC) // returns Set {1, 2, 5, 6}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function symmetricDifference<T>(setA: Set<T>, setB: Set<T>) {\r\n    let _difference = new Set(setA)\r\n    for (let elem of setB) {\r\n      if (_difference.has(elem)) {\r\n          _difference.delete(elem)\r\n      } else {\r\n          _difference.add(elem)\r\n      }\r\n  }\r\n  return _difference\r\n}\r\n\r\n/**\r\n * Returns the elements of `setA` that are not in `setB`. \r\n * @param setA \r\n * @param setB \r\n * @returns setA - setB\r\n * @example\r\n * const setA = new Set([1, 2, 3, 4])\r\n * const setC = new Set([3, 4, 5, 6])\r\n * difference(setA, setC) // returns Set {1, 2}\r\n * @src https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\r\n */\r\nexport function difference<T>(setA: Set<T>, setB: Set<T>) {\r\n  let _difference = new Set(setA)\r\n  for (let elem of setB) {\r\n      _difference.delete(elem)\r\n  }\r\n  return _difference\r\n}","import { validatePensum } from \"functions/pensum-converter\";\r\nimport pensumToSavePensum from \"functions/pensum-save\";\r\nimport processPensumMats from \"functions/pensum-get-extras\";\r\n\r\nconst PENSUM_STORAGE_KEY = process.env.REACT_APP_PENSUM_STORAGE_PENSUM_KEY || 'PENSUM_DATA';\r\nconst LEGACY_PENSUM_STORAGE_KEY = 'pensumData';\r\n\r\nexport function savePensumToLocalStorage(pensum: Pensum.Pensum | null) {\r\n  if (!pensum) {\r\n    localStorage.removeItem(PENSUM_STORAGE_KEY);\r\n    return;\r\n  }\r\n\r\n  var save = pensumToSavePensum(pensum);\r\n  localStorage.setItem(PENSUM_STORAGE_KEY, JSON.stringify(save));\r\n}\r\n\r\nexport function loadPensumFromLocalStorage(): Pensum.Pensum | null {\r\n  let pensumData = localStorage.getItem(PENSUM_STORAGE_KEY);\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  let pensum = JSON.parse(pensumData) as Pensum.Save.Pensum;\r\n  let loadedPensum = validatePensum(pensum, pensum.institution);\r\n\r\n  return loadedPensum;\r\n}\r\n\r\nexport function loadLegacyPensumFromLocalStorage(): Pensum.Pensum | null {\r\n  let pensumData = localStorage.getItem(LEGACY_PENSUM_STORAGE_KEY);\r\n  if (!pensumData) return null; // Could not fetch\r\n\r\n  // Parse fetched data\r\n  // TODO: CHECK IF DATA IS VALID\r\n  let pensum = JSON.parse(pensumData) as Pensum.Save.Legacy.Pensum2;\r\n  let loadedPensum = validatePensum(pensum, 'unapec');\r\n\r\n  return loadedPensum;\r\n}\r\n\r\n\r\nexport function createPayload(pensum: ActivePensum.Payload['pensum']): ActivePensum.Payload {\r\n  return {\r\n    pensum, \r\n    matData: processPensumMats(pensum),\r\n    error: null,\r\n    loading: false,\r\n  }\r\n}\r\n\r\nexport function activePensumReducer(\r\n  state: ActivePensum.Payload,\r\n  action: ActivePensum.Action): ActivePensum.Payload {\r\n  switch (action.type) {\r\n    case 'clear':\r\n      // savePensumToLocalStorage(null); // Dont clear save!\r\n      return createPayload(null);\r\n\r\n    case 'set':\r\n      savePensumToLocalStorage(action.payload);\r\n      return createPayload(action.payload);\r\n\r\n    case 'load/fromSave': {\r\n      var pensum = loadPensumFromLocalStorage();\r\n\r\n      // new pensum not found. Attempt to load legacy pensum.\r\n      if (!pensum) {\r\n        pensum = loadLegacyPensumFromLocalStorage();\r\n        savePensumToLocalStorage(pensum);\r\n      }\r\n\r\n      return createPayload(pensum);\r\n    }\r\n\r\n    // Case for 'load' is handled on the Provider, since its async!\r\n\r\n    case 'error':\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'loading':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n\r\n    default:\r\n      console.error('Unknown action \"' + action.type + '\".');\r\n      return state;\r\n  }\r\n}","import { fetchPensumFromCode, PensumFetchError } from \"functions/pensum-fetch\";\r\nimport React, { createContext, memo, useCallback, useEffect, useReducer } from \"react\";\r\nimport { activePensumReducer, createPayload } from \"./reducer\";\r\n\r\n\r\ntype ActivePensumContextProps = {\r\n  state: ActivePensum.Payload,\r\n  dispatch: (action: ActivePensum.Action) => any,\r\n  load: (university: string, code: string) => any,\r\n}\r\n\r\nconst defaultContext: ActivePensumContextProps = {\r\n  state: createPayload(null),\r\n  dispatch: () => {},\r\n  load: () => {},\r\n}\r\n\r\n\r\n/** Context for the current loaded pensum. */\r\nconst ActivePensumContext = createContext(defaultContext);\r\n\r\ntype Props = { children: any};\r\n\r\n// this double naming thing is so the React chrome extension gets the name correctly.\r\nexport const ActivePensumProvider = memo(function ActivePensumProvider({ children }: Props) { \r\n  const [state, dispatch] = useReducer(activePensumReducer, defaultContext.state);\r\n\r\n  // onMount: load saved pensum\r\n  useEffect(() => {\r\n    dispatch({type: 'load/fromSave'});\r\n  }, []);\r\n\r\n  // Custom fn to load a pensum\r\n  const load = useCallback(async (university: string, code: string) => {\r\n    dispatch({ type: 'loading', payload: true });\r\n\r\n    try {\r\n      const pensum = await fetchPensumFromCode(university, code);\r\n      dispatch({ type: 'set', payload: pensum });\r\n    }\r\n    catch (error) {\r\n      let m: any;\r\n\r\n      if (error instanceof SyntaxError)\r\n        m = `JSON could not be parsed for ${university}/${code}.`;\r\n      else if (error instanceof PensumFetchError)\r\n        m = error.message;\r\n      else\r\n        m = error;\r\n\r\n      dispatch({ type: 'error' as 'error', payload: m });\r\n    }\r\n  }, []);\r\n  \r\n  return <ActivePensumContext.Provider value={{ state, dispatch, load }}>\r\n    {children}\r\n  </ActivePensumContext.Provider>\r\n})\r\n\r\n\r\nexport default ActivePensumContext;","import UniversityContext from \"contexts/university-data\";\r\nimport React, { memo, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport Select from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport selectTheme, { optionStyle } from \"lib/DarkMode/select-theme\";\r\nimport { sortByProp } from \"lib/sort-utils\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\nimport { usePreviousValue } from \"beautiful-react-hooks\";\r\n\r\n// type SelectProps = React.ComponentProps<typeof Select>['onChange'];\r\ntype SelectProps = { label: string, value: string } | null;\r\n\r\n/** Creates a formatted label, for use with this component's <Select> labels. */\r\nfunction createLabelString(code: string, name: string) {\r\n  return `[${code}] ${name}`;\r\n}\r\n\r\n\r\n/** Simple form that manages University and Career selection \r\n * (Populates the university/career list from the server.). */\r\nfunction PensumSelector() {\r\n  // Quite awful, just read this context from right to left.\r\n  const { state: {\r\n      pensum:   activePensum,\r\n      error:    error_pensum,\r\n      loading:  loading_pensum,\r\n    },\r\n    load: loadPensum,\r\n  } = useContext(ActivePensumContext);\r\n\r\n  const {\r\n    state:  universityData,\r\n    select: selectUniversity,\r\n  } = useContext(UniversityContext);\r\n\r\n  const {\r\n    universities,\r\n    selected: selected_uni,\r\n    loading:  loading_uni,\r\n    error:    error_uni,\r\n  } = universityData;\r\n\r\n  const [pensumOnInput, setPensumOnInput] = useState(null as SelectProps);\r\n  const previousPensum = usePreviousValue(activePensum);\r\n\r\n\r\n  // ***************************************************************************\r\n  // Carrera select form <options>\r\n  // Maps careers from {code, name} to {value, label}\r\n  // ***************************************************************************\r\n  const careerSelectOptions = useMemo(() => {\r\n    const pensumList = selected_uni?.careers;\r\n    if (!pensumList) return [];\r\n\r\n    const o = pensumList.sort(sortByProp(\"code\"));\r\n\r\n    return o.map(x => ({ value: x.code, label: createLabelString(x.code, x.name) }));\r\n  }, [selected_uni]);\r\n\r\n  \r\n  // ***************************************************************************\r\n  // On pensum change\r\n  //  If the pensum changed, do:\r\n  //  1. Auto select university from the active pensum.\r\n  //  2. Update the selected career <select> value.\r\n  // ***************************************************************************\r\n  useEffect(() => {\r\n    // If pensums are the same, nothing to change!\r\n    if (activePensum === previousPensum) return;\r\n    // If no pensum is selected, there's nothing to \"select\"!\r\n    if (!activePensum) return;\r\n    \r\n    // Select university\r\n    selectUniversity(activePensum.institution);\r\n\r\n    // Try to find existing label\r\n    const careerOption = careerSelectOptions.find(x => x.value === activePensum.code)\r\n      || {\r\n      value: activePensum.code,\r\n      label: createLabelString(activePensum.code, activePensum.career),\r\n    };\r\n    setPensumOnInput(careerOption);\r\n\r\n  }, [activePensum, previousPensum, careerSelectOptions, selectUniversity]);\r\n\r\n\r\n  // ***************************************************************************\r\n  // University select\r\n  // ***************************************************************************\r\n  const universitySelectOptions = useMemo(() => universities.map(\r\n    x => ({ value: x.code, label: createLabelString(x.shortName, x.longName) })),\r\n    [universities]);\r\n\r\n  const selectedUniversity = useMemo(() => (universitySelectOptions.find(\r\n    x => x.value === selected_uni?.code) || null),\r\n    [universitySelectOptions, selected_uni]);\r\n\r\n  // On user change university selection\r\n  const handleUniversityChange = useCallback((newValue: SelectProps) => {\r\n    selectUniversity(newValue?.value || null);\r\n  }, [selectUniversity]);\r\n\r\n\r\n  // ***************************************************************************\r\n  // On submit\r\n  // ***************************************************************************\r\n  const handleSubmit = useCallback((evt?: any) => {\r\n    if (evt) evt.preventDefault();\r\n    const uni = selected_uni?.code || '';\r\n    const code = pensumOnInput?.value || '';\r\n    loadPensum(uni, code);\r\n  }, [loadPensum, selected_uni, pensumOnInput]);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Container>\r\n          {/* zIndex so that <Select> options are not covered by <MatFilter>. */}\r\n        <Form onSubmit={handleSubmit} style={{ zIndex: 2, position: 'relative' }}>\r\n          <SelectUni\r\n            value={selectedUniversity}\r\n            options={universitySelectOptions}\r\n            isLoading={loading_uni}\r\n            onChange={handleUniversityChange} />\r\n\r\n          <SelectCareer\r\n            value={pensumOnInput}\r\n            options={careerSelectOptions}\r\n            isLoading={loading_uni}\r\n            onChange={setPensumOnInput}/>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={!pensumOnInput}\r\n            className=\"w-100\">\r\n            {(!loading_pensum) ?\r\n              'Cargar' :\r\n              <Spinner animation=\"border\" size=\"sm\"><span className=\"visually-hidden\">Cargando...</span></Spinner>}\r\n          </Button>\r\n\r\n          {error_uni && <p style={{ color: 'red' }}>{'Error @ uni: ' + String(error_uni)}</p>}\r\n          {error_pensum && <p style={{ color: 'red' }}>{'Error @ pensum: ' + String(error_pensum)}</p>}\r\n        </Form>\r\n        </Container>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n// ***************************************************************************\r\n// University select\r\n// ***************************************************************************\r\ntype CustomSelectProps = {\r\n  value: SelectProps,\r\n  options: SelectProps[],\r\n  isLoading: boolean,\r\n  onChange: Function,\r\n}\r\n\r\nconst SelectUni = memo(\r\n  function SelectUni({ value, options, isLoading, onChange }: CustomSelectProps) {\r\n    return (<>\r\n      <label className=\"form-label mb-0 small\">Universidad</label>\r\n      <Select\r\n        // defaultValue={universitySelectOptions[0]}\r\n        value={value}\r\n        options={options}\r\n        isSearchable={true}\r\n        isLoading={isLoading}\r\n        onChange={onChange as any} // as any to be able to use selectStyles without TS panicking.\r\n        name=\"university\"\r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n\r\n        placeholder=\"Seleccione una universidad...\"\r\n        styles={optionStyle} />\r\n    </>\r\n    )\r\n  }\r\n);\r\n\r\n\r\n// ***************************************************************************\r\n// Career select\r\n// ***************************************************************************\r\nconst SelectCareer = memo(\r\n  function SelectCareer({ value, options, isLoading, onChange }: CustomSelectProps) {\r\n    return (<>\r\n      <label className=\"form-label mb-0 small\">Carrera</label>\r\n      <CreatableSelect\r\n        isClearable\r\n        value={value}\r\n        options={options}\r\n        isLoading={isLoading}\r\n        loadingMessage={() => <span>Cargando carreras...</span>}\r\n        onChange={onChange as any} // as any to be able to use selectStyles\r\n        className=\"mb-2\"\r\n        theme={selectTheme}\r\n\r\n        placeholder=\"Seleccione o escriba una carrera o su codigo...\"\r\n        styles={optionStyle} />\r\n    </>\r\n    )\r\n  }\r\n);\r\n\r\n\r\n\r\nexport default PensumSelector;","export const matSelectionModeTypes: MatSelection.TrackerModeTypes = [\r\n  'passed',\r\n  'course',\r\n];\r\n\r\n/** Creates a default MatSelection object, with all predefined values. */\r\nconst createDefaultSelection = (): MatSelection.Payload => ({\r\n  mode: 'passed',\r\n  tracker: {\r\n    course: new Set(),\r\n    passed: new Set(),\r\n  },\r\n  currentName: null,\r\n  storage: {},\r\n  filter: new Set(),\r\n});\r\n\r\nexport default createDefaultSelection;","import { objectMap } from \"lib/sort-utils\";\r\nimport { union } from \"lib/set-utils\";\r\nimport createDefaultState, { matSelectionModeTypes } from \"./default\";\r\n\r\nconst TRACKER_STORAGE_KEY = process.env.REACT_APP_PENSUM_STORAGE_TRACKER_KEY || 'PENSUM_TRACKER';\r\nconst LEGACY_TRACKER_STORAGE_KEY = 'saveData';\r\n\r\n// TODO: IMPLEMENT TRACKER INTO THE PENSUM TABLE >:V\r\n// IMPORTANT: Friendly remined that any method that modifies the state must call saveToStorage.\r\nexport function matSelectionReducer(\r\n  state: MatSelection.Payload,\r\n  action: MatSelection.Action): MatSelection.Payload {\r\n\r\n  const cloneTracker = (tracker?: MatSelection.Tracker): MatSelection.Tracker => {\r\n    if (!tracker) tracker = state.tracker;\r\n\r\n    const o: any = {};\r\n    for (const [key, set] of Object.entries(tracker)) {\r\n      o[key] = new Set(set);\r\n    }\r\n    return o;\r\n  }\r\n\r\n  const { mode } = state;\r\n\r\n  switch (action.type) {\r\n\r\n    case 'selectMode': {\r\n      const newMode = action.payload || 'passed';\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        mode: newMode,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n    case 'select': {\r\n      const mat = action.payload;\r\n      const tracker = cloneTracker();\r\n\r\n      if (tracker[mode].has(mat)) {\r\n        tracker[mode].delete(mat);\r\n      } else { // Add to this tracker, and remove from the rest\r\n        tracker[mode].add(mat);\r\n        for (const [key, set] of Object.entries(tracker)) {\r\n          if (key !== mode) set.delete(mat);\r\n        }\r\n      }\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        tracker\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n    case 'selectPeriod': {\r\n      const period = action.payload;\r\n      const tracker = cloneTracker();\r\n\r\n      const matCount = period.length;\r\n      if (matCount === 0) return state;\r\n      \r\n      \r\n      // Check each tracker.\r\n      const sortedTracker = objectMap(tracker, x => [] as string[]);\r\n      const untracked = [] as string[];\r\n\r\n      for (const code of period) {\r\n        let isTracked = false;\r\n\r\n        for (const [key, set] of Object.entries(tracker)) {\r\n          if (set.has(code)) {\r\n            (sortedTracker as any)[key].push(code);\r\n            isTracked = true;\r\n          }\r\n        }\r\n\r\n        if (!isTracked) {\r\n          untracked.push(code);\r\n        }\r\n      }\r\n\r\n\r\n      \r\n      /**\r\n       * Cases:\r\n       * - All on main: remove all;\r\n       * - All unselected: just add all\r\n       * - Some holes: set holes only.\r\n       * - All on both (none unselected): finish adding all (same as prev.)\r\n       */\r\n      const allOnMain = sortedTracker[mode].length === matCount;\r\n      const allUnselected = untracked.length === matCount;\r\n      const noneUnselected = untracked.length === 0;\r\n      const someUnselected = !allUnselected && !noneUnselected;\r\n\r\n      // Case 1: All on main -> remove all\r\n      if (allOnMain) {\r\n        period.forEach(code => tracker[mode].delete(code));\r\n      } \r\n      // Case 3: Add only the unselected. Leave the rest intact.\r\n      else if (someUnselected) {\r\n        untracked.forEach(code => tracker[mode].add(code));\r\n      }\r\n      // Case 2 & 4: Add to this set, don't remove from the other.\r\n      else {\r\n        for (const code of period) {\r\n          for (const [key, set] of Object.entries(tracker)) {\r\n            if (key === mode) set.add(code);\r\n            else set.delete(code);\r\n          }\r\n        }\r\n      }\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        tracker\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n    case 'passOnCourse': {\r\n      if (state.tracker.course.size === 0) return state;\r\n      const tracker = cloneTracker();\r\n\r\n      tracker.passed = union(tracker.passed, tracker.course);\r\n      tracker.course.clear();\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        tracker\r\n      }, { type: 'saveToStorage' });\r\n      \r\n    }\r\n    \r\n\r\n\r\n    // TRACKER ID STUFF\r\n    /** Sets/renames the name of the current trackers. */\r\n    case 'setTrackerID': {\r\n      let newName: string | null;\r\n\r\n      // Simple check if string is valid.\r\n      // If not valid (or empty), just set to null.\r\n      // This is so the user can remove the tracker by just clearing an input form.\r\n      if (typeof action.payload !== 'string') newName = null;      \r\n      else {\r\n        const t = action.payload.trim();\r\n        newName = (t === '') ? null : t;\r\n      }\r\n\r\n      // Check if the newName is a prototype property\r\n      // This is to avoid setting the tracker to something like 'toString'.\r\n      if (typeof newName === 'string'\r\n        && state.storage[newName] // Check if this value exists\r\n        && !state.storage.hasOwnProperty(newName) // Check if this value is from the prototype\r\n      ) {\r\n        throw RangeError(`Given name ${newName} is a prototype property!`);\r\n      }\r\n\r\n      // If there was a previous name, remove it so this action is equivalent to \"renaming\".\r\n      const storage = { ...state.storage };\r\n      if (state.currentName)\r\n        delete storage[state.currentName];\r\n\r\n      // saveToStorage will automatically copy the current tracker to the new tracker name.\r\n      return matSelectionReducer({\r\n        ...state,\r\n        currentName: newName,\r\n        storage,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n    case 'copyTrackerID': {\r\n      const {'old': oldName, 'new': newName} = action.payload;\r\n\r\n      if (oldName === newName) return state;\r\n      \r\n      const storage = { ...state.storage };\r\n      const oldTracker = storage[oldName];\r\n\r\n      // Nothing to copy!\r\n      if (!oldTracker) return state;\r\n      storage[newName] = cloneTracker(oldTracker);\r\n\r\n      // Replace currentName if needed\r\n      // IMPORTANT: Remove this thing if you don't want auto-switching to the new tracker on copy.\r\n      let currentName = state.currentName; \r\n      if (currentName === oldName)\r\n        currentName = newName;\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        storage,\r\n        currentName,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n    case 'deleteTrackerID': {\r\n      const name = action.payload;\r\n\r\n      if (!name || !state.storage[name]) return state;\r\n\r\n      // Do the deletion\r\n      const storage = { ...state.storage };\r\n      delete storage[name];\r\n      \r\n      // Replace currentName if needed\r\n      let currentName = state.currentName;\r\n      if (currentName === name)\r\n        currentName = null;\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        storage,\r\n        currentName,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n    // Filter options\r\n    case 'toggleFilter': {\r\n      const filter = new Set(state.filter);\r\n      const x = action.payload;\r\n      \r\n      if (filter.has(x)) filter.delete(x);\r\n      else (filter.add(x));\r\n\r\n      return matSelectionReducer({\r\n        ...state,\r\n        filter,\r\n      }, { type: 'saveToStorage' });\r\n    }\r\n\r\n\r\n\r\n    // TRACKER SAVE ACTIONS\r\n    case 'saveToStorage': {\r\n      if (state.currentName) {\r\n        state.storage[state.currentName] = state.tracker;\r\n      }\r\n      saveTrackerToLocalStorage(state);\r\n      return state;\r\n    }\r\n\r\n    case 'loadFromStorage': {\r\n      let data = loadTrackerFromLocalStorage();\r\n      \r\n      // Load legacy data if no previous data was found.\r\n      if (!data) {\r\n        data = loadLegacyTrackerFromLocalStorage();\r\n        if (data) saveTrackerToLocalStorage(data);\r\n      }\r\n\r\n      if (!data) return state;\r\n      return data;\r\n    }\r\n\r\n    default:\r\n      console.error('Unknown action \"' + (action as any)?.type + '\".');\r\n      return state;\r\n  }\r\n}\r\n\r\n/** Default tracker */\r\n\r\n\r\n\r\n/** Set of utils to convert the tracker's sets into arrays. \r\n * Used to save the sets to the localStorage. */\r\nconst JSONSetUtils = {\r\n  replacer: function Set_toJSON(key: string, value: any) {\r\n    if (typeof value === 'object' && value instanceof Set) {\r\n      return [...value];\r\n    }\r\n    return value;\r\n  },\r\n\r\n  reviver: function Set_fromJSON(key: string, value: any) {\r\n    if (typeof value === 'object' && Array.isArray(value)) {\r\n      return new Set(value);\r\n    }\r\n    return value\r\n  }\r\n}\r\n\r\nfunction saveTrackerToLocalStorage(trackerState: MatSelection.Payload) {\r\n  const json = JSON.stringify(trackerState, JSONSetUtils.replacer);\r\n  localStorage.setItem(TRACKER_STORAGE_KEY, json);\r\n}\r\n\r\nfunction loadTrackerFromLocalStorage(): MatSelection.Payload | null {\r\n  const str = localStorage.getItem(TRACKER_STORAGE_KEY);\r\n  if (!str) return null;\r\n\r\n  const data: MatSelection.Payload = JSON.parse(str, JSONSetUtils.reviver);\r\n\r\n  // Simple check for minimun structure\r\n  if (!( // Negate to make it a type guard\r\n    data \r\n    && data.tracker \r\n    && typeof data.tracker.passed  === 'object' \r\n    && data.tracker.passed instanceof Set\r\n    && data.storage\r\n    )) {\r\n    return null;\r\n  }\r\n\r\n  // Return verified result\r\n  return createPayloadWithDefaults(data);\r\n}\r\n\r\n/** Tries to load from the old saves from the original pensumExtractor. */\r\nfunction loadLegacyTrackerFromLocalStorage(): MatSelection.Payload | null {\r\n  type OldPayload = {\r\n    currentCodeAtInputForm: string,\r\n    filterMode: {\r\n      pending: boolean,\r\n      onCourse: boolean,\r\n      passed: boolean,\r\n    },\r\n    saveVer: number,\r\n    selectMode: number,\r\n    userData: {\r\n      onCourse: string[],\r\n      passed: string[],\r\n    },\r\n  }\r\n\r\n  const str = localStorage.getItem(LEGACY_TRACKER_STORAGE_KEY);\r\n  if (!str) return null;\r\n\r\n  const olddata: OldPayload = JSON.parse(str);\r\n\r\n  // Simple check for minimun structure\r\n  if (!(\r\n    typeof olddata === 'object'\r\n    && olddata.saveVer === 6\r\n  ))\r\n    return null;\r\n\r\n  // Generate new object, copying old info\r\n  const data: Partial<MatSelection.Payload> = {};\r\n\r\n  // Filter\r\n  if (olddata.filterMode) {\r\n    const filter = new Set<any>();\r\n    const pushIfFalse = (x: any, val: any) => {\r\n      if (x === false)\r\n        filter.add(val);\r\n    }\r\n    data.filter = filter;\r\n    \r\n    pushIfFalse(olddata.filterMode.pending, null);\r\n    pushIfFalse(olddata.filterMode.onCourse, 'course');\r\n    pushIfFalse(olddata.filterMode.passed, 'passed');\r\n  }\r\n\r\n  // Select mode (cursor interaction mode)\r\n  if (olddata.selectMode === 0) data.mode = 'passed';\r\n  else if (olddata.selectMode === 1) data.mode = 'course';\r\n\r\n  // Saved trackers\r\n  if (olddata.userData) {\r\n    data.tracker = {\r\n      course: new Set(),\r\n      passed: new Set(),\r\n    };\r\n\r\n    const addIfTracker = (arr: any, targetSet: Set<string>) => {\r\n      if (Array.isArray(arr) && arr.every(x => typeof x === 'string')) {\r\n        arr.forEach(x => targetSet.add(x))\r\n      }\r\n    } \r\n\r\n    addIfTracker(olddata.userData.passed, data.tracker.passed);\r\n    addIfTracker(olddata.userData.onCourse, data.tracker.course);\r\n  }\r\n \r\n  // Return verified result\r\n  return createPayloadWithDefaults(data);\r\n}\r\n\r\n/** Validates the payload from the given, All props are verifier to be valid. */\r\nfunction createPayloadWithDefaults(data: any): MatSelection.Payload {\r\n  // Correct minimal structure\r\n  /* 1. tracker */\r\n  /* 2. mode. */\r\n  /* 3. tracker name on storage. */\r\n  /* 4. storage for all the saved trackers. */\r\n  /* 5. filter. */\r\n\r\n  const base = createDefaultState();\r\n\r\n  const tracker = {\r\n    ...base.tracker,\r\n    ...data.tracker,\r\n  };\r\n\r\n  const mode = (matSelectionModeTypes.includes(data.mode)) ? data.mode : base.mode;\r\n\r\n  const currentName =\r\n    (typeof data.currentName === 'string') ? data.currentName : null;\r\n\r\n  let storage: MatSelection.Payload['storage'] = base.storage;\r\n  if (typeof data.storage === 'object') {\r\n    storage = Object.fromEntries(Object.entries(data.storage)\r\n      .filter(([key, val]) =>\r\n        typeof key === 'string' // Key is a string\r\n\r\n        // If the key is from the prototype (eg. 'toString', don't include it.)\r\n        && storage[key]\r\n        && !storage.hasOwnProperty(key)\r\n\r\n        // Verify value is a Set of strings\r\n        && val instanceof Set\r\n        && [...val].every(code => typeof code === 'string')\r\n      ) as Array<[string, MatSelection.Tracker]>\r\n    )\r\n  }\r\n\r\n  const filter: MatSelection.Payload['filter'] = \r\n    (data.filter instanceof Set) ? data.filter : base.filter;\r\n\r\n  return {\r\n    tracker,\r\n    mode,\r\n    currentName,\r\n    storage,\r\n    filter,\r\n  };\r\n}","import { createContext, memo, useReducer, useEffect } from \"react\";\r\nimport { matSelectionReducer } from \"./reducer\";\r\nimport createDefaultState from \"./default\";\r\n\r\ntype MatSelectionContextProps = {\r\n  state: MatSelection.Payload,\r\n  dispatch: (action: MatSelection.Action) => any,\r\n}\r\n\r\nconst defaultContext: MatSelectionContextProps = ({\r\n  state: createDefaultState(),\r\n  dispatch: () => {},\r\n});\r\n\r\n/** Collection of helper functions to use for mat selection. */\r\nexport const matSelectHelpers = {\r\n  /** \r\n   * Get the current tracker of a mat.\r\n   * @example\r\n   * getTracker(tracker, 'MAT101'); // returns 'passed'\r\n   * getTracker(tracker, 'MAT102'); // returns 'course'\r\n   * getTracker(tracker, 'MAT103'); // returns null\r\n  */\r\n  getTracker(tracker: MatSelection.Payload['tracker'], code: string) {\r\n    for (const [key, set] of Object.entries(tracker)) {\r\n      if (set.has(code)) return key as MatSelection.TrackerMode;\r\n    }\r\n    return null;\r\n  },\r\n  /** \r\n   * Gets the common tracker for all the given mats. If all the mats don't share a tracker, return null.\r\n  */\r\n  getCommonTracker(tracker: MatSelection.Payload['tracker'], periodStr: string[]) {\r\n    for (const [key, set] of Object.entries(tracker)) {\r\n      if (periodStr.every(code => set.has(code)))\r\n        return key as MatSelection.TrackerMode;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport const MatSelectionDispatchContext = createContext(defaultContext.dispatch);\r\nexport const MatSelectionModeContext = createContext(defaultContext.state.mode);\r\nexport const MatSelectionTrackerContext = createContext(defaultContext.state.tracker);\r\nexport const MatSelectionTrackerNameContext = createContext(defaultContext.state.currentName);\r\nexport const MatSelectionTrackerStorageContext = createContext(defaultContext.state.storage);\r\nexport const MatSelectionFilterContext = createContext(defaultContext.state.filter);\r\n\r\ntype Props = { children: any };\r\n\r\nexport const MatSelectionProvider = memo(function MatSelectionProvider({ children }: Props) {\r\n  const [state, dispatch] = useReducer(matSelectionReducer, defaultContext.state);\r\n\r\n  useEffect(() => {\r\n    // Load data from cookies\r\n    dispatch({ type: 'loadFromStorage' });\r\n\r\n    (window as any)['x'] = dispatch;\r\n  }, []);\r\n\r\n  return <MatSelectionDispatchContext.Provider value={dispatch}>\r\n    <MatSelectionModeContext.Provider value={state.mode}>\r\n      <MatSelectionTrackerContext.Provider value={state.tracker}>\r\n        <MatSelectionTrackerNameContext.Provider value={state.currentName}>\r\n          <MatSelectionTrackerStorageContext.Provider value={state.storage}>\r\n            <MatSelectionFilterContext.Provider value={state.filter}>\r\n              {children}\r\n            </MatSelectionFilterContext.Provider>\r\n          </MatSelectionTrackerStorageContext.Provider>\r\n        </MatSelectionTrackerNameContext.Provider>\r\n      </MatSelectionTrackerContext.Provider>\r\n    </MatSelectionModeContext.Provider>\r\n  </MatSelectionDispatchContext.Provider>\r\n})","import ActivePensumContext from 'contexts/active-pensum';\r\nimport { matSelectHelpers, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\nimport { classnames } from 'lib/format-utils';\r\nimport { useContext } from 'react';\r\nimport './mat-code-colors.scss';\r\nimport './mat-code.scss';\r\n\r\n\r\ntype Props = React.ComponentPropsWithRef<'span'> & {\r\n  data: Pensum.Requirement,\r\n  type?: 'prereq' | 'coreq',\r\n  children?: React.ReactNode,\r\n  className?: string,\r\n  onClick?: React.MouseEventHandler<HTMLSpanElement>\r\n};\r\n\r\n/** Single matcode. */\r\nfunction MatCode({ data, type = \"prereq\", children, onClick, className: ogClass, ...rest }: Props) {\r\n  const { state: { matData } } = useContext(ActivePensumContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  let className: any[] = ['mat-code', type];\r\n\r\n  if (ogClass) className.push(...ogClass.split(' '));\r\n\r\n  let content;\r\n  if (typeof data === 'string') {\r\n    content = children || data;\r\n    className.push('code');\r\n\r\n    if (onClick)\r\n      className.push('click-target');\r\n\r\n    if (matData.looseUnhandled.has(data)) \r\n      className.push('missing');\r\n\r\n    className.push(matSelectHelpers.getTracker(tracker, data) || 'default');\r\n\r\n  } else {\r\n    content = children || data.text;\r\n    className.push('req-text');\r\n  }\r\n\r\n  return (<span className={classnames(className)} onClick={onClick} {...rest}>{content}</span>)\r\n}\r\n\r\n/** Same as mat code, but formatted as `[CODE] Name` */\r\nexport function LongMatCode({children, ...rest}: Props) {\r\n  const { state: { matData } } = useContext(ActivePensumContext);\r\n\r\n  // Override\r\n  if (children) return <MatCode {...rest}>{children}</MatCode>\r\n\r\n  let name;\r\n  if (typeof rest.data === 'string') {\r\n    name = matData.codeMap.get(rest.data)?.name;\r\n  }\r\n\r\n  if (name) {\r\n    return <MatCode {...rest}>\r\n      {`[${rest.data}] ${name}`}\r\n    </MatCode>\r\n  } else {\r\n    return <MatCode {...rest}/>\r\n  }\r\n}\r\n\r\nexport default MatCode;","/**\r\n * This context is used to store the react nodes of each pensum row.\r\n * Used to scroll a specific mat into view.\r\n * \r\n * This thing probably is a memory leaks when there's a lot of pensum changes, \r\n * since new mats will be added while keeping the old mats empty refs.\r\n */\r\n\r\nimport React, { createContext, memo, MutableRefObject, useCallback, useRef } from \"react\"\r\n\r\ntype mapArg = React.RefObject<HTMLElement>;\r\n\r\ntype PensumRowNodesContextProps = {\r\n  /** Map that contains pensum row references.  */\r\n  map: MutableRefObject<Map<string, mapArg>>,\r\n  /** Scrolls to the pensum row of the given mat code. */\r\n  scrollToRow: (code: string) => void,\r\n  /** Updates the row reference on map. */\r\n  updateNode: (code: string, node: mapArg) => void,\r\n}\r\n\r\nconst defaultContext: PensumRowNodesContextProps = {\r\n  map: { current: new Map() },\r\n  scrollToRow: () => {},\r\n  updateNode: () => {},\r\n}\r\n\r\nconst PensumRowNodesContext = createContext(defaultContext);\r\n\r\ntype Props = { children: any };\r\n\r\nexport const PensumRowNodesProvider = memo(function PensumRowNodesProvider({children}: Props) {\r\n  const map = useRef(new Map());\r\n\r\n  const updateNode: PensumRowNodesContextProps['updateNode'] = useCallback((code, node) => {\r\n    map.current.set(code, node);\r\n  }, []);\r\n\r\n  const scrollToRow: PensumRowNodesContextProps['scrollToRow'] = useCallback((code) => {\r\n    setTimeout(() => {\r\n      // Without this timeout, scrollIntoView won't work on navigation URL changes.\r\n      let n = map.current.get(code);\r\n      if (n) {\r\n        n.current?.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        n.current?.classList.remove('highlight-row');\r\n        n.current?.classList.add('highlight-row');\r\n        setTimeout(() => n?.current?.classList.remove('highlight-row'), 3e3);\r\n      }\r\n    }, 0);\r\n  }, []);\r\n\r\n  return <PensumRowNodesContext.Provider value={{map, scrollToRow, updateNode}}>\r\n    {children}\r\n  </PensumRowNodesContext.Provider>\r\n});\r\n\r\nexport default PensumRowNodesContext;","import { useCallback, useContext, useEffect, useRef } from \"react\";\r\nimport { matSelectHelpers, MatSelectionDispatchContext, MatSelectionModeContext, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\nimport { classnames } from 'lib/format-utils';\r\n\r\nimport MatCode from '../Mat/MatCode';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from \"react-router-dom\";\r\nimport PensumRowNodesContext from \"contexts/pensum-row-nodes\";\r\n\r\ntype MatRowProps = {\r\n  mat: Pensum.Mat,\r\n  idx: number\r\n};\r\n\r\nconst trackerCheckmarks = new Map([\r\n  ['passed', '✅'],\r\n  ['course', '🔳'],\r\n  [null, '⬜'],\r\n]);\r\n\r\n/** Displays a single Mat as from the pensum a table row. */\r\nfunction MatRow({ mat, idx }: MatRowProps) {\r\n  const rowRef = useRef<HTMLDivElement>(null);\r\n  const clickableRef = useRef<HTMLDivElement>(null);\r\n\r\n  const { updateNode } = useContext(PensumRowNodesContext);\r\n\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  const trackerMode = useContext(MatSelectionModeContext);\r\n\r\n  const currentTracker = matSelectHelpers.getTracker(tracker, mat.code);\r\n  \r\n  // Classes. Any falsy values will be discarded\r\n  const cl = [\r\n    \"row-mat\",\r\n    (idx & 1) && 'even',  // Mark the mat as even, if the index is odd????? lol.\r\n    currentTracker,       // Color according to the tracker.\r\n\r\n    // On hover, will clicking this set the tracker or not?\r\n    'table-hover-' + (currentTracker === trackerMode ? 'default' : trackerMode),\r\n  ];\r\n\r\n  const reqs = [\r\n    ...mat.prereq.map((x, i) => <MatCode key={i       } data={x} type='prereq'/>),\r\n    ...mat.coreq.map( (x, i) => <MatCode key={i + 1000} data={x} type='coreq' />),\r\n  ] as JSX.Element[];\r\n\r\n  // On hover INSIDE THE MAT CHECKBOX, change the background of the ENTIRE ROW.\r\n  useEffect(() => {\r\n    const cbMouseEnter = () => {\r\n      rowRef.current?.classList.add('track-hover');\r\n    }\r\n    const cbMouseLeave = () => {\r\n      rowRef.current?.classList.remove('track-hover');\r\n    }\r\n\r\n    const clickable = clickableRef.current;\r\n\r\n    if (!clickable) return;\r\n\r\n    clickable.addEventListener('mouseenter', cbMouseEnter);\r\n    clickable.addEventListener('mouseleave', cbMouseLeave);\r\n    return () => {\r\n      clickable.removeEventListener('mouseenter', cbMouseEnter);\r\n      clickable.removeEventListener('mouseleave', cbMouseLeave);\r\n    }\r\n  }, [rowRef, clickableRef]);\r\n\r\n  useEffect(() => {\r\n    updateNode(mat.code, rowRef);\r\n    return () => updateNode(mat.code, rowRef);\r\n  }, [mat.code, updateNode, rowRef]);\r\n\r\n  const onClick = useCallback((evt: any) => {\r\n    dispatch({ type: 'select', payload: mat.code });\r\n  }, [mat.code, dispatch])\r\n\r\n  return <Row\r\n    ref={rowRef}\r\n    className={classnames(cl)}\r\n    data-mat={mat.code}>\r\n    <Col ref={clickableRef} onClick={onClick} className=\"row-check click-target\">\r\n      {trackerCheckmarks.get(currentTracker) || '⬜x'}\r\n    </Col>\r\n    <Col className=\"row-code code\"><Link to={`/mat/${mat.code}`}>{mat.code}</Link></Col>\r\n    <Col>\r\n      <Row className=\"h-100 align-items-center\">\r\n        <Col className=\"row-name\">{mat.name}</Col>\r\n        <Col className=\"row-cr\">{mat.cr}</Col>\r\n        <Col className=\"row-req\">{reqs}</Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\nexport default MatRow;","import { useCallback, useContext } from \"react\";\r\nimport { matSelectHelpers, MatSelectionDispatchContext, MatSelectionFilterContext, MatSelectionModeContext, MatSelectionTrackerContext } from 'contexts/mat-selection';\r\nimport { classnames } from 'lib/format-utils';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport MatRow from \"./MatRow\";\r\n\r\ntype PeriodProps = {\r\n  period: Pensum.Mat[],\r\n  periodNum: number,\r\n  cumlen: number\r\n};\r\n\r\n/** Displays a single period from the pensum as table rows. */\r\nexport const Period = ({ period, periodNum, cumlen = 0 }: PeriodProps) => {\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n  const trackerMode = useContext(MatSelectionModeContext);\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  const filter = useContext(MatSelectionFilterContext);\r\n\r\n  const isAllMatsOnSameTracker = period.every(mat => tracker[trackerMode]?.has(mat.code));\r\n  const commonTracker = matSelectHelpers.getCommonTracker(tracker, period.map(mat => mat.code));\r\n\r\n  // css classes\r\n  const cl = [\r\n    'row-period-num', \r\n    'click-target',\r\n\r\n    // Hover color according to tracker mode.\r\n    'table-hover-' + ((isAllMatsOnSameTracker) ? 'default' : trackerMode),\r\n\r\n    // Common tracker sets period color only if all mats have a tracker in common.\r\n    commonTracker,\r\n  ];\r\n\r\n\r\n  const filteredPeriod = period.filter(mat => {\r\n    const tr = matSelectHelpers.getTracker(tracker, mat.code);\r\n    return !filter.has(tr);\r\n  });\r\n\r\n\r\n  const onClick = useCallback((evt: any) => {\r\n    dispatch({ type: 'selectPeriod', payload: filteredPeriod.map(x => x.code) });\r\n  }, [filteredPeriod, dispatch]);\r\n\r\n  if (filteredPeriod.length === 0) return null;\r\n\r\n  const matrows = filteredPeriod.map((mat, i) =>\r\n    <MatRow\r\n      key={mat.code}\r\n      mat={mat}\r\n      idx={i + cumlen} />\r\n  )\r\n\r\n  return <Row className=\"row-period\">\r\n    <Col\r\n      className={classnames(cl)}\r\n      onClick={onClick}\r\n      data-value={periodNum}>\r\n      {periodNum}\r\n    </Col>\r\n    <Col className=\"row-mat-group\">\r\n      {matrows}\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\nexport default Period;","import './table.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { memo } from 'react';\r\nimport Period from './Period';\r\n\r\n/** Headers for the pensum table. */\r\nexport const TableHead = memo((props: { periodNumStr?: string | null }) => {\r\n  // Memo makes this thing pure, and never update >:D (if props don't change).\r\n  \r\n  const processedPeriod = props.periodNumStr || '';\r\n  \r\n  return <Row className=\"pensum-header row-period\">\r\n    <Col className=\"row-period-num\">{processedPeriod}</Col>\r\n    <Col className=\"row-mat-group\">\r\n      <Row className=\"row-mat\">\r\n        <Col className=\"row-check\"></Col>\r\n        <Col className=\"row-code\">Código</Col>\r\n        <Col>\r\n          <Row>\r\n            <Col className=\"row-name\">Asignatura</Col>\r\n            <Col className=\"row-cr\">Cr.</Col>\r\n            <Col className=\"row-prereq\">Requisitos</Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  </Row>\r\n})\r\n\r\n\r\ntype PensumTableProps = {\r\n  periods: Pensum.Pensum['periods'],\r\n  periodIndexStart?: number,\r\n  periodType?: Pensum.Pensum['periodType'] | null\r\n}\r\n\r\nconst defaultPeriodType = {\r\n  name: 'Periodo',\r\n  acronym: 'Per',\r\n  two: 'Pr'\r\n};\r\n\r\n/** Displays a pensum. */\r\nfunction PensumTable({ periods, periodIndexStart = 1, periodType = defaultPeriodType }: PensumTableProps) {\r\n  \r\n  // https://stackoverflow.com/a/55261098\r\n  // CumLen is passed down to calculate if a row is even or odd.\r\n  const cumulativeSum = (sum: number) => (value: number) => sum += value;\r\n  const cumlen = periods.map(x => x.length).map(cumulativeSum(0))\r\n\r\n  const periodElems = periods.map((period, key) =>\r\n    <Period\r\n      key={key}\r\n      period={period}\r\n      periodNum={key + periodIndexStart}\r\n      cumlen={cumlen[key - 1]} />\r\n  );\r\n  \r\n  return <Container className=\"pensum-table\">\r\n    <TableHead periodNumStr={periodType?.two} />\r\n    <div \r\n    className=\"pensum-table-body\"\r\n    data-empty-text=\"No hay materias que cumplan con el filtro actual.\">\r\n      {periodElems}\r\n    </div>\r\n  </Container>\r\n}\r\n\r\nexport default PensumTable;","import PensumTable from \"./Table\";\r\n\r\nexport default PensumTable;","import Card from 'react-bootstrap/Card';\r\nimport PensumTable from \"./Table\";\r\n\r\ntype Props = {\r\n  pensum: Pensum.Pensum\r\n}\r\n\r\nfunction PensumDisplay({ pensum }: Props) {\r\n  const { career, periods, loose, periodType } = pensum;\r\n\r\n  return <>\r\n    <Card className=\"pensum-table-container\">\r\n      <Card.Header>\r\n        <Card.Title>{career}</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <PensumTable periods={periods} periodType={periodType} />\r\n      </Card.Body>\r\n    </Card>\r\n\r\n    {loose && (loose.length > 0) &&\r\n      <Card className=\"pensum-table-container\">\r\n        <Card.Header>\r\n          <Card.Title>Demás materias</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <PensumTable periods={[loose]} periodType={null} periodIndexStart={0} />\r\n        </Card.Body>\r\n      </Card>\r\n    }\r\n\r\n  </>\r\n}\r\n\r\nexport default PensumDisplay;","import Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { MatSelectionDispatchContext, MatSelectionModeContext } from \"contexts/mat-selection\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport { classnames } from \"lib/format-utils\";\r\nimport \"./filter.scss\";\r\n\r\ntype Props = {\r\n  entries: [MatSelection.TrackerMode, string][]\r\n}\r\n\r\nexport function FilterModeSelector({ entries }: Props) {\r\n  const mode = useContext(MatSelectionModeContext);\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n\r\n  const Btns = useCallback(() => {\r\n    const elems = [];\r\n\r\n    for (const [key, val] of entries) {\r\n      elems.push(<Button\r\n        key={key}\r\n        className={classnames([\r\n          key,\r\n          (mode === key) ? 'active' : 'not-active',\r\n        ])}\r\n        onClick={() => dispatch({ type: 'selectMode', payload: key as any })}>\r\n        {val}\r\n      </Button>)\r\n    }\r\n\r\n    return <>{elems}</>;\r\n  }, [entries, mode, dispatch]);\r\n\r\n  return <ButtonGroup className=\"filter-selector filter-mode\">\r\n    <Btns />\r\n  </ButtonGroup>\r\n}\r\n\r\n\r\nexport default FilterModeSelector;","import { MatSelectionDispatchContext, MatSelectionFilterContext } from \"contexts/mat-selection\";\r\nimport { classnames } from \"lib/format-utils\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport \"./filter.scss\";\r\n\r\n\r\ntype Props = {\r\n  entries: [MatSelection.TrackerMode | null, string][]\r\n}\r\n\r\nexport function FilterVisibilitySelector({ entries }: Props) {\r\n  const filter = useContext(MatSelectionFilterContext);\r\n  const dispatch = useContext(MatSelectionDispatchContext);\r\n\r\n  const Btns = useCallback(() => {\r\n\r\n    const elems = [];\r\n\r\n    for (const [key, val] of entries) {\r\n      elems.push(<Button\r\n        key={key}\r\n        className={classnames([\r\n          key || 'default',\r\n          (!filter.has(key)) ? 'active' : 'not-active',\r\n        ])}\r\n        onClick={() => dispatch({ type: 'toggleFilter', payload: key })}>\r\n        {val}\r\n      </Button>)\r\n    }\r\n\r\n    return <>{elems}</>;\r\n  }, [entries, filter, dispatch]);\r\n\r\n  return <ButtonGroup className=\"filter-selector filter-filter\">\r\n    <Btns />\r\n  </ButtonGroup>\r\n}\r\n\r\n\r\n\r\nexport default FilterVisibilitySelector;","import { memo, useContext } from \"react\";\r\nimport { FilterModeSelector, FilterVisibilitySelector } from \"components/Pensum/Filter\";\r\nimport { Card, Col, Container, Row, Button, ButtonGroup } from \"react-bootstrap\";\r\nimport { MatSelectionDispatchContext } from \"contexts/mat-selection\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst PensumActions = memo(() => {\r\n  const modeEntries: React.ComponentProps<typeof FilterModeSelector>['entries'] = [\r\n    ['passed', 'Aprobar'],\r\n    ['course', 'Cursar'],\r\n  ];\r\n\r\n  const visibleEntries: React.ComponentProps<typeof FilterVisibilitySelector>['entries'] = [\r\n    [null, 'Pendientes'],\r\n    ['course', 'Cursando'],\r\n    ['passed', 'Aprobadas'],\r\n  ];\r\n\r\n  return <Card >\r\n    <Card.Body>\r\n      <Container className=\"d-flex flex-column gap-3\">\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row><span className=\"text-center\">Acciones:</span></Row>\r\n            <Row><ActionButtons /></Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n\r\n          <Col>\r\n            <Row><span className=\"text-center\">Modo de selección:</span></Row>\r\n            <Row><FilterModeSelector entries={modeEntries} /></Row>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Row><span className=\"text-center\">Mostrar solo:</span></Row>\r\n            <Row><FilterVisibilitySelector entries={visibleEntries} /></Row>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    </Card.Body>\r\n  </Card>\r\n})\r\n\r\n\r\nconst ActionButtons = () => {\r\n  const matSelectDispatch = useContext(MatSelectionDispatchContext)\r\n  const navigate = useNavigate()\r\n\r\n  const btnVariant = \"outline-secondary\"\r\n  \r\n  return <ButtonGroup vertical>\r\n    <Button\r\n      variant={btnVariant}\r\n      onClick={() => matSelectDispatch({ type: 'passOnCourse' })}>\r\n      Aprobar materias en curso\r\n    </Button>\r\n    \r\n    <Button\r\n      variant={btnVariant}\r\n      onClick={() => navigate('calcular-indice')}>\r\n      Calcular indice\r\n    </Button>\r\n  </ButtonGroup>\r\n}\r\n\r\nexport default PensumActions;","import Card from \"react-bootstrap/Card\";\r\n\r\ntype Props = {\r\n  info: Pensum.Pensum['info']\r\n};\r\n\r\nexport default function PensumInfo({ info }: Props) {\r\n  return <Card>\r\n    <Card.Header className=\"text-center pt-3\">\r\n      <h5>Detalles de la carrera</h5>\r\n    </Card.Header>\r\n    <Card.Body className=\"m-auto\">\r\n      <ul>\r\n        {info.map((line, idx) => <li key={idx}><InfoLine info={line} /></li>)}\r\n      </ul>\r\n    </Card.Body>\r\n  </Card>;\r\n}\r\n\r\nfunction InfoLine({ info }: { info: string }) {\r\n  const parsed = parseInfoLine(info);\r\n  switch (parsed.type) {\r\n    case 'double': {\r\n      const [key, val] = parsed.data;\r\n      return <span><strong>{key}: </strong>{val}</span>;\r\n    }\r\n    \r\n    case 'double_sublist': {\r\n      const [key, val] = parsed.data;\r\n      return <>\r\n        <strong>{key}: </strong>\r\n        <ul>\r\n          {val.map((str, idx) => <li key={idx}>{str}</li>)}\r\n        </ul>\r\n      </>\r\n    }\r\n\r\n    case 'simple':\r\n    default: \r\n      return <span>{parsed.data}</span>\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Separates the info in 3 ways:\r\n *  1. Text with no colon: \r\n *  ```\r\n * \"Informatica\" -> {type: \"simple\", data: \"Informatica\"}\r\n * ```\r\n * \r\n * 2. Text with single colon (usually a equivalence?:\r\n * ```\r\n * \"Materia: Informatica\" -> {\r\n *    type: \"double\", \r\n *    data: [\"Materia\", \"Informatica\"]\r\n * }\r\n * ```\r\n * \r\n * 3. Text with \r\n * ```\r\n * \"Materias: Informatica. Mecatronica.\" -> {\r\n *    type: \"double\", \r\n *    data: [\"Materias\", [\"Informatica\", \"Mecatronica\"]]\r\n * }\r\n * ```\r\n */\r\nfunction parseInfoLine(str: string) {\r\n  let splitOnFirstColon = [\r\n    str.substring(0, str.indexOf(': ')),\r\n    str.substring(str.indexOf(': ') + 2),\r\n  ];\r\n\r\n  // No colon == just plain text. (x)\r\n  if (splitOnFirstColon[0] === '') \r\n    return { type: 'simple', data: str } as { type: 'simple', data: string };\r\n\r\n  let splitOnDots = splitOnFirstColon[1].split('. ');\r\n\r\n  // Colon + Single period == Equivalence (x: y)\r\n  if (splitOnDots.length === 1)\r\n    return { type: 'double', data: splitOnFirstColon } as { type: 'double', data: [string, string] };\r\n\r\n  // Multiple list: (x: y. z. w. a.)\r\n  return {\r\n    type: 'double_sublist',\r\n    data: [splitOnFirstColon[0], splitOnDots],\r\n  } as { type: 'double_sublist', data: [string, string[]] };\r\n}","import ActivePensumContext from \"contexts/active-pensum\";\r\nimport { MatSelectionTrackerContext } from \"contexts/mat-selection\";\r\nimport { useContext } from \"react\";\r\nimport \"./progress.scss\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function PensumProgress() {\r\n  const data = useGradeProgress();\r\n  \r\n  const percentPassed = 100 * data.creds.passed / data.creds.total;\r\n  const percentCourse = 100 * data.creds.course / data.creds.total;\r\n\r\n  return <Card className=\"pensum-progress-container\">\r\n\r\n    <Card.Header className=\"text-center pt-3\">\r\n      <ProgressBar>\r\n        <ProgressBar\r\n          striped\r\n          now={percentPassed}\r\n          className=\"passed\"\r\n          style={{ backgroundColor: 'var(--mat-bg)' }} />\r\n        <ProgressBar\r\n          striped\r\n          now={percentCourse}\r\n          className=\"course\"\r\n          style={{ backgroundColor: 'var(--mat-bg)' }} />\r\n      </ProgressBar>\r\n      <Card.Title>Progreso en la carrera</Card.Title>\r\n    </Card.Header>\r\n\r\n    <Card.Body>\r\n\r\n      <Row>\r\n        <Col className=\"text-sm-end fw-bold\">Materias: </Col>\r\n        <Col>\r\n          <Percent \r\n            n={data.mats.passed} \r\n            total={data.mats.total}\r\n            extra={data.mats.course}\r\n            cl=\"course\" />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col className=\"text-sm-end fw-bold\">Creditos: </Col>\r\n        <Col>\r\n        <Percent \r\n            n={data.creds.passed} \r\n            total={data.creds.total}\r\n            extra={data.creds.course}\r\n            cl=\"course\" />\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n\r\n} \r\n\r\ntype PercentProps = {\r\n  n: number,\r\n  total: number,\r\n  extra?: number,\r\n  cl?: string\r\n}\r\n\r\nfunction Percent({ n, total, extra = 0, cl = '' }: PercentProps) {\r\n  const pBase =  (total !== 0) ? (100 * n     / total).toFixed(2) : '100';\r\n  const pExtra = (total !== 0) ? (100 * extra / total).toFixed(2) : '100';\r\n\r\n  const extraText = (extra > 0) ? `en curso: ${extra} (+${pExtra}%)` : '';\r\n\r\n  return <div className=\"pensum-progress-value\">\r\n    <div>{n}/{total} ({pBase}%)</div>\r\n    <div className={'extra ' + cl}>{extraText}</div>\r\n  </div>\r\n}\r\n\r\n/** Analizes pensum progress */\r\nfunction useGradeProgress() {\r\n  const tracker = useContext(MatSelectionTrackerContext);\r\n  const { state } = useContext(ActivePensumContext);\r\n\r\n  const matList = state.matData.list;\r\n\r\n  const out = {\r\n      creds: {\r\n        total: 0,\r\n        passed: 0,\r\n        course: 0,\r\n      },\r\n      mats: {\r\n        total: matList.length,\r\n        passed: 0,\r\n        course: 0,\r\n      }\r\n  };\r\n\r\n  for (let i = 0; i < matList.length; i++) {\r\n    const mat = matList[i];\r\n    out.creds.total += mat.cr;\r\n\r\n    if (tracker.passed.has(mat.code)) {\r\n      out.creds.passed += mat.cr;\r\n      out.mats.passed++;\r\n    }\r\n\r\n    else if (tracker.course.has(mat.code)) {\r\n      out.creds.course += mat.cr;\r\n      out.mats.course++;\r\n    }\r\n  }\r\n\r\n  return out;\r\n}","import { useContext } from \"react\";\r\nimport PensumSelector from \"./PensumSelector\";\r\nimport PensumDisplay from \"components/Pensum/PensumDisplay\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\nimport PensumActions from \"./Actions\";\r\nimport PensumInfo from \"./PensumInfo\";\r\nimport PensumProgress from \"./PensumProgress\";\r\n\r\n\r\ntype Props = any;\r\n\r\n/** Main tab for the Pensum app. */\r\nfunction PensumExtractor(props: Props) {\r\n  const { state: { pensum } } = useContext(ActivePensumContext);\r\n\r\n  return (<>\r\n    <PensumSelector />\r\n\r\n    {pensum && <>\r\n      <PensumInfo info={pensum.info} />\r\n      <PensumProgress />\r\n      <PensumActions />\r\n      <PensumDisplay pensum={pensum} />\r\n    </>\r\n    }\r\n  </>)\r\n} \r\n\r\nexport default PensumExtractor;","import MatInfo from \"./MatInfo\";\r\n\r\nexport default MatInfo;","import Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function MatInfo() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleHide = () => {\r\n    navigate(-1);\r\n  };\r\n  const handleClose = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return <Modal show={true} onHide={handleHide}>\r\n    <Outlet />\r\n\r\n    <Modal.Footer>\r\n      <Button variant=\"primary\" onClick={handleClose}>\r\n        Cerrar\r\n      </Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n}","\r\nimport { useParams, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport ActivePensumContext from \"contexts/active-pensum\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport MatCode, { LongMatCode } from \"components/Pensum/Mat/MatCode\";\r\nimport PensumRowNodesContext from \"contexts/pensum-row-nodes\";\r\n\r\n\r\nexport default function Details() {\r\n  const { state: { matData, pensum } } = useContext(ActivePensumContext);\r\n  const { map: rowNodeMap, scrollToRow } = useContext(PensumRowNodesContext);\r\n\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const code = params.code;\r\n\r\n  if (!code) return <Navigate to=\"/mat\" />;\r\n\r\n  const mat = matData.codeMap.get(code);\r\n  if (!mat) return <Invalid code={code} />;\r\n\r\n  const title = <><MatCode data={mat.code} /> <span>{mat.name}</span></>;\r\n\r\n  const periodName = (pensum?.periodType.name || 'Periodo') + ':';\r\n  const generalInfo = <Container>\r\n    <Row>\r\n      <Col className=\"text-end\">Código:</Col>\r\n      <Col>{mat.code}</Col>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"text-end\">Créditos:</Col>\r\n      <Col>{mat.cr}</Col>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"text-end\">{periodName}</Col>\r\n      <Col>{matData.periodMap.get(mat.code)}</Col>\r\n    </Row>\r\n  </Container>;\r\n\r\n  const isMatHiddenOnPensum = !rowNodeMap.current.get(mat.code)?.current;\r\n  const locateBtn = <Container>\r\n    <Row>\r\n      <Button \r\n      disabled={isMatHiddenOnPensum}\r\n      onClick={() => {\r\n        navigate('/');\r\n        scrollToRow(mat.code);\r\n      }}>\r\n        Localizar en pensum\r\n      </Button>\r\n    </Row>\r\n    {/* TODO: Add locate on tree btn? */}\r\n  </Container>\r\n\r\n  /** Requirement callback factory.\r\n   * Creates a onClick handler for the mat reqs.\r\n   */\r\n  const reqCbFactory = (mat: Pensum.Requirement) =>\r\n    (typeof mat === 'string') ? () => navigate('/mat/' + mat) : undefined;\r\n\r\n  const prereqInfo = (mat.prereq.length > 0) && <Container>\r\n    <Row>Pre-requisitos:</Row>\r\n    <Row>\r\n      {mat.prereq.map((req, idx) =>\r\n        <LongMatCode\r\n          key={idx}\r\n          data={req}\r\n          onClick={reqCbFactory(req)} />)}\r\n    </Row>\r\n  </Container>;\r\n\r\n  const coreqInfo = (mat.coreq.length > 0) && <Container>\r\n    <Row>Co-requisitos:</Row>\r\n    <Row>\r\n      {mat.coreq.map((req, idx) =>\r\n        <LongMatCode\r\n          key={idx}\r\n          data={req}\r\n          type=\"coreq\"\r\n          onClick={reqCbFactory(req)} />)}\r\n    </Row>\r\n  </Container>;\r\n\r\n  const postreqs = matData.postreqMap.get(mat.code) || [];\r\n  const postreqInfo = (postreqs.length > 0) && <Container>\r\n    <Row>Es requisito de:</Row>\r\n    <Row>\r\n      {postreqs.map((req, idx) =>\r\n        <LongMatCode\r\n          key={idx}\r\n          data={req}\r\n          onClick={reqCbFactory(req)} />)}\r\n    </Row>\r\n  </Container>;\r\n\r\n\r\n  return (<>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>{title}</Modal.Title>\r\n    </Modal.Header>\r\n\r\n    <Modal.Body className=\"d-flex flex-column gap-3\">\r\n      {generalInfo}\r\n      {locateBtn}\r\n\r\n      {prereqInfo}\r\n      {coreqInfo}\r\n      {postreqInfo}\r\n    </Modal.Body>\r\n  </>)\r\n}\r\n\r\nfunction Invalid({ code }: { code: string }) {\r\n  return <>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>{`Materia no encontrada: ${code}`}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      Intente usando mayusculas o guiones de por medio.\r\n    </Modal.Body>\r\n  </>\r\n}","import Modal from \"react-bootstrap/Modal\";\r\n\r\nexport default function Index() {\r\n  // TODO: Show index of all mats.\r\n\r\n  return (<>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Inserte un codigo</Modal.Title>\r\n    </Modal.Header>\r\n\r\n    <Modal.Body>\r\n      ...\r\n    </Modal.Body>\r\n  </>)\r\n}","\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\n\r\nexport default function DebugPage() {\r\n\r\n\r\n  return <Container>\r\n    <Row>\r\n      <Button onClick={() => {\r\n        import(\"functions/debug/test-legacy-localstorage\").then(\r\n          testLegacyLocalStorage => testLegacyLocalStorage.default()\r\n        )\r\n      }}>Set localstorage debug data</Button>\r\n\r\n    </Row>\r\n  </Container>\r\n}","import ActivePensumContext from \"contexts/active-pensum\";\r\nimport { MatSelectionTrackerContext } from \"contexts/mat-selection\";\r\nimport React, { useContext, useEffect, useState, useCallback, memo } from \"react\";\r\nimport { Button, Container, Form, Modal, Table, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport MatCode from \"components/Pensum/Mat/MatCode\";\r\nimport { useLocalStorage } from \"beautiful-react-hooks\";\r\n\r\ntype FormValue = {\r\n  code: string,\r\n  name: string,\r\n  weight: number,\r\n  value: number,\r\n}\r\n\r\nexport default function CalcIndice() {\r\n  const {\r\n    formValues,\r\n    setFormValues,\r\n\r\n    periodGPA,\r\n\r\n    cumHours,\r\n    setCumHours,\r\n\r\n    cumGPA,\r\n    setCumGPA,\r\n\r\n    newCumGPA, } = useGPA()\r\n  const navigate = useNavigate();\r\n  \r\n  const handleHide = () => {\r\n    navigate(-1)\r\n  }\r\n\r\n  const formHeaders = (\r\n  <tr>\r\n    <th>Codigo / Asignatura</th>\r\n    <th>Cr.</th>\r\n    <th style={{minWidth: '5em'}}>Grado</th>\r\n  </tr>)\r\n\r\n  const centerY = \"align-middle\"\r\n\r\n  const formRows = formValues.map(f => (\r\n    <tr key={f.code}>\r\n      <td className={centerY}>\r\n        <MatCode\r\n          data={f.code}\r\n          className=\"me-2\"\r\n          onClick={() => navigate(`/mat/${f.code}`)} />\r\n          {f.name}\r\n      </td>\r\n\r\n      <td className={centerY}>{f.weight}</td>\r\n\r\n      <td className={centerY}>\r\n        <Form.Select\r\n          value={f.value}\r\n          onChange={(evt) => {\r\n            const val = evt.target.value;\r\n            setFormValues(prev => prev.map(x => {\r\n              if (x !== f) return x;\r\n              return {\r\n                ...x,\r\n                value: Number(val),\r\n              }\r\n            }))\r\n          }}>\r\n          <option value={4}>A</option>\r\n          <option value={3}>B</option>\r\n          <option value={2}>C</option>\r\n          <option value={1}>D</option>\r\n          <option value={0}>F</option>\r\n        </Form.Select>\r\n      </td>\r\n    </tr>))\r\n  \r\n\r\n\r\n  const numFormCl = \"code text-end\"\r\n\r\n  const validOut = (formValues.length === 0) ?\r\n    (<span>\r\n      Para usar esta calculadora, primero debe seleccionar alguna materia\r\n      como <span className='course' style={{ color: 'var(--mat-fg-color, inherit)' }}>Cursando</span>.\r\n    </span>) : (<>\r\n      <Container>\r\n        <Table size=\"sm\">\r\n          <thead>\r\n            {formHeaders}\r\n          </thead>\r\n          <tbody>\r\n            {formRows}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n\r\n      <Container>\r\n        <InputGroup>\r\n          <InputGroup.Text>Índice Periodo: </InputGroup.Text>\r\n          <FormControl\r\n            type=\"number\"\r\n            disabled\r\n            className={numFormCl}\r\n            value={periodGPA.toPrecision(5)} />\r\n        </InputGroup>\r\n      </Container>\r\n\r\n\r\n      <Container>\r\n        <details className=\"container border rounded p-1 px-3\">\r\n          <summary className=\"fw-bold\">Cómo conseguir el indice acumulado exacto</summary>\r\n          <InfoGetGPAFromBanner />\r\n        </details>\r\n\r\n        <InputGroup>\r\n          <InputGroup.Text>Horas PGA (créditos acumulados): </InputGroup.Text>\r\n          <FormControl\r\n            type=\"number\"\r\n            className={numFormCl}\r\n            onChange={(evt) => {\r\n              const val = +evt.target.value\r\n              setCumHours(~~Math.abs(val)) // rounded positive val\r\n            }}\r\n            min={0}\r\n            step={1}\r\n            value={cumHours} />\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <InputGroup.Text>PGA (índice acumulado actual): </InputGroup.Text>\r\n          <FormControl\r\n            type=\"number\"\r\n            className={numFormCl}\r\n            onChange={(evt) => {\r\n              const val = +evt.target.value\r\n              setCumGPA(Math.max(0, Math.min(4, val)))\r\n            }}\r\n            min={0}\r\n            max={4}\r\n            step={0.01}\r\n            value={cumGPA} />\r\n        </InputGroup>\r\n      </Container>\r\n\r\n      <Container>\r\n        <InputGroup>\r\n          <InputGroup.Text className=\"fw-bold\">Índice Acumulado: </InputGroup.Text>\r\n          <FormControl\r\n            type=\"number\"\r\n            disabled\r\n            className={numFormCl + \" fw-bold\"}\r\n            value={newCumGPA.toPrecision(5)} />\r\n        </InputGroup>\r\n      </Container>\r\n    </>)\r\n\r\n  return (\r\n    <Modal show={true} onHide={handleHide}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Calculadora de índice</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Container className=\"d-flex flex-column gap-3 my-3\">\r\n\r\n        {validOut}\r\n        \r\n        <Outlet />\r\n      </Container>\r\n\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={handleHide}>\r\n          Cerrar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>)\r\n}\r\n\r\n\r\nconst useGPA = () => {\r\n  const [formValues, setFormValues, totalPassedCr] = useFormValues()\r\n  const { pga: periodGPA, total: currentCr } = getPeriodPGA(formValues)\r\n\r\n  const [cumHours, setCumHours] = useState(totalPassedCr) \r\n  const [cumGPA, setCumGPA] = useLocalStorage<number>('PENSUM_CALCULATOR_GPA', 3.55)\r\n\r\n  // Reset cumulative hours if new mats added\r\n  useEffect(() => {\r\n    setCumHours(totalPassedCr)\r\n  }, [totalPassedCr])\r\n\r\n  const newCumGPA = (periodGPA * currentCr + cumGPA * cumHours) / (currentCr + cumHours)\r\n\r\n  return {\r\n    formValues, \r\n    setFormValues,\r\n    \r\n    periodGPA,\r\n\r\n    cumHours,\r\n    setCumHours,\r\n\r\n    cumGPA,\r\n    setCumGPA,\r\n\r\n    newCumGPA,\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Gets mats, cr, and handles any weird edge cases (eg. no mats shown on refresh) */\r\nconst useFormValues = () => {\r\n  const { course, passed } = useContext(MatSelectionTrackerContext)\r\n  const { state: activePensumState } = useContext(ActivePensumContext)\r\n  const { matData: { codeMap } } = activePensumState;\r\n\r\n  const updateFormValues = useCallback((mats: Pensum.Mat[], prev: FormValue[]) =>\r\n    mats.map(mat => {\r\n      const old = prev.find(x => x.code === mat.code);\r\n      if (old) return old;\r\n      return {\r\n        code: mat.code,\r\n        name: mat.name,\r\n        weight: mat.cr,\r\n        value: 4, // Initial value A\r\n      }\r\n    }), [])\r\n\r\n  const [formValues, setFormValues] = useState([] as ReturnType<typeof updateFormValues>)\r\n\r\n  useEffect(() => {\r\n    const trackedMats = [...course]\r\n      .map(code => codeMap.get(code))\r\n      .filter(Boolean) as Pensum.Mat[]\r\n\r\n    setFormValues(prev => updateFormValues(trackedMats, prev))\r\n  }, [course, codeMap, updateFormValues])\r\n\r\n  const passedCr = [...passed]\r\n    .map(code => codeMap.get(code)?.cr ?? 0)\r\n    .reduce((cum, x) => x + cum, 0)\r\n\r\n  type O = [FormValue[], React.Dispatch<React.SetStateAction<FormValue[]>>, number];\r\n  return [formValues, setFormValues, passedCr] as O;\r\n}\r\n\r\n\r\nfunction getPeriodPGA(arr: FormValue[]) {\r\n  const { total, weightSum } = arr.reduce((cum, x) => {\r\n    cum.total += x.weight\r\n    cum.weightSum += x.weight * x.value\r\n    return cum\r\n  }, { total: 0, weightSum: 0 })\r\n\r\n  return {\r\n    total,\r\n    weightSum,\r\n    pga: weightSum / total\r\n  }\r\n}\r\n\r\nconst InfoGetGPAFromBanner = memo(() => {\r\n  const OutLink = ({ href, children, ...rest }: any) => (\r\n    <a\r\n      href={href}\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n      {...rest}>\r\n      {children}\r\n    </a>)\r\n\r\n  return <Container>\r\n    <ol>\r\n      <li>Entrar a <OutLink href=\"https://landing.unapec.edu.do/banner/\">Banner</OutLink>.</li>\r\n      <li>En \"Servicios academicos\", ingresar a <OutLink href=\"https://sso.unapec.edu.do/ssomanager/c/SSB?pkg=bwskotrn.P_ViewTermTran\">\"Histórico académico\"</OutLink>.</li>\r\n      <li>Se le presenta un historial de todas las notas de todas las materias en todos los cuatrimestres.\r\n        Una vez aquí, se debe bajar hasta que se encuentre la tabla \"TOTALES DE HISTÓRICO ACADÉMICO (GRADO)\" (antes de la tabla \"CURSOS EN PROGRESO\").</li>\r\n    </ol>\r\n    <ul>\r\n      <li>El valor de \"Horas PGA\" es la cantidad de creditos acumulados.</li>\r\n      <li>Para conseguir el indice acumulado exacto, dividir los \"Puntos de Calidad\" entre las \"Horas PGA\".</li>\r\n    </ul>\r\n  </Container>\r\n})","import './App.scss';\r\nimport './global-vars.scss';\r\n\r\nimport { useCallback } from 'react';\r\nimport { BrowserRouter, Routes, Route, Outlet, Navigate } from 'react-router-dom';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport AppNavbar from 'components/AppNavbar';\r\nimport AppFooter from 'components/AppFooter';\r\n\r\nimport PensumExtractor from 'components/Pensum/PensumExtractor';\r\nimport { UniversityProvider } from 'contexts/university-data';\r\nimport { ActivePensumProvider } from 'contexts/active-pensum';\r\nimport { MatSelectionProvider } from 'contexts/mat-selection';\r\n\r\nimport MatInfo from 'components/MatInfo';\r\nimport MatInfoDetails from 'components/MatInfo/Details';\r\nimport MatInfoIndex from 'components/MatInfo/MatIndex';\r\nimport { PensumRowNodesProvider } from 'contexts/pensum-row-nodes';\r\nimport DebugPage from 'components/Debug';\r\nimport CalcIndice from 'components/Pensum/Actions/CalcIndice';\r\n\r\n\r\nfunction App() {\r\n\r\n  // Nested ContextProviders\r\n  const Providers = useCallback(function Providers(props: any) {\r\n    return (\r\n      <UniversityProvider>\r\n        <ActivePensumProvider>\r\n          <MatSelectionProvider>\r\n            <PensumRowNodesProvider>\r\n              {props.children}\r\n            </PensumRowNodesProvider>\r\n          </MatSelectionProvider>\r\n        </ActivePensumProvider>\r\n      </UniversityProvider>\r\n    )\r\n  }, []);\r\n\r\n  return (\r\n    <Providers>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <AppNavbar />\r\n        <Container fluid className=\"App\">\r\n\r\n          <Routes>\r\n\r\n            <Route path=\"/\" element={<LayoutWithPensum />}>\r\n\r\n              <Route path=\"mat\" element={<MatInfo />}>\r\n                <Route index element={<MatInfoIndex />} />\r\n                <Route path=\":code\" element={<MatInfoDetails />} />\r\n              </Route>\r\n\r\n              <Route path=\"calcular-indice\" element={<CalcIndice />} />\r\n            \r\n            </Route>\r\n\r\n            <Route path=\"debug\" element={<DebugPage />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n\r\n          </Routes>\r\n\r\n        </Container>\r\n        <AppFooter />\r\n      </BrowserRouter>\r\n    </Providers>\r\n  );\r\n}\r\n\r\n/** Layout with the outlet as a modal. */\r\nfunction LayoutWithPensum() {\r\n  return (<>\r\n    <PensumExtractor />\r\n    <Outlet />\r\n  </>)\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap-dark-5/dist/css/bootstrap-blackbox.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { setThemePreferenceOnLoad } from 'lib/DarkMode';\nimport registerServiceWorker from 'serviceWorkerRegistration';\n\nsetThemePreferenceOnLoad(); // Load dark mode preference\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nregisterServiceWorker();\n","import { Workbox } from 'workbox-window';\r\n\r\nexport default function registerServiceWorker() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    const wb = new Workbox('sw.js'); // this name was set on config-override.js\r\n\r\n    wb.addEventListener('installed', event => {\r\n      /**\r\n       * We have the condition — event.isUpdate because we don’t want to show\r\n       * this message on the very first service worker installation,\r\n       * only on the updated\r\n       */\r\n      if (event.isUpdate) {\r\n        console.log('New update available!');\r\n      }\r\n    });\r\n    wb.register();\r\n  }\r\n}","/** \r\n * Joins an array of classes into a className string.\r\n * @example\r\n * // returns 'card backdrop red'\r\n * let isRed = true;\r\n * classnames(['card', 'backdrop', isRed && 'red']);\r\n * @returns The joined strings, but only from items whose values are truthy.\r\n * */\r\nexport const classnames = (arr: any[]) => arr.filter(Boolean).join(' ');\r\n\r\n\r\n/**\r\n * Formats a date as YYYY-MM-DD\r\n * @param d Date to convert\r\n * \r\n * @example\r\n * let d = new Date(2010, 7, 5);\r\n * japaneseDateFormat(d);\r\n * // returns \"2010-07-05\";\r\n * \r\n * @returns Date in format YYYY-MM-DD.\r\n */\r\nexport const japaneseDateFormat = (d: Date) => {\r\n  let ye = new Intl.DateTimeFormat('en', { year:  'numeric' }).format(d);\r\n  let mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(d);\r\n  let da = new Intl.DateTimeFormat('en', { day:   '2-digit' }).format(d);\r\n  return `${da}-${mo}-${ye}`;\r\n}\r\n\r\n/** \r\n * Converts a string to title case. \r\n * @example\r\n * let txt = toTitleCase(\"john smith\");\r\n * // returns \"John Smith\"\r\n * @src https://stackoverflow.com/a/196991/13255686\r\n */\r\nexport function toTitleCase(str: string) {\r\n  return str.replace(\r\n    /\\w\\S*/g,\r\n    function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    }\r\n  );\r\n}\r\n","import { japaneseDateFormat } from \"lib/format-utils\";\r\n\r\n/** Converts a pensum from an old format to a new format. */\r\nexport function validatePensum(pensum: Pensum.Save.Legacy.Pensum2 | Pensum.Save.Pensum | null, university: string) {\r\n  // Nothing we can do about this :(\r\n  if (!pensum) return null;\r\n\r\n  // Legacy version\r\n  if (pensum.version <= 3) {\r\n    const p = convertPensum2(pensum as Pensum.Save.Legacy.Pensum2, university);\r\n    console.warn('Loaded pensum from old version!');\r\n    return p;\r\n  }\r\n\r\n  // Current version\r\n  if (pensum.version === 5) {\r\n    const p = convertSavePensum(pensum);\r\n    return p;\r\n  }\r\n\r\n  console.warn('Pensum did not load correctly!', pensum);\r\n  return null;\r\n}\r\n\r\n/** Fixes the save form of a pensum, making sure that all its properties are set (eg. empty prereqs). */\r\nexport function convertSavePensum(save: Pensum.Save.Pensum): Pensum.Pensum {\r\n  const MatConverter = (old: Pensum.Save.Mat): Pensum.Mat => {\r\n    const mat: Pensum.Mat = {\r\n      ...old,\r\n      prereq: (old.prereq) ? old.prereq : [],\r\n      coreq: (old.coreq) ? old.coreq : [],\r\n    };\r\n    \r\n    return mat;\r\n  }\r\n\r\n  const loose: Pensum.Mat[] = save.loose.map(mat => MatConverter(mat));\r\n  const periods: Pensum.Mat[][] = save.periods.map(\r\n    period => period.map(mat => MatConverter(mat)));\r\n  \r\n\r\n  return {\r\n    ...save,\r\n    loose,\r\n    periods,\r\n  };\r\n}\r\n\r\n/** Loads a legacy pensum, mapping the old properties to the new ones. */\r\nexport function convertPensum2(old: Pensum.Save.Legacy.Pensum2, university: string): Pensum.Pensum {\r\n  const pensum: Pensum.Pensum = {\r\n    version: Number(process.env.REACT_APP_SAVE_VERSION),\r\n    institution: university,\r\n    code: old.codigo,\r\n    publishDate: old.vigencia,\r\n    fetchDate: '2021-04-24',\r\n    career: old.carrera,\r\n    info: old.infoCarrera,\r\n    src: {\r\n      type: 'convert',\r\n      date: japaneseDateFormat(new Date()),\r\n      url: `./pensum/${university}/${old.codigo.toLowerCase()}.json`,\r\n    },\r\n    periodType: {\r\n      name: 'Cuatrimestre',\r\n      acronym: 'Cuat',\r\n      two: 'Ct',\r\n    },\r\n    loose: [],\r\n    periods: [],\r\n  };\r\n\r\n  if (!(old.cuats && old.cuats.length)) {\r\n    console.warn(`Pensum ${old.codigo} (${old.carrera}) did not contain any cuat!`);\r\n    return pensum;\r\n  }\r\n\r\n  const oldReqConverter = (req: Pensum.Save.Legacy.Mat['prereq']): string[] => {\r\n    if (!req) return [];\r\n    if (typeof req === 'string') return [req];\r\n    if (Array.isArray(req)) return [...req];\r\n\r\n    console.warn('Unknown requirement!: ', req);\r\n    return [];\r\n  }\r\n\r\n  // Mat converter\r\n  const oldmat2newmat = (oldMat: Pensum.Save.Legacy.Mat) => {\r\n    const newMat: Pensum.Mat = {\r\n      code: oldMat.codigo,\r\n      name: oldMat.asignatura,\r\n      cr: oldMat.creditos,\r\n      prereq: [],\r\n      coreq: [],\r\n    };\r\n\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereq));\r\n    newMat.prereq.push(...oldReqConverter(oldMat.prereqExtra).map(x => ({ text: x })));\r\n    return newMat;\r\n  }\r\n\r\n  \r\n  old.cuats.forEach((oldCuat) => {\r\n    const newCuat = [];\r\n\r\n    for (const oldMat of oldCuat) {\r\n      const newMat = oldmat2newmat(oldMat);\r\n      newCuat.push(newMat);\r\n    }\r\n    \r\n    pensum.periods.push(newCuat);\r\n  });\r\n\r\n  return pensum;\r\n}\r\n\r\n/** Converts a pensum into its save form, reducing its size if no requirements are used for each Mat. */\r\nexport function convertPensumToSave(pensum: Pensum.Pensum): Pensum.Save.Pensum {\r\n  \r\n  const mat2savemat = (mat: Pensum.Mat): Pensum.Save.Mat => {\r\n    const out: any = {...mat};\r\n    if (out.prereq.length === 0) delete out.prereq;\r\n    if (out.coreq.length === 0) delete out.coreq;\r\n    \r\n    return out;\r\n  }\r\n  \r\n  const out = {\r\n    ...pensum,\r\n    loose: pensum.loose.map(mat => mat2savemat(mat)),\r\n    periods: pensum.periods.map(p => p.map(mat => mat2savemat(mat))),\r\n  };\r\n  \r\n\r\n  return out;\r\n}"],"sourceRoot":""}